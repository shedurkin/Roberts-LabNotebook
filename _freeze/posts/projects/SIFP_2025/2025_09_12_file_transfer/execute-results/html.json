{
  "hash": "7ed5176a18ff9c16f7955c8ba0913871",
  "result": {
    "markdown": "---\ntitle: \"File transfer of remaining Nanopore output files\"\nauthor: \"Kathleen Durkin\"\ndate: \"2025-09-12\"\ncategories: [\"SIFP-2025\"]\nformat:\n  html:\n    toc: true\nexecute: \n  eval: FALSE\nengine: knitr\nbibliography: ../../../references.bib\n---\n\n\nI've uploaded zipped folders and md5 cehcksums to Google Drive, which was then backed up to my SIFP_2025/CloudSync_deposit folder on Gannet via CloudSync. I then moved the files from the CloudSync_deposit folder up to just the SIFP_2025 folder manually in the Gannet file manager.\n\nNow, check checksums (doing this via ssh into Gannet, but copying here for record)\n\n\n::: {.cell}\n\n```{.bash .cell-code}\n\nkdurkin1@Gannet:/volume2/web/kdurkin1/SIFP_2025$ md5sum Group2_L3_Flongle.zip\n# ba0b938cb6c429f9ca873e779d5d8439  Group2_L3_Flongle.zip\nkdurkin1@Gannet:/volume2/web/kdurkin1/SIFP_2025$ head Group2_L3_Flongle.md5\n# Algorithm       Hash                                                                   Path\n# ---------       ----                                                                   ----\n# MD5             BA0B938CB6C429F9CA873E779D5D8439                                       C:\\Users\\Public\\Documents\\LAB...\n\nkdurkin1@Gannet:/volume2/web/kdurkin1/SIFP_2025$ md5sum error_experiment.zip\n# ad14d62f7a804fbe798fff5c4939a442  error_experiment.zip\nkdurkin1@Gannet:/volume2/web/kdurkin1/SIFP_2025$ head error_experiment.md5\n# Algorithm       Hash                                                                   Path\n# ---------       ----                                                                   ----\n# MD5             AD14D62F7A804FBE798FFF5C4939A442                                       C:\\Users\\Public\\Documents\\LAB...\n\nkdurkin1@Gannet:/volume2/web/kdurkin1/SIFP_2025$ md5sum Group4.zip\n# 942d53658625dc8f0be9509263901a8a  Group4.zip\nkdurkin1@Gannet:/volume2/web/kdurkin1/SIFP_2025$ head Group4.md5\n# Algorithm       Hash                                                                   Path\n# ---------       ----                                                                   ----\n# MD5             942D53658625DC8F0BE9509263901A8A                                       C:\\Users\\Public\\Documents\\LAB...\n\nkdurkin1@Gannet:/volume2/web/kdurkin1/SIFP_2025$ md5sum Group4_MinION.zip\n# aa89c5b3ce7e31944a50d3867c469953  Group4_MinION.zip\nkdurkin1@Gannet:/volume2/web/kdurkin1/SIFP_2025$ head Group4_MinION.md5\n# Algorithm       Hash                                                                   Path\n# ---------       ----                                                                   ----\n# MD5             AA89C5B3CE7E31944A50D3867C469953                                       C:\\Users\\Public\\Documents\\LAB...\n\nkdurkin1@Gannet:/volume2/web/kdurkin1/SIFP_2025$ md5sum DCS_trial.zip\n# a06792fc783251b9e04a29bd14f627bb  DCS_trial.zip\nkdurkin1@Gannet:/volume2/web/kdurkin1/SIFP_2025$ head DCS_trial.md5\n# Algorithm       Hash                                                                   Path\n# ---------       ----                                                                   ----\n# MD5             A06792FC783251B9E04A29BD14F627BB                                       C:\\Users\\Public\\Documents\\LAB...\n\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Double check that the md5s match\n\n# Group2_L3_Flongle\nidentical(tolower(\"ba0b938cb6c429f9ca873e779d5d8439\"), tolower(\"BA0B938CB6C429F9CA873E779D5D8439\"))\n\n# error_experiment\nidentical(tolower(\"ad14d62f7a804fbe798fff5c4939a442\"), tolower(\"AD14D62F7A804FBE798FFF5C4939A442\"))\n\n# Group4\nidentical(tolower(\"942d53658625dc8f0be9509263901a8a\"), tolower(\"942D53658625DC8F0BE9509263901A8A\"))\n\n# Group4_MinION\nidentical(tolower(\"aa89c5b3ce7e31944a50d3867c469953\"), tolower(\"AA89C5B3CE7E31944A50D3867C469953\"))\n\n# DCS_trial\nidentical(tolower(\"a06792fc783251b9e04a29bd14f627bb\"), tolower(\"A06792FC783251B9E04A29BD14F627BB\"))\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}