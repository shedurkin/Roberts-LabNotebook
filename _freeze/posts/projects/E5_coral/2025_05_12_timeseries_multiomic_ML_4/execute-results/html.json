{
  "hash": "568f1014ce4dd81d20f21eae46bab476",
  "result": {
    "markdown": "---\ntitle: \"Timeseries molecular: A.pul, multiomic features to predict expression. Machine learning -- Part 4\"\nauthor: \"Kathleen Durkin\"\ndate: \"2025-05-12\"\ncategories: [\"E5-coral\"]\nformat:\n  html:\n    toc: true\nexecute: \n  eval: FALSE\nengine: knitr\nbibliography: ../../../references.bib\n---\n\n\n[Code](https://github.com/urol-e5/timeseries_molecular/blob/main/D-Apul/code/22.3-Apul-multiomic-machine-learning-byTP.Rmd)\n\n[Rendered Code](https://github.com/urol-e5/timeseries_molecular/blob/main/D-Apul/code/22.3-Apul-multiomic-machine-learning-byTP.md)\n\nFor each of the consistently well-predicted genes identified in [my last post](./2025_05_08_timeseries_multiomic_ML_3.qmd), I plotted thegene's expression with that of its top 5 most important predictors.\n\n# 10 Plot expression of genes and their predictors\n\n``` r\n# Put predictor expression in format with samples in columns\nfull_pred_counts_t <- t(full_pred_counts)\n\n# Loop over each feature in the list\nfor (feature in names(top_predictors)) {\n  \n  # Get top 5 predictors for this feature\n  top_df <- top_predictors[[feature]]\n  predictors <- top_df$Predictor\n  \n  # Combine feature and predictors\n  all_genes <- c(feature, predictors)\n  \n  # Check which genes are actually present\n  present_genes <- all_genes[all_genes %in% rownames(full_pred_counts_t) | all_genes %in% rownames(vsd_energetic_state_GO)]\n  \n  if (!(feature %in% rownames(vsd_energetic_state_GO))) {\n    warning(paste(\"Feature\", feature, \"not found in vsd_energetic_state_GO Skipping...\"))\n    next\n  }\n\n  # Extract predictor expression (only those present)\n  predictor_expr <- full_pred_counts_t[intersect(predictors, rownames(full_pred_counts_t)), , drop = FALSE] %>% as.data.frame()\n\n  # Add the feature expression\n  feature_expr <- vsd_energetic_state_GO[feature, , drop = FALSE] %>% as.data.frame()\n  \n  # Combine into one data frame\n  combined_expr <- rbind(predictor_expr, feature_expr)\n  combined_expr$Gene <- rownames(combined_expr)\n  \n  # Convert to long format\n  expr_long <- combined_expr %>%\n    pivot_longer(-Gene, names_to = \"Sample\", values_to = \"Expression\")\n  \n  # Join with sample metadata\n  expr_long <- expr_long %>%\n    left_join(metadata, by = \"Sample\")\n  \n  # Plot, with colonies aggregated by timepoint\n  # p <- ggplot(expr_long, aes(x = interaction(Timepoint), y = Expression, color = Gene, group = Gene)) +\n  #   geom_point(alpha = 0.7) +\n  #   geom_smooth(se = FALSE, method = \"loess\") +\n  #   labs(title = paste(\"Expression of\", feature, \"and Top 5 Predictors\"),\n  #        x = \"Colony-Timepoint\",\n  #        y = \"Expression\") +\n  #   theme_minimal() +\n  #   theme(axis.text.x = element_text(angle = 45, hjust = 1))\n  \n  # Plot, faceted by colony\n  p <- ggplot(expr_long, aes(x = Timepoint, y = Expression, color = Gene, group = Gene)) +\n  geom_point(alpha = 0.7) +\n  geom_smooth(se = FALSE, method = \"loess\", linewidth = 0.8) +\n  facet_wrap(~ColonyID) +\n  labs(title = paste(\"Expression of\", feature, \"and Top 5 Predictors by Colony\"),\n       x = \"Timepoint\",\n       y = \"Expression\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\n  \n  print(p)\n}\n```\n\n![](./images/22.3-Apul-multiomic-machine-learning-byTP_files_2/unnamed-chunk-73-1.png)<!-- -->\n\n![](./images/22.3-Apul-multiomic-machine-learning-byTP_files_2/unnamed-chunk-73-2.png)<!-- -->\n\n![](./images/22.3-Apul-multiomic-machine-learning-byTP_files_2/unnamed-chunk-73-3.png)<!-- -->\n\n![](./images/22.3-Apul-multiomic-machine-learning-byTP_files_2/unnamed-chunk-73-4.png)<!-- -->\n\n![](./images/22.3-Apul-multiomic-machine-learning-byTP_files_2/unnamed-chunk-73-5.png)<!-- -->\n\n![](./images/22.3-Apul-multiomic-machine-learning-byTP_files_2/unnamed-chunk-73-6.png)<!-- -->\n\n![](./images/22.3-Apul-multiomic-machine-learning-byTP_files_2/unnamed-chunk-73-7.png)<!-- -->\n\n![](./images/22.3-Apul-multiomic-machine-learning-byTP_files_2/unnamed-chunk-73-8.png)<!-- -->\n\n![](./images/22.3-Apul-multiomic-machine-learning-byTP_files_2/unnamed-chunk-73-9.png)<!-- -->\n\n![](./images/22.3-Apul-multiomic-machine-learning-byTP_files_2/unnamed-chunk-73-10.png)<!-- -->\n\n![](./images/22.3-Apul-multiomic-machine-learning-byTP_files_2/unnamed-chunk-73-11.png)<!-- -->\n\n![](./images/22.3-Apul-multiomic-machine-learning-byTP_files_2/unnamed-chunk-73-12.png)<!-- -->\n\n![](./images/22.3-Apul-multiomic-machine-learning-byTP_files_2/unnamed-chunk-73-13.png)<!-- -->\n\n![](./images/22.3-Apul-multiomic-machine-learning-byTP_files_2/unnamed-chunk-73-14.png)<!-- -->\n\n![](./images/22.3-Apul-multiomic-machine-learning-byTP_files_2/unnamed-chunk-73-15.png)<!-- -->\n\n![](./images/22.3-Apul-multiomic-machine-learning-byTP_files_2/unnamed-chunk-73-16.png)<!-- -->\n\n![](./images/22.3-Apul-multiomic-machine-learning-byTP_files_2/unnamed-chunk-73-17.png)<!-- -->\n\n![](./images/22.3-Apul-multiomic-machine-learning-byTP_files_2/unnamed-chunk-73-18.png)<!-- -->\n\n![](./images/22.3-Apul-multiomic-machine-learning-byTP_files_2/unnamed-chunk-73-19.png)<!-- -->\n\n![](./images/22.3-Apul-multiomic-machine-learning-byTP_files_2/unnamed-chunk-73-20.png)<!-- -->\n\n![](./images/22.3-Apul-multiomic-machine-learning-byTP_files_2/unnamed-chunk-73-21.png)<!-- -->\n\n![](./images/22.3-Apul-multiomic-machine-learning-byTP_files_2/unnamed-chunk-73-22.png)<!-- -->\n\n![](./images/22.3-Apul-multiomic-machine-learning-byTP_files_2/unnamed-chunk-73-23.png)<!-- -->\n\n![](./images/22.3-Apul-multiomic-machine-learning-byTP_files_2/unnamed-chunk-73-24.png)<!-- -->\n\n![](./images/22.3-Apul-multiomic-machine-learning-byTP_files_2/unnamed-chunk-73-25.png)<!-- -->\n\n![](./images/22.3-Apul-multiomic-machine-learning-byTP_files_2/unnamed-chunk-73-26.png)<!-- -->\n\n![](./images/22.3-Apul-multiomic-machine-learning-byTP_files_2/unnamed-chunk-73-27.png)<!-- -->\n\n![](./images/22.3-Apul-multiomic-machine-learning-byTP_files_2/unnamed-chunk-73-28.png)<!-- -->\n\n![](./images/22.3-Apul-multiomic-machine-learning-byTP_files_2/unnamed-chunk-73-29.png)<!-- -->\n\n![](./images/22.3-Apul-multiomic-machine-learning-byTP_files_2/unnamed-chunk-73-30.png)<!-- -->\n\n![](./images/22.3-Apul-multiomic-machine-learning-byTP_files_2/unnamed-chunk-73-31.png)<!-- -->\n\n![](./images/22.3-Apul-multiomic-machine-learning-byTP_files_2/unnamed-chunk-73-32.png)<!-- -->\n\n![](./images/22.3-Apul-multiomic-machine-learning-byTP_files_2/unnamed-chunk-73-33.png)<!-- -->\n\n![](./images/22.3-Apul-multiomic-machine-learning-byTP_files_2/unnamed-chunk-73-34.png)<!-- -->\n\n#### Notes\n\nThis gene stood out to me before because one of its primary predictors is an miRNA. the miRNA Cluster_17173 both putatively binds to FUN_00702 and is strongly negatively correlated based on pairwise PCC. It doesn't match any previously described miRNA (see ShortStack results [here](https://github.com/urol-e5/timeseries_molecular/blob/main/D-Apul/output/04-Apul-sRNA-discovery-ShortStack/ShortStack_out/Results.txt)).\n\n![](./images/22.3-Apul-multiomic-machine-learning-byTP_files_2/unnamed-chunk-73-7.png)\n\nThis is also a useful sanity check in general, because we see some \"highly predicted\" genes are actually just invariant. For example, FUN_026128 was well-predicted by just a couple of lncRNA, which was potentially very interesting.\n\n![](https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/images/22.3-Apul-multiomic-machine-learning-byTP_files/figure-gfm/unnamed-chunk-72-19.png)\n\nHowever, upon plotting the expression, we see the gene is just invariant over time, and was \"predicted by\" other largely invariant features.\n\n![](./images/22.3-Apul-multiomic-machine-learning-byTP_files_2/unnamed-chunk-73-19.png)<!-- -->\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}