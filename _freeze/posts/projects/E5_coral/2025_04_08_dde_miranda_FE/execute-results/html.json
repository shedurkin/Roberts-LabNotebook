{
  "hash": "f996c0934cd27ff398104959dc5d916b",
  "result": {
    "markdown": "---\ntitle: \"Deep-Dive Expression: Functional enrichment of miRNA-mRNA interactions\"\nauthor: \"Kathleen Durkin\"\ndate: \"2025-04-08\"\ncategories: [\"E5-coral\"]\nformat:\n  html:\n    toc: true\nexecute: \n  eval: FALSE\nengine: knitr\nbibliography: ../../../references.bib\n---\n\n\nWe've identified putative miRNA-mRNA interactions by using miRanda to predict miRNA-mRNA binding, then using Pearson's correlation coefficient to evaluate coexpression of putatively binding miRNA-mRNA pairs.\n\nThis code performs functional enrichment analysis to investigate the function(s) of these putative miRNA targets\n\n[Code](https://github.com/urol-e5/deep-dive-expression/blob/main/D-Apul/code/09.1-Apul-mRNA-miRNA-interactions-functional-enrichment.Rmd)\\\n[Rendered Code](https://github.com/urol-e5/deep-dive-expression/blob/main/D-Apul/code/09.1-Apul-mRNA-miRNA-interactions-functional-enrichment.md)\\\n[Output files](https://github.com/urol-e5/deep-dive-expression/tree/main/D-Apul/output)\n\n# Results\n\n**miRNA targets with significant negative correlation:**\n\n| GO ID      | Term                                  | Fisher p_val | Type               |\n|------------|---------------------------------------|--------------|--------------------|\n| GO:0016980 | creatinase activity                   | 0.0035       | Molecular Function |\n| GO:0004126 | cytidine deaminase activity           | 0.0175       | Molecular Function |\n| GO:0003924 | GTPase activity                       | 0.0218       | Molecular Function |\n| GO:0004966 | galanin receptor activity             | 0.0415       | Molecular Function |\n| GO:0000272 | polysaccharide catabolic process      | 0.038        | Biological Process |\n| GO:0000082 | G1/S transition of mitotic cell cycle | 0.046        | Biological Process |\n\n**miRNA targets with significant positive correlation:**\n\n| GO ID      | Term            | Fisher p_val | Type               |\n|------------|-----------------|--------------|--------------------|\n| GO:0003924 | GTPase activity | 0.0218       | Molecular Function |\n\n# Code\n\n# mRNA-miRNA interactions functional enrichment\n\nCode used below was created by `Jill Ashey`, modified for use with A.pulchra datasets by `Kathleen Durkin`\n\n# 1 Format topGO files\n\n## 1.1 Read in and format annotation files\n\n``` r\n# Read in Apul annotations\nannot_locations <- read.delim(\"../output/02-Apul-reference-annotation/Apulcra-genome-mRNA-IDmapping-2024_12_12.tab\")\n# Remove unneeded columns \nannot_locations <- annot_locations %>% dplyr::select(-X, -V13)\n# Ensure there are no duplicate rows\nannot_locations <- annot_locations %>% distinct()\n\nhead(annot_locations)\n```\n\n```         \n##                     V1     V3 Protein.names\n## 1   ntLink_4:1155-1537 P35061   Histone H2A\n## 2   ntLink_4:2660-3441 P84239    Histone H3\n## 3   ntLink_4:4515-6830 P35061   Histone H2A\n## 4   ntLink_4:7096-7859 P84239    Histone H3\n## 5   ntLink_4:8474-9669 P35061   Histone H2A\n## 6 ntLink_4:11162-11925 P84239    Histone H3\n##                                     Organism Gene.Ontology..biological.process.\n## 1          Acropora formosa (Staghorn coral)                                   \n## 2 Urechis caupo (Innkeeper worm) (Spoonworm)                                   \n## 3          Acropora formosa (Staghorn coral)                                   \n## 4 Urechis caupo (Innkeeper worm) (Spoonworm)                                   \n## 5          Acropora formosa (Staghorn coral)                                   \n## 6 Urechis caupo (Innkeeper worm) (Spoonworm)                                   \n##                                            Gene.Ontology.IDs\n## 1 GO:0000786; GO:0003677; GO:0005634; GO:0030527; GO:0046982\n## 2 GO:0000786; GO:0003677; GO:0005634; GO:0030527; GO:0046982\n## 3 GO:0000786; GO:0003677; GO:0005634; GO:0030527; GO:0046982\n## 4 GO:0000786; GO:0003677; GO:0005634; GO:0030527; GO:0046982\n## 5 GO:0000786; GO:0003677; GO:0005634; GO:0030527; GO:0046982\n## 6 GO:0000786; GO:0003677; GO:0005634; GO:0030527; GO:0046982\n```\n\n``` r\n# Looks good!\n```\n\nThis file shows each gene as it's genomic location. We want to use gene IDs to associate genes, so add gene IDs to this annotation table\n\nRead in file that associates each mRNA genomic location with corresponding gene ID\n\n``` r\nmRNA_FUNids <- read.table(\"../output/15-Apul-annotate-UTRs/Apul-mRNA-FUNids.txt\", header=FALSE, col.names=c(\"location\", \"type\", \"mRNA_ID\", \"gene_ID\", \"product\"), sep=\"\\t\")\n\n# Remove unwanted text from parent column\nmRNA_FUNids$gene_ID <- gsub(\"Parent=\", \"\", mRNA_FUNids$gene_ID)\n# Only need to keep mRNA location and gene ID\nmRNA_FUNids <- mRNA_FUNids %>% dplyr::select(location, gene_ID)\n```\n\njoin with annotation file\n\n``` r\n# join\nannot <- left_join(annot_locations, mRNA_FUNids, by = c(\"V1\" = \"location\"))\n\n# ensure there are no duplicate rows\nannot <- annot %>% distinct()\n```\n\n## 1.2 Set up gene2GO object\n\nWant to isolate a list of GO terms per gene\n\n``` r\ngene2go <- annot %>% filter(!is.na(Gene.Ontology.IDs)) %>% dplyr::select(gene_ID, Gene.Ontology.IDs)\ngene2go <- gene2go %>% dplyr::rename(GO.ID = Gene.Ontology.IDs)\n\ngene2go_list <- setNames(\n  strsplit(as.character(gene2go$GO.ID), \";\"), \n  gene2go$gene_ID\n)\n```\n\nNote: I think this means genes that had a Uniprot ID but no GO terms are excluded from this analysis\n\n## 1.3 Define reference set\n\nDefine reference set of genes. This should be all genes *found in our samples*, NOT all genes in the A.pulchra genome. Some genes (e.g., reproduction pathways) may not be found/expected in our samples for valid biological reasons.\n\n``` r\n# Read in counts matrix\nApul_counts <- read.csv(\"../output/07-Apul-Hisat/Apul-gene_count_matrix.csv\")\n# Exclude genes with all 0 counts\nApul_counts <- Apul_counts[rowSums(Apul_counts[, 2:6]) != 0, ]\n\n# Select gene IDs of the genes present in our samples\nall_genes <- Apul_counts$gene_id\nlength(all_genes)\n```\n\n```         \n## [1] 33624\n```\n\nSo we have a reference set of 33624 genes present in our samples.\n\n## 1.4 Read in PCC/miranda data\n\nThis is a table of all putative miRNA-mRNA binding predicted by miRanda, plus Pearsons correlation coefficients for coexpression of each putative binding pair.\n\n``` r\ndata <- read.csv(\"../output/09-Apul-mRNA-miRNA-interactions/miranda_PCC_miRNA_mRNA.csv\")\nhead(data)\n```\n\n```         \n##   X         miRNA       mRNA    PCC.cor   p_value adjusted_p_value score energy\n## 1 1  Cluster_5981 FUN_028147  0.6825537 0.2041707        0.9986496   146 -22.19\n## 2 2 Cluster_15340 FUN_013332  0.6371070 0.2476393        0.9986496   158 -23.15\n## 3 3  Cluster_5981 FUN_041253 -0.2250869 0.7158492        0.9986496   153 -20.50\n## 4 4  Cluster_3366 FUN_010827  0.3671005 0.5433145        0.9986496   163 -22.14\n## 5 5  Cluster_3367 FUN_010827  0.5369304 0.3507987        0.9986496   163 -22.14\n## 6 6 Cluster_15340 FUN_003342  0.1096213 0.8607058        0.9986496   154 -20.65\n##   query_start_end subject_start_end total_bp_shared query_similar\n## 1            2 21           185 209              21        66.67%\n## 2            2 20           198 220              19        68.42%\n## 3            2 21           699 719              19        73.68%\n## 4            2 18           346 368              16        81.25%\n## 5            2 18           346 368              16        81.25%\n## 6            2 20           562 585              20        65.00%\n##   subject_similar\n## 1          71.43%\n## 2          84.21%\n## 3          73.68%\n## 4          93.75%\n## 5          93.75%\n## 6          80.00%\n```\n\nSet function to select genes of interest (ie those that have pvalue \\< 0.05)\n\n``` r\ntopDiffGenes <- function(allScore) {\nreturn(allScore < 0.05)}\n```\n\n# 2 FE of all targets, as predicted by miranda\n\nTO DO\n\n# 3 FE of targets negatively correlated with miRNAs (regardless of correlation significance)\n\nFilter PCC miranda data\n\n``` r\n# Filter so that only negative correlations remain \nneg_corr_data <- data %>%\n  filter(PCC.cor < 0)\n```\n\nMake list of target genes for input to topGO\n\n``` r\n# Genes of interest - ie those targeted by miRNAs\ntarget_genes <- as.character(unique(neg_corr_data$mRNA))\n```\n\n``` r\n# Apply 1 or 0 if gene is gene of interest \nGeneList <- factor(as.integer(all_genes %in% target_genes))\nnames(GeneList) <- all_genes\n```\n\nThe following code will perform GO enrichment using the weighted Fisher's exact test to assess whether specific GO terms are overrepresented in the genes targeted by miRNAs, regardless of correlation significance.\n\n### 3.0.1 Biological Processes\n\nCreate `topGOdata` object, which is required for topGO analysis\n\n``` r\nGO_BP <-new(\"topGOdata\", \n            ontology=\"BP\", \n            gene2GO=gene2go_list, \n            allGenes=GeneList, \n            annot = annFUN.gene2GO, \n            geneSel=topDiffGenes)\n```\n\n```         \n## \n## Building most specific GOs .....\n\n##  ( 273 GO terms found. )\n\n## \n## Build GO DAG topology ..........\n\n##  ( 1231 GO terms and 2377 relations. )\n\n## \n## Annotating nodes ...............\n\n##  ( 1427 genes annotated to the GO terms. )\n```\n\nRun GO enrichment test\n\n``` r\nGO_BP_FE <- runTest(GO_BP, algorithm=\"weight01\", statistic=\"fisher\")\n```\n\n```         \n## \n##           -- Weight01 Algorithm -- \n## \n##       the algorithm is scoring 373 nontrivial nodes\n##       parameters: \n##           test statistic: fisher\n\n## \n##   Level 14:  1 nodes to be scored    (0 eliminated genes)\n\n## \n##   Level 13:  5 nodes to be scored    (0 eliminated genes)\n\n## \n##   Level 12:  5 nodes to be scored    (11 eliminated genes)\n\n## \n##   Level 11:  7 nodes to be scored    (157 eliminated genes)\n\n## \n##   Level 10:  16 nodes to be scored   (211 eliminated genes)\n\n## \n##   Level 9:   27 nodes to be scored   (226 eliminated genes)\n\n## \n##   Level 8:   34 nodes to be scored   (337 eliminated genes)\n\n## \n##   Level 7:   47 nodes to be scored   (451 eliminated genes)\n\n## \n##   Level 6:   65 nodes to be scored   (627 eliminated genes)\n\n## \n##   Level 5:   72 nodes to be scored   (908 eliminated genes)\n\n## \n##   Level 4:   50 nodes to be scored   (1025 eliminated genes)\n\n## \n##   Level 3:   32 nodes to be scored   (1219 eliminated genes)\n\n## \n##   Level 2:   11 nodes to be scored   (1343 eliminated genes)\n\n## \n##   Level 1:   1 nodes to be scored    (1417 eliminated genes)\n```\n\nGenerate results table\n\n``` r\nGO_BP_En <- GenTable(GO_BP, Fisher = GO_BP_FE, orderBy = \"Fisher\",  topNodes = 100, numChar = 51)\n```\n\nOnly taking the top 100 GO terms\n\nFilter by significant results\n\n``` r\nGO_BP_En$Fisher<-as.numeric(GO_BP_En$Fisher)\nGO_BP_En_sig<-GO_BP_En[GO_BP_En$Fisher<0.05,]\n```\n\nMerge `GO_BP_En_sig` with GO and gene info.\n\n``` r\n# Separate GO terms \nneg_cor_gene2go <- gene2go %>%\n  separate_rows(GO.ID, sep = \";\")\n\n# Ensure GO terms in both datasets are formatted similarly (trim whitespaces)\nneg_cor_gene2go$GO.ID <- trimws(neg_cor_gene2go$GO.ID)\nGO_BP_En_sig$GO.ID <- trimws(GO_BP_En_sig$GO.ID)\n\n# Join the datasets based on GO term\nGO_BP_En_sig_gene <- neg_cor_gene2go %>%\n  left_join(GO_BP_En_sig, by = \"GO.ID\") %>%\n  na.omit()\n\n# Add ontology column \nGO_BP_En_sig_gene$ontology <- \"Biological Processes\"\n\n# Keep only unique rows \nGO_BP_En_sig_gene <- GO_BP_En_sig_gene %>% distinct()\n```\n\n### 3.0.2 Cellular Components\n\n### 3.0.3 Molecular Functions\n\nCreate `topGOdata` object, which is required for topGO analysis\n\n``` r\nGO_MF <-new(\"topGOdata\", \n            ontology=\"MF\", \n            gene2GO=gene2go_list, \n            allGenes=GeneList, \n            annot = annFUN.gene2GO, \n            geneSel=topDiffGenes)\n```\n\n```         \n## \n## Building most specific GOs .....\n\n##  ( 461 GO terms found. )\n\n## \n## Build GO DAG topology ..........\n\n##  ( 910 GO terms and 1191 relations. )\n\n## \n## Annotating nodes ...............\n\n##  ( 2843 genes annotated to the GO terms. )\n```\n\nRun GO enrichment test\n\n``` r\nGO_MF_FE <- runTest(GO_MF, algorithm=\"weight01\", statistic=\"fisher\")\n```\n\n```         \n## \n##           -- Weight01 Algorithm -- \n## \n##       the algorithm is scoring 243 nontrivial nodes\n##       parameters: \n##           test statistic: fisher\n\n## \n##   Level 10:  4 nodes to be scored    (0 eliminated genes)\n\n## \n##   Level 9:   12 nodes to be scored   (0 eliminated genes)\n\n## \n##   Level 8:   19 nodes to be scored   (146 eliminated genes)\n\n## \n##   Level 7:   30 nodes to be scored   (481 eliminated genes)\n\n## \n##   Level 6:   47 nodes to be scored   (621 eliminated genes)\n\n## \n##   Level 5:   47 nodes to be scored   (930 eliminated genes)\n\n## \n##   Level 4:   50 nodes to be scored   (1352 eliminated genes)\n\n## \n##   Level 3:   24 nodes to be scored   (2004 eliminated genes)\n\n## \n##   Level 2:   9 nodes to be scored    (2371 eliminated genes)\n\n## \n##   Level 1:   1 nodes to be scored    (2681 eliminated genes)\n```\n\nGenerate results table\n\n``` r\nGO_MF_En <- GenTable(GO_MF, Fisher = GO_MF_FE, orderBy = \"Fisher\",  topNodes = 100, numChar = 51)\n```\n\nOnly taking the top 100 GO terms\n\nFilter by significant results\n\n``` r\nGO_MF_En$Fisher<-as.numeric(GO_MF_En$Fisher)\nGO_MF_En_sig<-GO_MF_En[GO_MF_En$Fisher<0.05,]\n```\n\nMerge `GO_MF_En_sig` with GO and gene info.\n\n``` r\n# Separate GO terms \nneg_cor_gene2go <- gene2go %>%\n  separate_rows(GO.ID, sep = \";\")\n\n# Ensure GO terms in both datasets are formatted similarly (trim whitespaces)\nneg_cor_gene2go$GO.ID <- trimws(neg_cor_gene2go$GO.ID)\nGO_MF_En_sig$GO.ID <- trimws(GO_MF_En_sig$GO.ID)\n\n# Join the datasets based on GO term\nGO_MF_En_sig_gene <- neg_cor_gene2go %>%\n  left_join(GO_MF_En_sig, by = \"GO.ID\") %>%\n  na.omit()\n\n# Add ontology column \nGO_MF_En_sig_gene$ontology <- \"Molecular Functions\"\n\n# Keep only unique rows \nGO_MF_En_sig_gene <- unique(GO_MF_En_sig_gene)\n```\n\n### 3.0.4 Join ontologies\n\nBind so there is a df that has significantly enriched GO terms for all ontologies\n\n``` r\nGO_neg_corr_df <- rbind(GO_BP_En_sig_gene, GO_MF_En_sig_gene)\n```\n\nMerge with `GO_neg_corr_df`\n\n``` r\ntest <- GO_neg_corr_df %>%\n  inner_join(neg_corr_data, by = c(\"gene_ID\" = \"mRNA\")) #%>%\n  #mutate(direction = ifelse(PCC.cor > 0, \"Positive\", \"Negative\")) #%>%\n  #filter(ontology != \"Cellular Components\") #%>%\n  #filter(p_value < 0.1)\n\n# Save as csv \nwrite.csv(test, \"../output/09.1-Apul-mRNA-miRNA-interactions-functional-enrichment/topGO_neg_corr_target_enrichment.csv\")\n```\n\nPlot!\n\n``` r\nplot<-ggplot(test, aes(x = Term, y = Fisher, fill = p_value)) +\n  #ylim(0, 1) +\n  #geom_hline(yintercept = 0.05, linetype = \"solid\", color = \"black\", linewidth = 1)+\n  #geom_hline(yintercept = 0.05, color = \"black\", linetype = \"solid\", linewidth = 0.5) +  # Add line at 0.05 \n  geom_point(shape = 21, size = 5) + \n  #scale_size(range = c(2, 20)) + \n  xlab('') + \n  ylab(\"Fisher p-value\") +\n  theme_bw(base_size = 24) +\n  facet_grid(vars(ontology), scales = \"free\", space = \"free_y\") +\n  coord_flip(); plot\n```\n\n![](09.1-Apul-mRNA-miRNA-interactions-functional-enrichment_files/figure-gfm/unnamed-chunk-23-1.png)<!-- -->\n\n``` r\n# Save plot \nggsave(\"../output/09.1-Apul-mRNA-miRNA-interactions-functional-enrichment/topGO_neg_corr_target_enrichment.pdf\", plot, width = 20, height = 35, dpi = 300)\nggsave(\"../output/09.1-Apul-mRNA-miRNA-interactions-functional-enrichment/topGO_neg_corr_target_enrichment.png\", plot, width = 20, height = 35, dpi = 300)\n```\n\nExamine the top 10 most significant GO terms for BP and MF\n\n``` r\n# Function to get top 5 unique terms\nget_top_10_unique <- function(data, ontology_type) {\n  data %>%\n    filter(ontology == ontology_type) %>%\n    arrange(Fisher) %>%\n    distinct(Term, .keep_all = TRUE) %>%\n    slice_head(n = 10)\n}\n\n# Get top 5 unique Biological Processes\ntop_10_BP <- get_top_10_unique(test, \"Biological Processes\")\n\n# Get top 5 unique Molecular Functions\ntop_10_MF <- get_top_10_unique(test, \"Molecular Functions\")\n\n# Combine results\ntop_10_combined <- bind_rows(top_10_BP, top_10_MF)\nunique(top_10_combined$Term)\n```\n\n```         \n## [1] \"auxin-activated signaling pathway\"         \n## [2] \"protein ubiquitination\"                    \n## [3] \"MAPK cascade\"                              \n## [4] \"alternative mRNA splicing, via spliceosome\"\n## [5] \"chromatin binding\"\n```\n\n``` r\n# Plot \ntop_10_combined <- top_10_combined %>%\n  arrange(desc(Fisher)) %>%\n  mutate(Term = factor(Term, levels = unique(Term)))\n\nplot<-ggplot(top_10_combined, aes(x = Term, y = Fisher, fill = p_value)) +\n  #ylim(0, 1) +\n  #geom_hline(yintercept = 0.05, linetype = \"solid\", color = \"black\", linewidth = 1)+\n  #geom_hline(yintercept = 0.05, color = \"black\", linetype = \"solid\", linewidth = 0.5) +  # Add line at 0.05 \n  geom_point(size = 10, color = \"black\") + \n  scale_size(range = c(2, 20)) + \n  xlab('') + \n  ylab(\"Fisher p-value\") +\n  theme_bw(base_size = 35) +\n  facet_grid(vars(ontology), scales = \"free\", space = \"free_y\") +\n  coord_flip(); plot\n```\n\n![](09.1-Apul-mRNA-miRNA-interactions-functional-enrichment_files/figure-gfm/unnamed-chunk-24-1.png)<!-- -->\n\n``` r\n# Save plot \nggsave(\"../output/09.1-Apul-mRNA-miRNA-interactions-functional-enrichment/top10GO_neg_corr_target_enrichment.pdf\", plot, width = 20, height = 25, dpi = 300)\nggsave(\"../output/09.1-Apul-mRNA-miRNA-interactions-functional-enrichment/top10GO_neg_corr_target_enrichment.png\", plot, width = 20, height = 25, dpi = 300)\n```\n\n# 4 FE of targets positively correlated with miRNAs (regardless of correlation significance)\n\nFilter PCC miranda data\n\n``` r\n# Filter so that only positive correlations remain \npos_corr_data <- data %>%\n  filter(PCC.cor > 0)\n\n# Make list of target genes for input to topGO\n# Genes of interest - ie those targeted by miRNAs\ntarget_genes <- as.character(unique(pos_corr_data$mRNA))\n\n# Apply 1 or 0 if gene is gene of interest \nGeneList <- factor(as.integer(all_genes %in% target_genes))\nnames(GeneList) <- all_genes\n```\n\nThe following code will perform GO enrichment using the weighted Fisher's exact test to assess whether specific GO terms are overrepresented in the genes targeted by miRNAs with positively correlated expression, regardless of correlation significance.\n\n### 4.0.1 Biological Processes\n\nCreate `topGOdata` object, which is required for topGO analysis\n\n``` r\nGO_BP <-new(\"topGOdata\", \n            ontology=\"BP\", \n            gene2GO=gene2go_list, \n            allGenes=GeneList, \n            annot = annFUN.gene2GO, \n            geneSel=topDiffGenes)\n```\n\n```         \n## \n## Building most specific GOs .....\n\n##  ( 273 GO terms found. )\n\n## \n## Build GO DAG topology ..........\n\n##  ( 1231 GO terms and 2377 relations. )\n\n## \n## Annotating nodes ...............\n\n##  ( 1427 genes annotated to the GO terms. )\n```\n\nRun GO enrichment test\n\n``` r\nGO_BP_FE <- runTest(GO_BP, algorithm=\"weight01\", statistic=\"fisher\")\n```\n\n```         \n## \n##           -- Weight01 Algorithm -- \n## \n##       the algorithm is scoring 456 nontrivial nodes\n##       parameters: \n##           test statistic: fisher\n\n## \n##   Level 13:  2 nodes to be scored    (0 eliminated genes)\n\n## \n##   Level 12:  9 nodes to be scored    (0 eliminated genes)\n\n## \n##   Level 11:  13 nodes to be scored   (141 eliminated genes)\n\n## \n##   Level 10:  21 nodes to be scored   (219 eliminated genes)\n\n## \n##   Level 9:   38 nodes to be scored   (235 eliminated genes)\n\n## \n##   Level 8:   50 nodes to be scored   (331 eliminated genes)\n\n## \n##   Level 7:   58 nodes to be scored   (466 eliminated genes)\n\n## \n##   Level 6:   78 nodes to be scored   (664 eliminated genes)\n\n## \n##   Level 5:   85 nodes to be scored   (939 eliminated genes)\n\n## \n##   Level 4:   53 nodes to be scored   (1067 eliminated genes)\n\n## \n##   Level 3:   37 nodes to be scored   (1276 eliminated genes)\n\n## \n##   Level 2:   11 nodes to be scored   (1342 eliminated genes)\n\n## \n##   Level 1:   1 nodes to be scored    (1402 eliminated genes)\n```\n\nGenerate results table\n\n``` r\nGO_BP_En <- GenTable(GO_BP, Fisher = GO_BP_FE, orderBy = \"Fisher\",  topNodes = 100, numChar = 51)\n```\n\nOnly taking the top 100 GO terms\n\nFilter by significant results\n\n``` r\nGO_BP_En$Fisher<-as.numeric(GO_BP_En$Fisher)\nGO_BP_En_sig<-GO_BP_En[GO_BP_En$Fisher<0.05,]\n```\n\nMerge `GO_BP_En_sig` with GO and gene info.\n\n``` r\n# Separate GO terms \npos_cor_gene2go <- gene2go %>%\n  separate_rows(GO.ID, sep = \";\")\n\n# Ensure GO terms in both datasets are formatted similarly (trim whitespaces)\npos_cor_gene2go$GO.ID <- trimws(pos_cor_gene2go$GO.ID)\nGO_BP_En_sig$GO.ID <- trimws(GO_BP_En_sig$GO.ID)\n\n# Join the datasets based on GO term\nGO_BP_En_sig_gene <- pos_cor_gene2go %>%\n  left_join(GO_BP_En_sig, by = \"GO.ID\") %>%\n  na.omit()\n\n# Add ontology column \nGO_BP_En_sig_gene$ontology <- \"Biological Processes\"\n\n# Keep only unique rows \nGO_BP_En_sig_gene <- unique(GO_BP_En_sig_gene)\n```\n\n### 4.0.2 Cellular Components\n\n### 4.0.3 Molecular Functions\n\nCreate `topGOdata` object, which is required for topGO analysis\n\n``` r\nGO_MF <-new(\"topGOdata\", \n            ontology=\"MF\", \n            gene2GO=gene2go_list, \n            allGenes=GeneList, \n            annot = annFUN.gene2GO, \n            geneSel=topDiffGenes)\n```\n\n```         \n## \n## Building most specific GOs .....\n\n##  ( 461 GO terms found. )\n\n## \n## Build GO DAG topology ..........\n\n##  ( 910 GO terms and 1191 relations. )\n\n## \n## Annotating nodes ...............\n\n##  ( 2843 genes annotated to the GO terms. )\n```\n\nRun GO enrichment test\n\n``` r\nGO_MF_FE <- runTest(GO_MF, algorithm=\"weight01\", statistic=\"fisher\")\n```\n\n```         \n## \n##           -- Weight01 Algorithm -- \n## \n##       the algorithm is scoring 320 nontrivial nodes\n##       parameters: \n##           test statistic: fisher\n\n## \n##   Level 13:  1 nodes to be scored    (0 eliminated genes)\n\n## \n##   Level 12:  1 nodes to be scored    (0 eliminated genes)\n\n## \n##   Level 11:  1 nodes to be scored    (2 eliminated genes)\n\n## \n##   Level 10:  5 nodes to be scored    (2 eliminated genes)\n\n## \n##   Level 9:   12 nodes to be scored   (4 eliminated genes)\n\n## \n##   Level 8:   20 nodes to be scored   (155 eliminated genes)\n\n## \n##   Level 7:   38 nodes to be scored   (499 eliminated genes)\n\n## \n##   Level 6:   71 nodes to be scored   (635 eliminated genes)\n\n## \n##   Level 5:   69 nodes to be scored   (1005 eliminated genes)\n\n## \n##   Level 4:   63 nodes to be scored   (1501 eliminated genes)\n\n## \n##   Level 3:   27 nodes to be scored   (2192 eliminated genes)\n\n## \n##   Level 2:   11 nodes to be scored   (2507 eliminated genes)\n\n## \n##   Level 1:   1 nodes to be scored    (2692 eliminated genes)\n```\n\nGenerate results table\n\n``` r\nGO_MF_En <- GenTable(GO_MF, Fisher = GO_MF_FE, orderBy = \"Fisher\",  topNodes = 100, numChar = 51)\n```\n\nOnly taking the top 100 GO terms\n\nFilter by significant results\n\n``` r\nGO_MF_En$Fisher<-as.numeric(GO_MF_En$Fisher)\nGO_MF_En_sig<-GO_MF_En[GO_MF_En$Fisher<0.05,]\n```\n\nMerge `GO_MF_En_sig` with GO and gene info.\n\n``` r\n# Separate GO terms \npos_cor_gene2go <- gene2go %>%\n  separate_rows(GO.ID, sep = \";\")\n\n# Ensure GO terms in both datasets are formatted similarly (trim whitespaces)\npos_cor_gene2go$GO.ID <- trimws(pos_cor_gene2go$GO.ID)\nGO_MF_En_sig$GO.ID <- trimws(GO_MF_En_sig$GO.ID)\n\n# Join the datasets based on GO term\nGO_MF_En_sig_gene <- pos_cor_gene2go %>%\n  left_join(GO_MF_En_sig, by = \"GO.ID\") %>%\n  na.omit()\n\n# Add ontology column \nGO_MF_En_sig_gene$ontology <- \"Molecular Functions\"\n\n# Keep only unique rows \nGO_MF_En_sig_gene <- unique(GO_MF_En_sig_gene)\n```\n\n### 4.0.4 Join ontologies\n\nBind so there is a df that has significantly enriched GO terms for all ontologies\n\n``` r\nGO_pos_corr_df <- rbind(GO_BP_En_sig_gene, GO_MF_En_sig_gene)\n```\n\nMerge with `GO_pos_corr_df`\n\n``` r\ntest <- GO_pos_corr_df %>%\n  inner_join(pos_corr_data, by = c(\"gene_ID\" = \"mRNA\")) #%>%\n  #mutate(direction = ifelse(PCC.cor > 0, \"Positive\", \"Negative\")) #%>%\n  #filter(ontology != \"Cellular Components\") #%>%\n  #filter(p_value < 0.1)\n\n# Save as csv \nwrite.csv(test, \"../output/09.1-Apul-mRNA-miRNA-interactions-functional-enrichment/topGO_pos_corr_target_enrichment.csv\")\n```\n\nPlot!\n\n``` r\nplot<-ggplot(test, aes(x = Term, y = Fisher, fill = p_value)) +\n  #ylim(0, 1) +\n  #geom_hline(yintercept = 0.05, linetype = \"solid\", color = \"black\", linewidth = 1)+\n  #geom_hline(yintercept = 0.05, color = \"black\", linetype = \"solid\", linewidth = 0.5) +  # Add line at 0.05 \n  geom_point(shape = 21, size = 5) + \n  #scale_size(range = c(2, 20)) + \n  xlab('') + \n  ylab(\"Fisher p-value\") +\n  theme_bw(base_size = 24) +\n  facet_grid(vars(ontology), scales = \"free\", space = \"free_y\") +\n  coord_flip(); plot\n```\n\n![](09.1-Apul-mRNA-miRNA-interactions-functional-enrichment_files/figure-gfm/unnamed-chunk-38-1.png)<!-- -->\n\n``` r\n# Save plot \nggsave(\"../output/09.1-Apul-mRNA-miRNA-interactions-functional-enrichment/topGO_pos_corr_target_enrichment.pdf\", plot, width = 20, height = 35, dpi = 300)\nggsave(\"../output/09.1-Apul-mRNA-miRNA-interactions-functional-enrichment/topGO_pos_corr_target_enrichment.png\", plot, width = 20, height = 35, dpi = 300)\n```\n\nExamine the top 10 most significant GO terms for BP and MF\n\n``` r\n# Function to get top 5 unique terms\nget_top_10_unique <- function(data, ontology_type) {\n  data %>%\n    filter(ontology == ontology_type) %>%\n    arrange(Fisher) %>%\n    distinct(Term, .keep_all = TRUE) %>%\n    slice_head(n = 10)\n}\n\n# Get top 5 unique Biological Processes\ntop_10_BP <- get_top_10_unique(test, \"Biological Processes\")\n\n# Get top 5 unique Molecular Functions\ntop_10_MF <- get_top_10_unique(test, \"Molecular Functions\")\n\n# Combine results\ntop_10_combined <- bind_rows(top_10_BP, top_10_MF)\nunique(top_10_combined$Term)\n```\n\n```         \n## [1] \"polyamine catabolic process\"                           \n## [2] \"negative regulation of protein phosphorylation\"        \n## [3] \"RNA polymerase II cis-regulatory region sequence-sp...\"\n## [4] \"cytidine deaminase activity\"                           \n## [5] \"glycosaminoglycan binding\"\n```\n\n``` r\n# Plot \ntop_10_combined <- top_10_combined %>%\n  arrange(desc(Fisher)) %>%\n  mutate(Term = factor(Term, levels = unique(Term)))\n\nplot<-ggplot(top_10_combined, aes(x = Term, y = Fisher, fill = p_value)) +\n  #ylim(0, 1) +\n  #geom_hline(yintercept = 0.05, linetype = \"solid\", color = \"black\", linewidth = 1)+\n  #geom_hline(yintercept = 0.05, color = \"black\", linetype = \"solid\", linewidth = 0.5) +  # Add line at 0.05 \n  geom_point(size = 10, color = \"black\") + \n  scale_size(range = c(2, 20)) + \n  xlab('') + \n  ylab(\"Fisher p-value\") +\n  theme_bw(base_size = 35) +\n  facet_grid(vars(ontology), scales = \"free\", space = \"free_y\") +\n  coord_flip(); plot\n```\n\n![](09.1-Apul-mRNA-miRNA-interactions-functional-enrichment_files/figure-gfm/unnamed-chunk-39-1.png)<!-- -->\n\n``` r\n# Save plot \nggsave(\"../output/09.1-Apul-mRNA-miRNA-interactions-functional-enrichment/top10GO_pos_corr_target_enrichment.pdf\", plot, width = 20, height = 25, dpi = 300)\nggsave(\"../output/09.1-Apul-mRNA-miRNA-interactions-functional-enrichment/top10GO_pos_corr_target_enrichment.png\", plot, width = 20, height = 25, dpi = 300)\n```\n\n# 5 FE of targets significantly negatively correlated with miRNAs\n\nFilter PCC miranda data\n\n``` r\n# Filter so that only significant negative correlations remain \nsig_neg_corr_data <- data %>%\n  filter(PCC.cor < 0) %>%\n  filter(p_value < 0.05)\n\n# Make list of target genes for input to topGO\n# Genes of interest - ie those targeted by miRNAs\ntarget_genes <- as.character(unique(sig_neg_corr_data$mRNA))\n\n# Apply 1 or 0 if gene is gene of interest \nGeneList <- factor(as.integer(all_genes %in% target_genes))\nnames(GeneList) <- all_genes\n```\n\nThe following code will perform GO enrichment using the weighted Fisher's exact test to assess whether specific GO terms are overrepresented in the genes targeted by miRNAs with significantly negatively correlated expression.\n\n### 5.0.1 Biological Processes\n\nCreate `topGOdata` object, which is required for topGO analysis\n\n``` r\nGO_BP <-new(\"topGOdata\", \n            ontology=\"BP\", \n            gene2GO=gene2go_list, \n            allGenes=GeneList, \n            annot = annFUN.gene2GO, \n            geneSel=topDiffGenes)\n```\n\n```         \n## \n## Building most specific GOs .....\n\n##  ( 273 GO terms found. )\n\n## \n## Build GO DAG topology ..........\n\n##  ( 1231 GO terms and 2377 relations. )\n\n## \n## Annotating nodes ...............\n\n##  ( 1427 genes annotated to the GO terms. )\n```\n\nRun GO enrichment test\n\n``` r\nGO_BP_FE <- runTest(GO_BP, algorithm=\"weight01\", statistic=\"fisher\")\n```\n\n```         \n## \n##           -- Weight01 Algorithm -- \n## \n##       the algorithm is scoring 40 nontrivial nodes\n##       parameters: \n##           test statistic: fisher\n\n## \n##   Level 10:  1 nodes to be scored    (0 eliminated genes)\n\n## \n##   Level 9:   1 nodes to be scored    (0 eliminated genes)\n\n## \n##   Level 8:   1 nodes to be scored    (30 eliminated genes)\n\n## \n##   Level 7:   3 nodes to be scored    (37 eliminated genes)\n\n## \n##   Level 6:   5 nodes to be scored    (37 eliminated genes)\n\n## \n##   Level 5:   8 nodes to be scored    (181 eliminated genes)\n\n## \n##   Level 4:   7 nodes to be scored    (253 eliminated genes)\n\n## \n##   Level 3:   8 nodes to be scored    (369 eliminated genes)\n\n## \n##   Level 2:   5 nodes to be scored    (708 eliminated genes)\n\n## \n##   Level 1:   1 nodes to be scored    (806 eliminated genes)\n```\n\nGenerate results table\n\n``` r\nGO_BP_En <- GenTable(GO_BP, Fisher = GO_BP_FE, orderBy = \"Fisher\",  topNodes = 100, numChar = 51)\n```\n\nOnly taking the top 100 GO terms\n\nFilter by significant results\n\n``` r\nGO_BP_En$Fisher<-as.numeric(GO_BP_En$Fisher)\nGO_BP_En_sig<-GO_BP_En[GO_BP_En$Fisher<0.05,]\n```\n\nMerge `GO_BP_En_sig` with GO and gene info.\n\n``` r\n# Separate GO terms \nsig_neg_cor_gene2go <- gene2go %>%\n  separate_rows(GO.ID, sep = \";\")\n\n# Ensure GO terms in both datasets are formatted similarly (trim whitespaces)\nsig_neg_cor_gene2go$GO.ID <- trimws(sig_neg_cor_gene2go$GO.ID)\nGO_BP_En_sig$GO.ID <- trimws(GO_BP_En_sig$GO.ID)\n\n# Join the datasets based on GO term\nGO_BP_En_sig_gene <- sig_neg_cor_gene2go %>%\n  left_join(GO_BP_En_sig, by = \"GO.ID\") %>%\n  na.omit()\n\n# Add ontology column \nGO_BP_En_sig_gene$ontology <- \"Biological Processes\"\n\n# Keep only unique rows \nGO_BP_En_sig_gene <- unique(GO_BP_En_sig_gene)\n```\n\n### 5.0.2 Cellular Components\n\n### 5.0.3 Molecular Functions\n\nCreate `topGOdata` object, which is required for topGO analysis\n\n``` r\nGO_MF <-new(\"topGOdata\", \n            ontology=\"MF\", \n            gene2GO=gene2go_list, \n            allGenes=GeneList, \n            annot = annFUN.gene2GO, \n            geneSel=topDiffGenes)\n```\n\n```         \n## \n## Building most specific GOs .....\n\n##  ( 461 GO terms found. )\n\n## \n## Build GO DAG topology ..........\n\n##  ( 910 GO terms and 1191 relations. )\n\n## \n## Annotating nodes ...............\n\n##  ( 2843 genes annotated to the GO terms. )\n```\n\nRun GO enrichment test\n\n``` r\nGO_MF_FE <- runTest(GO_MF, algorithm=\"weight01\", statistic=\"fisher\")\n```\n\n```         \n## \n##           -- Weight01 Algorithm -- \n## \n##       the algorithm is scoring 60 nontrivial nodes\n##       parameters: \n##           test statistic: fisher\n\n## \n##   Level 10:  1 nodes to be scored    (0 eliminated genes)\n\n## \n##   Level 9:   3 nodes to be scored    (0 eliminated genes)\n\n## \n##   Level 8:   4 nodes to be scored    (101 eliminated genes)\n\n## \n##   Level 7:   6 nodes to be scored    (145 eliminated genes)\n\n## \n##   Level 6:   10 nodes to be scored   (238 eliminated genes)\n\n## \n##   Level 5:   10 nodes to be scored   (469 eliminated genes)\n\n## \n##   Level 4:   13 nodes to be scored   (518 eliminated genes)\n\n## \n##   Level 3:   8 nodes to be scored    (862 eliminated genes)\n\n## \n##   Level 2:   4 nodes to be scored    (1296 eliminated genes)\n\n## \n##   Level 1:   1 nodes to be scored    (2156 eliminated genes)\n```\n\nGenerate results table\n\n``` r\nGO_MF_En <- GenTable(GO_MF, Fisher = GO_MF_FE, orderBy = \"Fisher\",  topNodes = 100, numChar = 51)\n```\n\nOnly taking the top 100 GO terms\n\nFilter by significant results\n\n``` r\nGO_MF_En$Fisher<-as.numeric(GO_MF_En$Fisher)\nGO_MF_En_sig<-GO_MF_En[GO_MF_En$Fisher<0.05,]\n```\n\nMerge `GO_MF_En_sig` with GO and gene info.\n\n``` r\n# Separate GO terms \nsig_neg_cor_gene2go <- gene2go %>%\n  separate_rows(GO.ID, sep = \";\")\n\n# Ensure GO terms in both datasets are formatted similarly (trim whitespaces)\nsig_neg_cor_gene2go$GO.ID <- trimws(sig_neg_cor_gene2go$GO.ID)\nGO_MF_En_sig$GO.ID <- trimws(GO_MF_En_sig$GO.ID)\n\n# Join the datasets based on GO term\nGO_MF_En_sig_gene <- sig_neg_cor_gene2go %>%\n  left_join(GO_MF_En_sig, by = \"GO.ID\") %>%\n  na.omit()\n\n# Add ontology column \nGO_MF_En_sig_gene$ontology <- \"Molecular Functions\"\n\n# Keep only unique rows \nGO_MF_En_sig_gene <- unique(GO_MF_En_sig_gene)\n```\n\n### 5.0.4 Join ontologies\n\nBind so there is a df that has significantly enriched GO terms for all ontologies\n\n``` r\nGO_sig_neg_corr_df <- rbind(GO_BP_En_sig_gene, GO_MF_En_sig_gene)\n```\n\nMerge with `GO_sig_neg_corr_df`\n\n``` r\ntest <- GO_sig_neg_corr_df %>%\n  inner_join(sig_neg_corr_data, by = c(\"gene_ID\" = \"mRNA\")) #%>%\n  #mutate(direction = ifelse(PCC.cor > 0, \"Positive\", \"Negative\")) #%>%\n  #filter(ontology != \"Cellular Components\") #%>%\n  #filter(p_value < 0.1)\n\n# Save as csv \nwrite.csv(test, \"../output/09.1-Apul-mRNA-miRNA-interactions-functional-enrichment/topGO_sig_neg_corr_target_enrichment.csv\")\n```\n\nPlot!\n\n``` r\nplot<-ggplot(test, aes(x = Term, y = Fisher, fill = p_value)) +\n  #ylim(0, 1) +\n  #geom_hline(yintercept = 0.05, linetype = \"solid\", color = \"black\", linewidth = 1)+\n  #geom_hline(yintercept = 0.05, color = \"black\", linetype = \"solid\", linewidth = 0.5) +  # Add line at 0.05 \n  geom_point(shape = 21, size = 5) + \n  #scale_size(range = c(2, 20)) + \n  xlab('') + \n  ylab(\"Fisher p-value\") +\n  theme_bw(base_size = 24) +\n  facet_grid(vars(ontology), scales = \"free\", space = \"free_y\") +\n  coord_flip(); plot\n```\n\n![](09.1-Apul-mRNA-miRNA-interactions-functional-enrichment_files/figure-gfm/unnamed-chunk-53-1.png)<!-- -->\n\n``` r\n# Save plot \nggsave(\"../output/09.1-Apul-mRNA-miRNA-interactions-functional-enrichment/topGO_sig_neg_corr_target_enrichment.pdf\", plot, width = 20, height = 35, dpi = 300)\nggsave(\"../output/09.1-Apul-mRNA-miRNA-interactions-functional-enrichment/topGO_sig_neg_corr_target_enrichment.png\", plot, width = 20, height = 35, dpi = 300)\n```\n\nExamine the top 10 most significant GO terms for BP and MF\n\n``` r\n# Function to get top 5 unique terms\nget_top_10_unique <- function(data, ontology_type) {\n  data %>%\n    filter(ontology == ontology_type) %>%\n    arrange(Fisher) %>%\n    distinct(Term, .keep_all = TRUE) %>%\n    slice_head(n = 10)\n}\n\n# Get top 5 unique Biological Processes\ntop_10_BP <- get_top_10_unique(test, \"Biological Processes\")\n\n# Get top 5 unique Molecular Functions\ntop_10_MF <- get_top_10_unique(test, \"Molecular Functions\")\n\n# Combine results\ntop_10_combined <- bind_rows(top_10_BP, top_10_MF)\nunique(top_10_combined$Term)\n```\n\n```         \n## [1] \"polysaccharide catabolic process\"     \n## [2] \"G1/S transition of mitotic cell cycle\"\n## [3] \"creatinase activity\"                  \n## [4] \"cytidine deaminase activity\"          \n## [5] \"GTPase activity\"                      \n## [6] \"galanin receptor activity\"\n```\n\n``` r\n# Plot \ntop_10_combined <- top_10_combined %>%\n  arrange(desc(Fisher)) %>%\n  mutate(Term = factor(Term, levels = unique(Term)))\n\nplot<-ggplot(top_10_combined, aes(x = Term, y = Fisher, fill = p_value)) +\n  #ylim(0, 1) +\n  #geom_hline(yintercept = 0.05, linetype = \"solid\", color = \"black\", linewidth = 1)+\n  #geom_hline(yintercept = 0.05, color = \"black\", linetype = \"solid\", linewidth = 0.5) +  # Add line at 0.05 \n  geom_point(size = 10, color = \"black\") + \n  scale_size(range = c(2, 20)) + \n  xlab('') + \n  ylab(\"Fisher p-value\") +\n  theme_bw(base_size = 35) +\n  facet_grid(vars(ontology), scales = \"free\", space = \"free_y\") +\n  coord_flip(); plot\n```\n\n![](09.1-Apul-mRNA-miRNA-interactions-functional-enrichment_files/figure-gfm/unnamed-chunk-54-1.png)<!-- -->\n\n``` r\n# Save plot \nggsave(\"../output/09.1-Apul-mRNA-miRNA-interactions-functional-enrichment/top10GO_sig_neg_corr_target_enrichment.pdf\", plot, width = 20, height = 25, dpi = 300)\nggsave(\"../output/09.1-Apul-mRNA-miRNA-interactions-functional-enrichment/top10GO_sig_neg_corr_target_enrichment.png\", plot, width = 20, height = 25, dpi = 300)\n```\n\n# 6 FE of targets significantly positively correlated with miRNAs\n\nFilter PCC miranda data\n\n``` r\n# Filter so that only significant negative correlations remain \nsig_pos_corr_data <- data %>%\n  filter(PCC.cor > 0) %>%\n  filter(p_value < 0.05)\n\n# Make list of target genes for input to topGO\n# Genes of interest - ie those targeted by miRNAs\ntarget_genes <- as.character(unique(sig_neg_corr_data$mRNA))\n\n# Apply 1 or 0 if gene is gene of interest \nGeneList <- factor(as.integer(all_genes %in% target_genes))\nnames(GeneList) <- all_genes\n```\n\nThe following code will perform GO enrichment using the weighted Fisher's exact test to assess whether specific GO terms are overrepresented in the genes targeted by miRNAs with significantly positively correlated expression.\n\n### 6.0.1 Biological Processes\n\nCreate `topGOdata` object, which is required for topGO analysis\n\n``` r\nGO_BP <-new(\"topGOdata\", \n            ontology=\"BP\", \n            gene2GO=gene2go_list, \n            allGenes=GeneList, \n            annot = annFUN.gene2GO, \n            geneSel=topDiffGenes)\n```\n\n```         \n## \n## Building most specific GOs .....\n\n##  ( 273 GO terms found. )\n\n## \n## Build GO DAG topology ..........\n\n##  ( 1231 GO terms and 2377 relations. )\n\n## \n## Annotating nodes ...............\n\n##  ( 1427 genes annotated to the GO terms. )\n```\n\nRun GO enrichment test\n\n``` r\nGO_BP_FE <- runTest(GO_BP, algorithm=\"weight01\", statistic=\"fisher\")\n```\n\n```         \n## \n##           -- Weight01 Algorithm -- \n## \n##       the algorithm is scoring 40 nontrivial nodes\n##       parameters: \n##           test statistic: fisher\n\n## \n##   Level 10:  1 nodes to be scored    (0 eliminated genes)\n\n## \n##   Level 9:   1 nodes to be scored    (0 eliminated genes)\n\n## \n##   Level 8:   1 nodes to be scored    (30 eliminated genes)\n\n## \n##   Level 7:   3 nodes to be scored    (37 eliminated genes)\n\n## \n##   Level 6:   5 nodes to be scored    (37 eliminated genes)\n\n## \n##   Level 5:   8 nodes to be scored    (181 eliminated genes)\n\n## \n##   Level 4:   7 nodes to be scored    (253 eliminated genes)\n\n## \n##   Level 3:   8 nodes to be scored    (369 eliminated genes)\n\n## \n##   Level 2:   5 nodes to be scored    (708 eliminated genes)\n\n## \n##   Level 1:   1 nodes to be scored    (806 eliminated genes)\n```\n\nGenerate results table\n\n``` r\nGO_BP_En <- GenTable(GO_BP, Fisher = GO_BP_FE, orderBy = \"Fisher\",  topNodes = 100, numChar = 51)\n```\n\nOnly taking the top 100 GO terms\n\nFilter by significant results\n\n``` r\nGO_BP_En$Fisher<-as.numeric(GO_BP_En$Fisher)\nGO_BP_En_sig<-GO_BP_En[GO_BP_En$Fisher<0.05,]\n```\n\nMerge `GO_BP_En_sig` with GO and gene info.\n\n``` r\n# Separate GO terms \nsig_pos_cor_gene2go <- gene2go %>%\n  separate_rows(GO.ID, sep = \";\")\n\n# Ensure GO terms in both datasets are formatted similarly (trim whitespaces)\nsig_pos_cor_gene2go$GO.ID <- trimws(sig_pos_cor_gene2go$GO.ID)\nGO_BP_En_sig$GO.ID <- trimws(GO_BP_En_sig$GO.ID)\n\n# Join the datasets based on GO term\nGO_BP_En_sig_gene <- sig_pos_cor_gene2go %>%\n  left_join(GO_BP_En_sig, by = \"GO.ID\") %>%\n  na.omit()\n\n# Add ontology column \nGO_BP_En_sig_gene$ontology <- \"Biological Processes\"\n\n# Keep only unique rows \nGO_BP_En_sig_gene <- unique(GO_BP_En_sig_gene)\n```\n\n### 6.0.2 Cellular Components\n\n### 6.0.3 Molecular Functions\n\nCreate `topGOdata` object, which is required for topGO analysis\n\n``` r\nGO_MF <-new(\"topGOdata\", \n            ontology=\"MF\", \n            gene2GO=gene2go_list, \n            allGenes=GeneList, \n            annot = annFUN.gene2GO, \n            geneSel=topDiffGenes)\n```\n\n```         \n## \n## Building most specific GOs .....\n\n##  ( 461 GO terms found. )\n\n## \n## Build GO DAG topology ..........\n\n##  ( 910 GO terms and 1191 relations. )\n\n## \n## Annotating nodes ...............\n\n##  ( 2843 genes annotated to the GO terms. )\n```\n\nRun GO enrichment test\n\n``` r\nGO_MF_FE <- runTest(GO_MF, algorithm=\"weight01\", statistic=\"fisher\")\n```\n\n```         \n## \n##           -- Weight01 Algorithm -- \n## \n##       the algorithm is scoring 60 nontrivial nodes\n##       parameters: \n##           test statistic: fisher\n\n## \n##   Level 10:  1 nodes to be scored    (0 eliminated genes)\n\n## \n##   Level 9:   3 nodes to be scored    (0 eliminated genes)\n\n## \n##   Level 8:   4 nodes to be scored    (101 eliminated genes)\n\n## \n##   Level 7:   6 nodes to be scored    (145 eliminated genes)\n\n## \n##   Level 6:   10 nodes to be scored   (238 eliminated genes)\n\n## \n##   Level 5:   10 nodes to be scored   (469 eliminated genes)\n\n## \n##   Level 4:   13 nodes to be scored   (518 eliminated genes)\n\n## \n##   Level 3:   8 nodes to be scored    (862 eliminated genes)\n\n## \n##   Level 2:   4 nodes to be scored    (1296 eliminated genes)\n\n## \n##   Level 1:   1 nodes to be scored    (2156 eliminated genes)\n```\n\nGenerate results table\n\n``` r\nGO_MF_En <- GenTable(GO_MF, Fisher = GO_MF_FE, orderBy = \"Fisher\",  topNodes = 100, numChar = 51)\n```\n\nOnly taking the top 100 GO terms\n\nFilter by significant results\n\n``` r\nGO_MF_En$Fisher<-as.numeric(GO_MF_En$Fisher)\nGO_MF_En_sig<-GO_MF_En[GO_MF_En$Fisher<0.05,]\n```\n\nMerge `GO_MF_En_sig` with GO and gene info.\n\n``` r\n# Separate GO terms \nsig_pos_cor_gene2go <- gene2go %>%\n  separate_rows(GO.ID, sep = \";\")\n\n# Ensure GO terms in both datasets are formatted similarly (trim whitespaces)\nsig_pos_cor_gene2go$GO.ID <- trimws(sig_pos_cor_gene2go$GO.ID)\nGO_MF_En_sig$GO.ID <- trimws(GO_MF_En_sig$GO.ID)\n\n# Join the datasets based on GO term\nGO_MF_En_sig_gene <- sig_pos_cor_gene2go %>%\n  left_join(GO_MF_En_sig, by = \"GO.ID\") %>%\n  na.omit()\n\n# Add ontology column \nGO_MF_En_sig_gene$ontology <- \"Molecular Functions\"\n\n# Keep only unique rows \nGO_MF_En_sig_gene <- unique(GO_MF_En_sig_gene)\n```\n\n### 6.0.4 Join ontologies\n\nBind so there is a df that has significantly enriched GO terms for all ontologies\n\n``` r\nGO_sig_pos_corr_df <- rbind(GO_BP_En_sig_gene, GO_MF_En_sig_gene)\n```\n\nMerge with `GO_pos_corr_df`\n\n``` r\ntest <- GO_sig_pos_corr_df %>%\n  inner_join(sig_pos_corr_data, by = c(\"gene_ID\" = \"mRNA\")) #%>%\n  #mutate(direction = ifelse(PCC.cor > 0, \"Positive\", \"Negative\")) #%>%\n  #filter(ontology != \"Cellular Components\") #%>%\n  #filter(p_value < 0.1)\n\n# Save as csv \nwrite.csv(test, \"../output/09.1-Apul-mRNA-miRNA-interactions-functional-enrichment/topGO_sig_pos_corr_target_enrichment.csv\")\n```\n\nPlot!\n\n``` r\nplot<-ggplot(test, aes(x = Term, y = Fisher, fill = p_value)) +\n  #ylim(0, 1) +\n  #geom_hline(yintercept = 0.05, linetype = \"solid\", color = \"black\", linewidth = 1)+\n  #geom_hline(yintercept = 0.05, color = \"black\", linetype = \"solid\", linewidth = 0.5) +  # Add line at 0.05 \n  geom_point(shape = 21, size = 5) + \n  #scale_size(range = c(2, 20)) + \n  xlab('') + \n  ylab(\"Fisher p-value\") +\n  theme_bw(base_size = 24) +\n  facet_grid(vars(ontology), scales = \"free\", space = \"free_y\") +\n  coord_flip(); plot\n```\n\n![](09.1-Apul-mRNA-miRNA-interactions-functional-enrichment_files/figure-gfm/unnamed-chunk-68-1.png)<!-- -->\n\n``` r\n# Save plot \nggsave(\"../output/09.1-Apul-mRNA-miRNA-interactions-functional-enrichment/topGO_sig_pos_corr_target_enrichment.pdf\", plot, width = 20, height = 35, dpi = 300)\nggsave(\"../output/09.1-Apul-mRNA-miRNA-interactions-functional-enrichment/topGO_sig_pos_corr_target_enrichment.png\", plot, width = 20, height = 35, dpi = 300)\n```\n\nExamine the top 10 most significant GO terms for BP and MF\n\n``` r\n# Function to get top 5 unique terms\nget_top_10_unique <- function(data, ontology_type) {\n  data %>%\n    filter(ontology == ontology_type) %>%\n    arrange(Fisher) %>%\n    distinct(Term, .keep_all = TRUE) %>%\n    slice_head(n = 10)\n}\n\n# Get top 5 unique Biological Processes\ntop_10_BP <- get_top_10_unique(test, \"Biological Processes\")\n\n# Get top 5 unique Molecular Functions\ntop_10_MF <- get_top_10_unique(test, \"Molecular Functions\")\n\n# Combine results\ntop_10_combined <- bind_rows(top_10_BP, top_10_MF)\nunique(top_10_combined$Term)\n```\n\n```         \n## [1] \"GTPase activity\"\n```\n\n``` r\n# Plot \ntop_10_combined <- top_10_combined %>%\n  arrange(desc(Fisher)) %>%\n  mutate(Term = factor(Term, levels = unique(Term)))\n\nplot<-ggplot(top_10_combined, aes(x = Term, y = Fisher, fill = p_value)) +\n  #ylim(0, 1) +\n  #geom_hline(yintercept = 0.05, linetype = \"solid\", color = \"black\", linewidth = 1)+\n  #geom_hline(yintercept = 0.05, color = \"black\", linetype = \"solid\", linewidth = 0.5) +  # Add line at 0.05 \n  geom_point(size = 10, color = \"black\") + \n  scale_size(range = c(2, 20)) + \n  xlab('') + \n  ylab(\"Fisher p-value\") +\n  theme_bw(base_size = 35) +\n  facet_grid(vars(ontology), scales = \"free\", space = \"free_y\") +\n  coord_flip(); plot\n```\n\n![](09.1-Apul-mRNA-miRNA-interactions-functional-enrichment_files/figure-gfm/unnamed-chunk-69-1.png)<!-- -->\n\n``` r\n# Save plot \nggsave(\"../output/09.1-Apul-mRNA-miRNA-interactions-functional-enrichment/top10GO_sig_pos_corr_target_enrichment.pdf\", last_plot(), width = 20, height = 25, dpi = 300)\nggsave(\"../output/09.1-Apul-mRNA-miRNA-interactions-functional-enrichment/top10GO_sig_pos_corr_target_enrichment.png\", last_plot(), width = 20, height = 25, dpi = 300)\n```\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}