{
  "hash": "141a14c18efba6bfb2beee7cb9e1a719",
  "result": {
    "markdown": "---\ntitle: \"Timeseries molecular: Format input files for Cytoscape\"\nauthor: \"Kathleen Durkin\"\ndate: \"2025-04-28\"\ncategories: [\"E5-coral\"]\nformat:\n  html:\n    toc: true\nexecute: \n  eval: TRUE\nengine: knitr\nbibliography: ../../../references.bib\n---\n\n\nFor Cytoscape I need two inputs, an \"Edges.csv\" and a \"Nodes.csv\".\n\nThe \"edges\"Edges\" file should associate each node with all other nodes it connects to. It should also contain edge-specific metadata. For example:\n\n| source   | target | correlation | correlation magnitude | correlation direction | correlation pval | binding pval |\n|-----------|-----------|-----------|-----------|-----------|-----------|-----------|\n| miR-100  | FUN001 | -0.9        | 0.9                   | -1                    | 0.001            | 0.02         |\n| miR-100  | FUN002 | 0.85        | 0.85                  | 1                     | 0.02             | 0.03         |\n| lncRNA01 | FUN001 | -0.95       | 0.95                  | -1                    | 0.01             | 0.01         |\n\nNote that there may be duplicates in both the \"source\" and \"target\" columns, but the combinations of source-target should be unique.\n\nThe \"Nodes\" file contains metadata for every node included in the plot. Importantly, the set of nodes listed int he \"Nodes\" file should match exactly the set of nodes included in the \"Edges\" document. For example:\n\n| id       | type   |\n|----------|--------|\n| FUN001   | gene   |\n| FUN002   | gene   |\n| miR-100  | miRNA  |\n| lncRNA01 | lncRNA |\n\nI'll need the following files to compile the Cytoscape inputs:\n\n-   miRNA interaction file (contains binding and coexpression information for miRNA-gene pairs): `timeseries_molecular/D-Apul/output/14.1-Apul-miRNA-mRNA-coexpression-additional_inputs/miRanda-PCC-significant-mRNA_3UTR_5UTR.csv`\n\n-   lncRNA interaction file (contains binding and coexpression information for miRNA-lncRNA pairs): `timeseries_molecular/D-Apul/output/14.2-Apul-miRNA-lncRNA-coexpression/miRanda-PCC-significant-miRNA_lncRNA.csv`\n\nI'm haven't predicted lncRNA-gene interactions at this point, but if I decide to I would also need that file.\n\nLoad packages:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dplyr)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'dplyr' was built under R version 4.2.3\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'dplyr'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n```\n:::\n\n```{.r .cell-code}\nlibrary(tidyr)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'tidyr' was built under R version 4.2.3\n```\n:::\n:::\n\n\nLoad files:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmiRNA_gene <- read.csv(\"https://raw.githubusercontent.com/urol-e5/timeseries_molecular/refs/heads/main/D-Apul/output/14.1-Apul-miRNA-mRNA-coexpression-additional_inputs/miRanda-PCC-significant-mRNA_3UTR_5UTR.csv\")\n# Remove NA rows\nmiRNA_gene <- miRNA_gene %>% filter(!is.na(mirna))\n\nmiRNA_lncRNA <- read.csv(\"https://raw.githubusercontent.com/urol-e5/timeseries_molecular/refs/heads/main/D-Apul/output/14.2-Apul-miRNA-lncRNA-coexpression/miRanda-PCC-significant-miRNA_lncRNA.csv\")\n```\n:::\n\n\n# All interactions\n\nFormat \"Edges\" file:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Add correlation magnitude and direction columns\nmiRNA_gene$PCC_magnitude <- abs(miRNA_gene$PCC.cor)\nmiRNA_gene$PCC_direction <- sign(miRNA_gene$PCC.cor)\nmiRNA_gene$Alignment <- paste0(miRNA_gene$Target, \";\", miRNA_gene$Query_Aln, \";\", miRNA_gene$Subject_Aln)\n# Select columns I want to keep in Edges file\nmiRNA_gene_edges <- miRNA_gene %>% select(mirna, X4, Alignment, Energy_Kcal_Mol, Al_Len, Subject_Identity, Query_Identity, PCC.cor, PCC_magnitude, PCC_direction, p_value)\n# rename columns\nmiRNA_gene_edges <- miRNA_gene_edges %>% rename(source = mirna, target = X4)\n\n# Add correlation magnitude and direction columns\nmiRNA_lncRNA$PCC_magnitude <- abs(miRNA_lncRNA$PCC.cor)\nmiRNA_lncRNA$PCC_direction <- sign(miRNA_lncRNA$PCC.cor)\nmiRNA_lncRNA$Alignment <- paste0(miRNA_lncRNA$Target, \";\", miRNA_lncRNA$Query_Aln, \";\", miRNA_lncRNA$Subject_Aln)\n# Select columns I want to keep in Edges file (ensure in same order as in the miRNA_gene_edges file)\nmiRNA_lncRNA_edges <- miRNA_lncRNA %>% select(mirna, lncRNA.x, Alignment, Energy_Kcal_Mol, Al_Len, Subject_Identity, Query_Identity, PCC.cor, PCC_magnitude, PCC_direction, p_value)\n# rename columns\nmiRNA_lncRNA_edges <- miRNA_lncRNA_edges %>% rename(source = mirna, target = lncRNA.x)\n\n# Combine miRNA-gene edges and miRNA-lncRNA edges\nedges <- rbind(miRNA_gene_edges, miRNA_lncRNA_edges)\n\n# Ensure we have no duplicate rows\nnrow(edges)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 131951\n```\n:::\n\n```{.r .cell-code}\nnrow(edges %>% distinct())\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 131951\n```\n:::\n\n```{.r .cell-code}\n# Check formatting/contents\nhead(edges)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n         source     target                             Alignment\n1 Cluster_10452 FUN_000006   ntLink_0:61628-78213;2 19;1286 1308\n2 Cluster_10452 FUN_000006 ntLink_0:61628-78213;2 12;13037 13058\n3 Cluster_10452 FUN_000113   ntLink_4:151074-152269;2 20;900 920\n4 Cluster_10452 FUN_000113   ntLink_4:151074-152269;2 21;211 234\n5 Cluster_10452 FUN_000128   ntLink_4:187657-188852;2 20;900 920\n6 Cluster_10452 FUN_000128   ntLink_4:187657-188852;2 21;211 234\n  Energy_Kcal_Mol Al_Len Subject_Identity Query_Identity   PCC.cor\n1          -15.88     19           63.16%         84.21% 0.3314907\n2          -16.10     10           90.00%         90.00% 0.3314907\n3          -14.47     18           66.67%         77.78% 0.3960556\n4          -17.21     21           66.67%         80.95% 0.3960556\n5          -14.47     18           66.67%         77.78% 0.3471957\n6          -17.21     21           66.67%         80.95% 0.3471957\n  PCC_magnitude PCC_direction    p_value\n1     0.3314907             1 0.03665931\n2     0.3314907             1 0.03665931\n3     0.3960556             1 0.01141128\n4     0.3960556             1 0.01141128\n5     0.3471957             1 0.02816252\n6     0.3471957             1 0.02816252\n```\n:::\n:::\n\n\nFormat Nodes file:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Make a df that contains all miRNA, genes, and lncRNA listed in the `source` and `target` columns of `edges`\nnodes <- data.frame(\n  # The `unique` argument ensures we remove duplicates\n  id = unique(unname(unlist(edges[, c(\"source\", \"target\")])))\n)\n\n# Add column identifying the type of each node (miRNA, lncRNA, or gene)\nnodes <- nodes %>%\n  mutate(type = case_when(\n    grepl(\"Cluster\", id) ~ \"miRNA\",\n    grepl(\"FUN\", id) ~ \"gene\",\n    grepl(\"lncRNA\", id) ~ \"lncRNA\",\n    TRUE ~ \"other\"\n  ))\n\n# Check formatting/contents\nhead(nodes)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n             id  type\n1 Cluster_10452 miRNA\n2 Cluster_11565 miRNA\n3 Cluster_12081 miRNA\n4 Cluster_12083 miRNA\n5 Cluster_12087 miRNA\n6 Cluster_13327 miRNA\n```\n:::\n:::\n\n\n# pval \\< 0.01\n\nEdges:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nedges_pval_0.01 <- edges %>% filter(p_value < 0.01)\nnrow(edges_pval_0.01)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 54950\n```\n:::\n:::\n\n\nNodes:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Make a df that contains all miRNA, genes, and lncRNA listed in the `source` and `target` columns of `edges`\nnodes_pval_0.01 <- data.frame(\n  # The `unique` argument ensures we remove duplicates\n  id = unique(unname(unlist(edges_pval_0.01[, c(\"source\", \"target\")])))\n)\n\n# Add column identifying the type of each node (miRNA, lncRNA, or gene)\nnodes_pval_0.01 <- nodes_pval_0.01 %>%\n  mutate(type = case_when(\n    grepl(\"Cluster\", id) ~ \"miRNA\",\n    grepl(\"FUN\", id) ~ \"gene\",\n    grepl(\"lncRNA\", id) ~ \"lncRNA\",\n    TRUE ~ \"other\"\n  ))\n```\n:::\n\n\n# \\|PCC\\| \\> 0.5\n\nEdges:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nedges_PCC_0.5 <- edges %>% filter(PCC_magnitude > 0.5)\nnrow(edges_PCC_0.5)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 16918\n```\n:::\n:::\n\n\nNodes:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Make a df that contains all miRNA, genes, and lncRNA listed in the `source` and `target` columns of `edges`\nnodes_PCC_0.5 <- data.frame(\n  # The `unique` argument ensures we remove duplicates\n  id = unique(unname(unlist(edges_PCC_0.5[, c(\"source\", \"target\")])))\n)\n\n# Add column identifying the type of each node (miRNA, lncRNA, or gene)\nnodes_PCC_0.5 <- nodes_PCC_0.5 %>%\n  mutate(type = case_when(\n    grepl(\"Cluster\", id) ~ \"miRNA\",\n    grepl(\"FUN\", id) ~ \"gene\",\n    grepl(\"lncRNA\", id) ~ \"lncRNA\",\n    TRUE ~ \"other\"\n  ))\n```\n:::\n\n\n# \\|PCC\\| \\> 0.8\n\nEdges:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nedges_PCC_0.8 <- edges %>% filter(PCC_magnitude > 0.8)\nnrow(edges_PCC_0.8)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 87\n```\n:::\n:::\n\n\nNodes:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Make a df that contains all miRNA, genes, and lncRNA listed in the `source` and `target` columns of `edges`\nnodes_PCC_0.8 <- data.frame(\n  # The `unique` argument ensures we remove duplicates\n  id = unique(unname(unlist(edges_PCC_0.8[, c(\"source\", \"target\")])))\n)\n\n# Add column identifying the type of each node (miRNA, lncRNA, or gene)\nnodes_PCC_0.8 <- nodes_PCC_0.8 %>%\n  mutate(type = case_when(\n    grepl(\"Cluster\", id) ~ \"miRNA\",\n    grepl(\"FUN\", id) ~ \"gene\",\n    grepl(\"lncRNA\", id) ~ \"lncRNA\",\n    TRUE ~ \"other\"\n  ))\n```\n:::\n\n\n# Save\n\nSave files\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwrite.csv(edges, \"./output/edges_timeseries_miRNA_lncRNA_genes.csv\", quote = FALSE)\nwrite.csv(nodes, \"./output/nodes_timeseries_miRNA_lncRNA_genes.csv\", quote = FALSE)\nwrite.csv(edges_pval_0.01, \"./output/edges_pval_0.01_timeseries_miRNA_lncRNA_genes.csv\", quote = FALSE)\nwrite.csv(nodes_pval_0.01, \"./output/nodes_pval_0.01_timeseries_miRNA_lncRNA_genes.csv\", quote = FALSE)\nwrite.csv(edges_PCC_0.5, \"./output/edges_PCC_0.5_timeseries_miRNA_lncRNA_genes.csv\", quote = FALSE)\nwrite.csv(nodes_PCC_0.5, \"./output/nodes_PCC_0.5_timeseries_miRNA_lncRNA_genes.csv\", quote = FALSE)\nwrite.csv(edges_PCC_0.8, \"./output/edges_PCC_0.8_timeseries_miRNA_lncRNA_genes.csv\", quote = FALSE)\nwrite.csv(nodes_PCC_0.8, \"./output/nodes_PCC_0.8_timeseries_miRNA_lncRNA_genes.csv\", quote = FALSE)\n```\n:::\n\n\n# Using Cytoscape\n\nTo load a network into Cytoscape:\n\n1. Open Cytoscape and select File > Import > Network from File...\n\n2. Select \"Edges\" file. Ensure The source and target columns are appropriately identified before loading the file.\n\n3. To load \"Nodes\" file, select File > Import > Table from File...\n\n# Results\n\nBelow is a the network of miRNA-gene and miRNA-lncRNA interactions that are predicted to bind by miRanda, and which have an expression correlation coefficient above 0.5. \n\nThe network is displayed using the yFiles Organic Layout, with nodes colored by type (miRNA = orange, lncRNA = dark blue, gene = light blue), and with edges colored by correlation direction (negative = red, positive = green) and weighted by correlation magnitude.\n\n![](./output/edges_PCC_0.5_timeseries_miRNA_lncRNA_genes.csv.png)\n\nWe can see some interesting patterns!\n\n\n![](./output/edges_PCC_0.5_timeseries_miRNA_lncRNA_genes.csv-CLUSTER_4752.png)\n\nCluster_4752 stands out because it has many putative interactions (mostly genes), with primarily negatively correlated expression. This suggests the miRNA is reducing expression of its target genes through translational repression or mRNA degradation. Note also that this miRNA matches miR-2023.\n\n![](./output/edges_PCC_0.5_timeseries_miRNA_lncRNA_genes.csv-CLUSTER_5603.png)\n\nCluster_5603 appears to putatively interact with one of the largest proportions of lncRNA. It matches the previously described miRNA \"Novel-5_3p\".\n\n![](./output/edges_PCC_0.5_timeseries_miRNA_lncRNA_genes.csv-CLUSTER_17192.png)\n\nCluster_17192 is primarily of interest becasue it matches miR-100, a highly conserved and well described miRNA. It also becomes apparent after isolation that one of the putative gene targets, FUN_014449, has a remarkable number of edges connecting it to Cluster_17192. This indicates that miRanda output a significant likelihood of Cluster_17192 binding to many different location on the mRNA\n\nWe can check exactly how many:\n\n::: {.cell}\n\n```{.r .cell-code}\nmiRNA_gene %>% filter(PCC_magnitude > 0.5 & interaction == \"Cluster_17192 _ FUN_014449\") %>% nrow()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 129\n```\n:::\n:::\n\n\n![](./output/edges_PCC_0.5_timeseries_miRNA_lncRNA_genes.csv-CLUSTER_9532.png)\n\nCluster_9532 matches miR-2022, about which we actually know a fair bit of functional information!\n\n\nI have a notebook post detailing what functional information we have for previously described miRNA, [here](./2025_04_10_dde_named_miRNA_functions.qmd)\n\n\n\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}