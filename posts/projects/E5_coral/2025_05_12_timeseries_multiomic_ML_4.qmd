---
title: "Timeseries molecular: A.pul, multiomic features to predict expression. Machine learning -- Part 4"
author: "Kathleen Durkin"
date: "2025-05-12"
categories: ["E5-coral"]
format:
  html:
    toc: true
execute: 
  eval: FALSE
engine: knitr
bibliography: ../../../references.bib
---

[Code](https://github.com/urol-e5/timeseries_molecular/blob/main/D-Apul/code/22.3-Apul-multiomic-machine-learning-byTP.Rmd)

[Rendered Code](https://github.com/urol-e5/timeseries_molecular/blob/main/D-Apul/code/22.3-Apul-multiomic-machine-learning-byTP.md)

For each of the consistently well-predicted genes identified in [my last post](./2025_05_08_timeseries_multiomic_ML_3.qmd), I plotted thegene's expression with that of its top 5 most important predictors.

# 10 Plot expression of genes and their predictors

``` r
# Put predictor expression in format with samples in columns
full_pred_counts_t <- t(full_pred_counts)

# Loop over each feature in the list
for (feature in names(top_predictors)) {
  
  # Get top 5 predictors for this feature
  top_df <- top_predictors[[feature]]
  predictors <- top_df$Predictor
  
  # Combine feature and predictors
  all_genes <- c(feature, predictors)
  
  # Check which genes are actually present
  present_genes <- all_genes[all_genes %in% rownames(full_pred_counts_t) | all_genes %in% rownames(vsd_energetic_state_GO)]
  
  if (!(feature %in% rownames(vsd_energetic_state_GO))) {
    warning(paste("Feature", feature, "not found in vsd_energetic_state_GO Skipping..."))
    next
  }

  # Extract predictor expression (only those present)
  predictor_expr <- full_pred_counts_t[intersect(predictors, rownames(full_pred_counts_t)), , drop = FALSE] %>% as.data.frame()

  # Add the feature expression
  feature_expr <- vsd_energetic_state_GO[feature, , drop = FALSE] %>% as.data.frame()
  
  # Combine into one data frame
  combined_expr <- rbind(predictor_expr, feature_expr)
  combined_expr$Gene <- rownames(combined_expr)
  
  # Convert to long format
  expr_long <- combined_expr %>%
    pivot_longer(-Gene, names_to = "Sample", values_to = "Expression")
  
  # Join with sample metadata
  expr_long <- expr_long %>%
    left_join(metadata, by = "Sample")
  
  # Plot, with colonies aggregated by timepoint
  # p <- ggplot(expr_long, aes(x = interaction(Timepoint), y = Expression, color = Gene, group = Gene)) +
  #   geom_point(alpha = 0.7) +
  #   geom_smooth(se = FALSE, method = "loess") +
  #   labs(title = paste("Expression of", feature, "and Top 5 Predictors"),
  #        x = "Colony-Timepoint",
  #        y = "Expression") +
  #   theme_minimal() +
  #   theme(axis.text.x = element_text(angle = 45, hjust = 1))
  
  # Plot, faceted by colony
  p <- ggplot(expr_long, aes(x = Timepoint, y = Expression, color = Gene, group = Gene)) +
  geom_point(alpha = 0.7) +
  geom_smooth(se = FALSE, method = "loess", linewidth = 0.8) +
  facet_wrap(~ColonyID) +
  labs(title = paste("Expression of", feature, "and Top 5 Predictors by Colony"),
       x = "Timepoint",
       y = "Expression") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

  
  print(p)
}
```

![](./images/22.3-Apul-multiomic-machine-learning-byTP_files_2/unnamed-chunk-73-1.png)<!-- -->

![](./images/22.3-Apul-multiomic-machine-learning-byTP_files_2/unnamed-chunk-73-2.png)<!-- -->

![](./images/22.3-Apul-multiomic-machine-learning-byTP_files_2/unnamed-chunk-73-3.png)<!-- -->

![](./images/22.3-Apul-multiomic-machine-learning-byTP_files_2/unnamed-chunk-73-4.png)<!-- -->

![](./images/22.3-Apul-multiomic-machine-learning-byTP_files_2/unnamed-chunk-73-5.png)<!-- -->

![](./images/22.3-Apul-multiomic-machine-learning-byTP_files_2/unnamed-chunk-73-6.png)<!-- -->

![](./images/22.3-Apul-multiomic-machine-learning-byTP_files_2/unnamed-chunk-73-7.png)<!-- -->

![](./images/22.3-Apul-multiomic-machine-learning-byTP_files_2/unnamed-chunk-73-8.png)<!-- -->

![](./images/22.3-Apul-multiomic-machine-learning-byTP_files_2/unnamed-chunk-73-9.png)<!-- -->

![](./images/22.3-Apul-multiomic-machine-learning-byTP_files_2/unnamed-chunk-73-10.png)<!-- -->

![](./images/22.3-Apul-multiomic-machine-learning-byTP_files_2/unnamed-chunk-73-11.png)<!-- -->

![](./images/22.3-Apul-multiomic-machine-learning-byTP_files_2/unnamed-chunk-73-12.png)<!-- -->

![](./images/22.3-Apul-multiomic-machine-learning-byTP_files_2/unnamed-chunk-73-13.png)<!-- -->

![](./images/22.3-Apul-multiomic-machine-learning-byTP_files_2/unnamed-chunk-73-14.png)<!-- -->

![](./images/22.3-Apul-multiomic-machine-learning-byTP_files_2/unnamed-chunk-73-15.png)<!-- -->

![](./images/22.3-Apul-multiomic-machine-learning-byTP_files_2/unnamed-chunk-73-16.png)<!-- -->

![](./images/22.3-Apul-multiomic-machine-learning-byTP_files_2/unnamed-chunk-73-17.png)<!-- -->

![](./images/22.3-Apul-multiomic-machine-learning-byTP_files_2/unnamed-chunk-73-18.png)<!-- -->

![](./images/22.3-Apul-multiomic-machine-learning-byTP_files_2/unnamed-chunk-73-19.png)<!-- -->

![](./images/22.3-Apul-multiomic-machine-learning-byTP_files_2/unnamed-chunk-73-20.png)<!-- -->

![](./images/22.3-Apul-multiomic-machine-learning-byTP_files_2/unnamed-chunk-73-21.png)<!-- -->

![](./images/22.3-Apul-multiomic-machine-learning-byTP_files_2/unnamed-chunk-73-22.png)<!-- -->

![](./images/22.3-Apul-multiomic-machine-learning-byTP_files_2/unnamed-chunk-73-23.png)<!-- -->

![](./images/22.3-Apul-multiomic-machine-learning-byTP_files_2/unnamed-chunk-73-24.png)<!-- -->

![](./images/22.3-Apul-multiomic-machine-learning-byTP_files_2/unnamed-chunk-73-25.png)<!-- -->

![](./images/22.3-Apul-multiomic-machine-learning-byTP_files_2/unnamed-chunk-73-26.png)<!-- -->

![](./images/22.3-Apul-multiomic-machine-learning-byTP_files_2/unnamed-chunk-73-27.png)<!-- -->

![](./images/22.3-Apul-multiomic-machine-learning-byTP_files_2/unnamed-chunk-73-28.png)<!-- -->

![](./images/22.3-Apul-multiomic-machine-learning-byTP_files_2/unnamed-chunk-73-29.png)<!-- -->

![](./images/22.3-Apul-multiomic-machine-learning-byTP_files_2/unnamed-chunk-73-30.png)<!-- -->

![](./images/22.3-Apul-multiomic-machine-learning-byTP_files_2/unnamed-chunk-73-31.png)<!-- -->

![](./images/22.3-Apul-multiomic-machine-learning-byTP_files_2/unnamed-chunk-73-32.png)<!-- -->

![](./images/22.3-Apul-multiomic-machine-learning-byTP_files_2/unnamed-chunk-73-33.png)<!-- -->

![](./images/22.3-Apul-multiomic-machine-learning-byTP_files_2/unnamed-chunk-73-34.png)<!-- -->

#### Notes

This gene stood out to me before because one of its primary predictors is an miRNA.

![](./images/22.3-Apul-multiomic-machine-learning-byTP_files_2/unnamed-chunk-73-7.png)

The miRNA Cluster_17173 both putatively binds to FUN_00702 (with several possible binding configurations) and is strongly negatively correlated based on pairwise PCC (PCC = -0.676).

Cluster_17173 *also* putatively binds to and is strongly positively a correlated with lncRNA_5655, which is the most highly predictive feature for FUN_007022 expression (several possible binding configurations, PCC = 0.522).

Cluster_17173 doesn't match any previously described miRNA (see ShortStack results [here](https://github.com/urol-e5/timeseries_molecular/blob/main/D-Apul/output/04-Apul-sRNA-discovery-ShortStack/ShortStack_out/Results.txt)).

![](https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/images/22.3-Apul-multiomic-machine-learning-byTP_files/figure-gfm/unnamed-chunk-72-7.png)

This is also a useful sanity check in general, because we see some "highly predicted" genes are actually just invariant. For example, FUN_026128 was well-predicted by just a couple of lncRNA, which was potentially very interesting.

![](https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/images/22.3-Apul-multiomic-machine-learning-byTP_files/figure-gfm/unnamed-chunk-72-19.png)

However, upon plotting the expression, we see the gene is just invariant over time, and was "predicted by" other largely invariant features.

![](./images/22.3-Apul-multiomic-machine-learning-byTP_files_2/unnamed-chunk-73-19.png)<!-- -->
