<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>Kathleen&#39;s Lab Notebook</title>
<link>https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral.html</link>
<atom:link href="https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral.xml" rel="self" type="application/rss+xml"/>
<description></description>
<generator>quarto-1.3.433</generator>
<lastBuildDate>Tue, 11 Mar 2025 07:00:00 GMT</lastBuildDate>
<item>
  <title>Timeseries molecular: A.pul WGCNA, mRNA and miRNA</title>
  <dc:creator>Kathleen Durkin</dc:creator>
  <link>https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/2025_03_11_timeseries_WGCNA.html</link>
  <description><![CDATA[ 




<p>Working with the <em>A. pulchra</em> timeseries gene expression (RNA + sRNA) data from E5 Coral project.</p>
<p><a href="https://github.com/urol-e5/timeseries_molecular/blob/main/D-Apul/code/12-Apul-miRNA-mRNA-WGCNA.md">Code</a></p>
<section id="summary" class="level1">
<h1>Summary</h1>
<p>I ran a Weighted Gene Correlation Network Analysis (WGCNA) with both gene and miRNA expression to a) group similarly-expressed sets of genes and/or miRNAs into “modules” of coexpression, and b) evaluate correlation of gene expression modules with different physiological and environmental variables.</p>
<p>Note that, unlike my original trials with WGCNA, I variance stabilized the gene counts and miRNA counts <em>separately</em> this time, after talking w Ariana about how to prep data appropriately. This didn’t have a huge impact on overall trends (which were already driven by the genes, not miRNA), but it really impacted miRNA module placement. When I VST’d everything together almost all miRNA ended up placed in the same module, likely because all the miRNA have relatively low counts. After performing VST separately, WGCNA now places the miRNA across ~15 modules.</p>
<p><img src="https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/https:/github.com/urol-e5/timeseries_molecular/blob/main/D-Apul/code/12-Apul-miRNA-mRNA-WGCNA_files/figure-gfm/unnamed-chunk-31-1.png?raw=true" class="img-fluid"></p>
<p>WGCNA identified a total of 54 modules of coexpressed genes/miRNA, 19 of which contain miRNA. Roughly half of the miRNA are contained within a single module, one of the larger modules that likely represents housekeeping function. The remaining miRNA are spread out, generally the only miRNA in their modules.</p>
<p><img src="https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/https:/github.com/urol-e5/timeseries_molecular/blob/main/D-Apul/code/12-Apul-miRNA-mRNA-WGCNA_files/figure-gfm/unnamed-chunk-34-1.png?raw=true" class="img-fluid"></p>
<p>In the above interaction network plot, each module is shown as a node. Modules that contain miRNA are black nodes, while gene-only modules are in grey. A line between two modules indicates the module eigengenes are significantly correlated, with a correlation coefficient magnitude of at least 0.7. Blue shading indicates positive correlation and red indicates negative correlation.</p>
<p>To look for potential miRNA-target mRNA interactions we’re looking for negative correlations where at least one module contains miRNA. I count roughly 20 of these!</p>
<p><img src="https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/images/Module-trait-relationship-heatmap.jpg" class="img-fluid"></p>
<p>Ran correlation of modules with physiological and environmental variables, and some interesting stuff popped out! Interestingly, timepoints 2 and 3 have significantly correlated modules, but timepoints 1 and 4 don’t. This suggests the influence of timepoint stems largely from the temperature conditions, since a) timepoints 2 and 3 have the most “extreme” temperatures (in comparison to annual mean), and b) many of their correlated modules are also significantly correlated with temperature. Interestingly, timepoints 2 and 3 (March and September 2020) are actually extreme in opposite directions. March 2020 was the warmest timepoint and September was the coolest. If the two are correlated with very similar sets of gene modules, that suggests very similar expression pathways are used in response to both heat stress and cold stress in A.pulchra!</p>
<p><img src="https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/https:/github.com/urol-e5/timeseries_molecular/blob/main/D-Apul/code/12-Apul-miRNA-mRNA-WGCNA_files/figure-gfm/unnamed-chunk-48-1.png?raw=true" class="img-fluid"></p>
<p>We can also plot out the eigengene expression of modules of interest across variables. Above are all the modules significantly correlated withe temperature, plotted across standardized temperature.</p>
</section>
<section id="update-03182025" class="level1">
<h1>Update 03/18/2025:</h1>
<p>After plotting eigengene expression for modules significantly correlated with timepoints 2 and 3 (there are no modules significantly correlated with timepoints 1 and 4), something else pops out. First, TP3 is significantly correlated with many more modules than TP2 (15 vs.&nbsp;6). Second, several of these overlap <em>and</em> show matching expression profiles. Modules 1, 2, and 19 are significantly correlated with both TP2 and TP3, indicating significant differential expression when comparing TP2 to all other seasons and when comparing TP3 to all other seasons. Additionally, Modules 1, 2, and 19 are upregulated, downregulated, and upregulated, respectively, for both TP2 and TP3. See plots below:</p>
<p><img src="https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/https:/github.com/urol-e5/timeseries_molecular/blob/main/D-Apul/code/12-Apul-miRNA-mRNA-WGCNA_files/figure-gfm/unnamed-chunk-48-4.png?raw=true" class="img-fluid"></p>
<p><img src="https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/https:/github.com/urol-e5/timeseries_molecular/blob/main/D-Apul/code/12-Apul-miRNA-mRNA-WGCNA_files/figure-gfm/unnamed-chunk-48-5.png?raw=true" class="img-fluid"></p>
<p>I’ve also plotted the eigengene expression of modules significantly correlated with our other two environmental variables, solar radiation and rainfall. Interestingly, Module 18 is the only significantly correlated module for both solar radiation and rainfall, but shows inverse patterns of eigengene expression for the two. Module 18 is also one of the modules significantly correlated with TP3. Notably, both solar radiation and rainfall hit “extremes” at TP3 (TP3 represents both the maximum recorded solar radiation and minimum recorded rainfall of our 4 timepoints). See plots below:</p>
<p><img src="https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/https:/github.com/urol-e5/timeseries_molecular/blob/main/D-Apul/code/12-Apul-miRNA-mRNA-WGCNA_files/figure-gfm/unnamed-chunk-48-2.png?raw=true" class="img-fluid"></p>
<p><img src="https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/https:/github.com/urol-e5/timeseries_molecular/blob/main/D-Apul/code/12-Apul-miRNA-mRNA-WGCNA_files/figure-gfm/unnamed-chunk-48-3.png?raw=true" class="img-fluid"></p>
</section>
<section id="code" class="level1">
<h1>Code:</h1>
<p>Running Weighted Gene Correlation Network Analysis (WGCNA) to assess patterns of miRNA-mRNA coexpression in A.pulchra.</p>
</section>
<section id="install-and-load-packages" class="level1">
<h1>1 Install and load packages</h1>
<pre><code>library(tidyverse) library(ggplot2) library(WGCNA) library(magrittr) library(genefilter) library(DESeq2) library(ggfortify) library(RColorBrewer) library(pheatmap) library(factoextra) library(vegan) library(dendsort) library(ComplexHeatmap) library(psych) library(igraph) library(ggraph)</code></pre>
</section>
<section id="load-and-prep-data" class="level1">
<h1>2 Load and prep data</h1>
<p>Load in count matrices for RNAseq.</p>
<pre><code># raw gene counts data (will filter and variance stabilize) Apul_genes &lt;- read_csv("../output/02.20-D-Apul-RNAseq-alignment-HiSat2/apul-gene_count_matrix.csv") Apul_genes &lt;- as.data.frame(Apul_genes)  # format gene IDs as rownames (instead of a column) rownames(Apul_genes) &lt;- Apul_genes$gene_id Apul_genes &lt;- Apul_genes%&gt;%select(!gene_id)   # load and format metadata metadata &lt;- read_csv("../../M-multi-species/data/rna_metadata.csv")%&gt;%select(AzentaSampleName, ColonyID, Timepoint)%&gt;%   filter(grepl("ACR", ColonyID)) metadata$Sample &lt;- paste(metadata$AzentaSampleName, metadata$ColonyID, metadata$Timepoint, sep = "_")  colonies &lt;- unique(metadata$ColonyID)  # Load physiological data phys&lt;-read_csv("https://github.com/urol-e5/timeseries/raw/refs/heads/master/time_series_analysis/Output/master_timeseries.csv")%&gt;%filter(colony_id_corr %in% colonies)%&gt;%   select(colony_id_corr, species, timepoint, site, Host_AFDW.mg.cm2, Sym_AFDW.mg.cm2, Am, AQY, Rd, Ik, Ic, calc.umol.cm2.hr, cells.mgAFDW, prot_mg.mgafdw, Ratio_AFDW.mg.cm2, Total_Chl, Total_Chl_cell, cre.umol.mgafdw) # format timepoint phys$timepoint &lt;- gsub("timepoint", "TP", phys$timepoint) #add column with full sample info phys &lt;- merge(phys, metadata, by.x = c("colony_id_corr", "timepoint"), by.y = c("ColonyID", "Timepoint")) %&gt;%   select(-AzentaSampleName)     #add site information into metadata  metadata$Site&lt;-phys$site[match(metadata$ColonyID, phys$colony_id_corr)]   # Rename gene column names to include full sample info (as in miRNA table) colnames(Apul_genes) &lt;- metadata$Sample[match(colnames(Apul_genes), metadata$AzentaSampleName)]  # raw miRNA counts (will filter and variance stabilize) Apul_miRNA &lt;- read.table(file = "../output/03.10-D-Apul-sRNAseq-expression-DESeq2/Apul_miRNA_ShortStack_counts_formatted.txt", header = TRUE, sep = "\t", check.names = FALSE)</code></pre>
<p>Ensure there are no genes or miRNAs with 0 counts across all samples.</p>
<pre><code>nrow(Apul_genes)</code></pre>
<pre><code>[1] 44371 </code></pre>
<pre><code>Apul_genes&lt;-Apul_genes %&gt;%      mutate(Total = rowSums(.[, 1:40]))%&gt;%     filter(!Total==0)%&gt;%     dplyr::select(!Total)  nrow(Apul_genes)</code></pre>
<pre><code>[1] 35869 </code></pre>
<pre><code># miRNAs nrow(Apul_miRNA)</code></pre>
<pre><code>[1] 51 </code></pre>
<pre><code>Apul_miRNA&lt;-Apul_miRNA %&gt;%      mutate(Total = rowSums(.[, 1:40]))%&gt;%     filter(!Total==0)%&gt;%     dplyr::select(!Total)  nrow(Apul_miRNA)</code></pre>
<pre><code>[1] 51 </code></pre>
<p>Removing genes with only 0 counts reduced number from 44371 to 35869. Retained all 51 miRNAs.</p>
<section id="physiology-filtering" class="level2">
<h2 class="anchored" data-anchor-id="physiology-filtering">2.1 Physiology filtering</h2>
<p>Run PCA on physiology data to see if there are phys outliers</p>
<p>Export data for PERMANOVA test.</p>
<pre><code>test&lt;-as.data.frame(phys) test&lt;-test[complete.cases(test), ]</code></pre>
<p>Build PERMANOVA model.</p>
<pre><code>scaled_test &lt;-prcomp(test%&gt;%select(where(is.numeric)), scale=TRUE, center=TRUE) fviz_eig(scaled_test)</code></pre>
<pre><code># scale data vegan &lt;- scale(test%&gt;%select(where(is.numeric)))  # PerMANOVA  permanova&lt;-adonis2(vegan ~ timepoint*site, data = test, method='eu') permanova</code></pre>
<pre><code>Permutation test for adonis under reduced model Permutation: free Number of permutations: 999  adonis2(formula = vegan ~ timepoint * site, data = test, method = "eu")          Df SumOfSqs      R2      F Pr(&gt;F)     Model     7   208.16 0.43731 2.9976  0.001 *** Residual 27   267.84 0.56269                   Total    34   476.00 1.00000                   --- Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 </code></pre>
<pre><code>pca1&lt;-ggplot2::autoplot(scaled_test, data=test, frame.colour="timepoint", loadings=FALSE,  colour="timepoint", shape="site", loadings.label.colour="black", loadings.colour="black", loadings.label=FALSE, frame=FALSE, loadings.label.size=5, loadings.label.vjust=-1, size=5) +    geom_text(aes(x = PC1, y = PC2, label = paste(colony_id_corr, timepoint)), vjust = -0.5)+   theme_classic()+    theme(legend.text = element_text(size=18),           legend.position="right",         plot.background = element_blank(),         legend.title = element_text(size=18, face="bold"),          axis.text = element_text(size=18),          axis.title = element_text(size=18,  face="bold"));pca1</code></pre>
<p>Remove ACR-173, timepoint 3 sample from analysis. This is Azenta sample 1B2.</p>
<pre><code>Apul_genes &lt;- Apul_genes%&gt;%   select(!`1B2_ACR-173_TP3`)  Apul_miRNA &lt;- Apul_miRNA%&gt;%   select(!`1B2_ACR-173_TP3`)  metadata &lt;- metadata %&gt;%   filter(Sample != "1B2_ACR-173_TP3")</code></pre>
<p>We also do not have phys data for colony 1B9 ACR-265 at TP4, so I'll remove that here as well.</p>
<pre><code>Apul_genes &lt;- Apul_genes%&gt;%   select(!`1B9_ACR-265_TP4`)  Apul_miRNA &lt;- Apul_miRNA%&gt;%   select(!`1B9_ACR-265_TP4`)  metadata &lt;- metadata %&gt;%   filter(Sample != "1B9_ACR-265_TP4")</code></pre>
</section>
<section id="povera-filtering" class="level2">
<h2 class="anchored" data-anchor-id="povera-filtering">2.2 pOverA filtering</h2>
<p><em>pOverA</em>: Specifying the minimum count for a proportion of samples for each gene. Here, we are using a pOverA of 0.1. This is because we have 40 samples with a minimum of n=4 samples per timepoint per site. Therefore, we will accept genes that are present in 4/40 = 0.1 of the samples because we expect different expression by life stage. We are further setting the minimum count of genes and miRNA to 10, such that 12.5% of the samples must have a gene count of &gt;10 in order for the gene to remain in the data set.</p>
<p>Filter in the package "genefilter". Pre-filtering our dataset to reduce the memory size dataframe, increase the speed of the transformation and testing functions, and improve quality of statistical analysis by removing low-coverage counts. Removed counts could represent outliers in the data and removing these improves sensitivity of statistical tests.</p>
<p>genes:</p>
<pre><code>filt &lt;- filterfun(pOverA(0.1,10))  #create filter for the counts data gfilt &lt;- genefilter(Apul_genes, filt)  #identify genes to keep by count filter gkeep &lt;- Apul_genes[gfilt,]  #identify genes to keep by count filter gkeep &lt;- Apul_genes[gfilt,]  #identify gene lists gn.keep &lt;- rownames(gkeep)  #gene count data filtered in PoverA, P percent of the samples have counts over A Apul_genes_filt &lt;- as.data.frame(Apul_genes[which(rownames(Apul_genes) %in% gn.keep),])  #How many rows do we have before and after filtering? nrow(Apul_genes) #Before</code></pre>
<pre><code>[1] 35869 </code></pre>
<pre><code>nrow(Apul_genes_filt) #After</code></pre>
<pre><code>[1] 23459 </code></pre>
<p>We had 35869 genes before, and 23459 genes after filtering.</p>
<p>miRNA:</p>
<pre><code>mifilt &lt;- filterfun(pOverA(0.1,10))  #create filter for the counts data mifilt &lt;- genefilter(Apul_miRNA, mifilt)  #identify genes to keep by count filter mikeep &lt;- Apul_miRNA[mifilt,]  #identify genes to keep by count filter mikeep &lt;- Apul_miRNA[mifilt,]  #identify gene lists mi.keep &lt;- rownames(mikeep)  #gene count data filtered in PoverA, P percent of the samples have counts over A Apul_miRNA_filt &lt;- as.data.frame(Apul_miRNA[which(rownames(Apul_miRNA) %in% mi.keep),])  #How many rows do we have before and after filtering? nrow(Apul_miRNA) #Before</code></pre>
<pre><code>[1] 51 </code></pre>
<pre><code>nrow(Apul_miRNA_filt) #After</code></pre>
<pre><code>[1] 43 </code></pre>
<p>Of our original 51 miRNAs, 43 are retained.</p>
</section>
<section id="assign-metadata-and-arrange-order-of-columns" class="level2">
<h2 class="anchored" data-anchor-id="assign-metadata-and-arrange-order-of-columns">2.3 Assign metadata and arrange order of columns</h2>
<p>Order metadata the same as the column order in the gene matrix.</p>
<pre><code>list&lt;-colnames(Apul_genes_filt) list&lt;-as.factor(list)  metadata$Sample&lt;-as.factor(metadata$Sample)  # Re-order the levels metadata$Sample &lt;- factor(as.character(metadata$Sample), levels=list) # Re-order the data.frame metadata_ordered &lt;- metadata[order(metadata$Sample),] metadata_ordered$Sample</code></pre>
<pre><code> [1] 1A1_ACR-173_TP1  1A10_ACR-145_TP4 1A12_ACR-237_TP3 1A2_ACR-244_TP4   [5] 1A8_ACR-186_TP2  1A9_ACR-244_TP2  1B1_ACR-225_TP3  1B10_ACR-150_TP4  [9] 1B5_ACR-229_TP1  1C10_ACR-173_TP4 1C4_ACR-139_TP4  1D10_ACR-265_TP2 [13] 1D3_ACR-225_TP4  1D4_ACR-237_TP4  1D6_ACR-229_TP2  1D8_ACR-237_TP2  [17] 1D9_ACR-229_TP4  1E1_ACR-265_TP3  1E3_ACR-150_TP2  1E5_ACR-139_TP3  [21] 1E9_ACR-237_TP1  1F11_ACR-173_TP2 1F4_ACR-150_TP3  1F8_ACR-145_TP3  [25] 1G5_ACR-244_TP3  1H11_ACR-225_TP1 1H12_ACR-186_TP3 1H6_ACR-225_TP2  [29] 1H7_ACR-229_TP3  1H8_ACR-186_TP4  2B2_ACR-145_TP1  2B3_ACR-139_TP2  [33] 2C1_ACR-244_TP1  2C2_ACR-139_TP1  2D2_ACR-150_TP1  2E2_ACR-186_TP1  [37] 2F1_ACR-265_TP1  2G1_ACR-145_TP2  38 Levels: 1A1_ACR-173_TP1 1A10_ACR-145_TP4 ... 2G1_ACR-145_TP2 </code></pre>
<pre><code># Make sure the miRNA colnames are also in the same order as the gene colnames Apul_miRNA_filt &lt;- Apul_miRNA_filt[, colnames(Apul_genes_filt)]</code></pre>
<p>Metadata and gene count matrix are now ordered the same.</p>
</section>
<section id="conduct-variance-stabilized-transformation" class="level2">
<h2 class="anchored" data-anchor-id="conduct-variance-stabilized-transformation">2.4 Conduct variance stabilized transformation</h2>
<p>VST should be performed on our two input datasets (gene counts and miRNA counts) separately</p>
<section id="genes" class="level3">
<h3 class="anchored" data-anchor-id="genes">2.4.1 Genes:</h3>
<pre><code>#Set DESeq2 design dds_genes &lt;- DESeqDataSetFromMatrix(countData = Apul_genes_filt,                               colData = metadata_ordered,                               design = ~Timepoint+ColonyID)</code></pre>
<p>Check size factors.</p>
<pre><code>SF.dds_genes &lt;- estimateSizeFactors(dds_genes) #estimate size factors to determine if we can use vst  to transform our data. Size factors should be less than 4 for us to use vst print(sizeFactors(SF.dds_genes)) #View size factors</code></pre>
<pre><code> 1A1_ACR-173_TP1 1A10_ACR-145_TP4 1A12_ACR-237_TP3  1A2_ACR-244_TP4         0.7568024        0.7696399        1.4231584        0.6405377   1A8_ACR-186_TP2  1A9_ACR-244_TP2  1B1_ACR-225_TP3 1B10_ACR-150_TP4         1.1211635        1.2042163        1.4204528        1.4016702   1B5_ACR-229_TP1 1C10_ACR-173_TP4  1C4_ACR-139_TP4 1D10_ACR-265_TP2         1.6052144        0.7137948        1.1899017        1.1365146   1D3_ACR-225_TP4  1D4_ACR-237_TP4  1D6_ACR-229_TP2  1D8_ACR-237_TP2         0.6729713        1.0536139        1.0899755        0.8696891   1D9_ACR-229_TP4  1E1_ACR-265_TP3  1E3_ACR-150_TP2  1E5_ACR-139_TP3         0.6693270        1.0722064        1.1788615        1.2212146   1E9_ACR-237_TP1 1F11_ACR-173_TP2  1F4_ACR-150_TP3  1F8_ACR-145_TP3         1.0404211        1.0438667        1.4019603        0.7945692   1G5_ACR-244_TP3 1H11_ACR-225_TP1 1H12_ACR-186_TP3  1H6_ACR-225_TP2         1.6112366        1.4231584        0.6115323        0.7945692   1H7_ACR-229_TP3  1H8_ACR-186_TP4  2B2_ACR-145_TP1  2B3_ACR-139_TP2         1.3289756        1.2189223        1.1023879        1.4414683   2C1_ACR-244_TP1  2C2_ACR-139_TP1  2D2_ACR-150_TP1  2E2_ACR-186_TP1         0.6642454        1.1948320        0.7798443        0.6226576   2F1_ACR-265_TP1  2G1_ACR-145_TP2         0.9539809        0.8200694  </code></pre>
<pre><code>all(sizeFactors(SF.dds_genes)) &lt; 4</code></pre>
<pre><code>[1] TRUE </code></pre>
<p>All size factors are less than 4, so we can use VST transformation.</p>
<pre><code>vsd_genes &lt;- vst(dds_genes, blind=FALSE) #apply a variance stabilizing transformation to minimize effects of small counts and normalize with respect to library size head(assay(vsd_genes), 3) #view transformed gene count data for the first three genes in the dataset.  </code></pre>
<pre><code>           1A1_ACR-173_TP1 1A10_ACR-145_TP4 1A12_ACR-237_TP3 1A2_ACR-244_TP4 FUN_002326        6.660702         6.601151         6.296062        6.022911 FUN_002303        7.454351         7.019662         6.664320        6.169453 FUN_002305        7.454351         7.036585         6.800146        6.102559            1A8_ACR-186_TP2 1A9_ACR-244_TP2 1B1_ACR-225_TP3 1B10_ACR-150_TP4 FUN_002326        5.936082        5.926631        6.318421         6.254378 FUN_002303        5.996527        6.034064        6.665234         6.541184 FUN_002305        6.092074        6.077224        6.801173         6.736355            1B5_ACR-229_TP1 1C10_ACR-173_TP4 1C4_ACR-139_TP4 1D10_ACR-265_TP2 FUN_002326        5.825783         6.607816        5.928189         6.232170 FUN_002303        5.942425         7.032182        6.277071         6.617129 FUN_002305        5.891826         6.976191        6.277071         6.834957            1D3_ACR-225_TP4 1D4_ACR-237_TP4 1D6_ACR-229_TP2 1D8_ACR-237_TP2 FUN_002326        6.474013        6.576064        5.859845        6.439541 FUN_002303        6.718366        6.946757        5.939907        6.842014 FUN_002305        6.818777        7.072513        6.001201        7.109262            1D9_ACR-229_TP4 1E1_ACR-265_TP3 1E3_ACR-150_TP2 1E5_ACR-139_TP3 FUN_002326        5.913234        6.142834        5.929410        5.982758 FUN_002303        5.666063        6.527629        6.120940        6.212425 FUN_002305        5.913234        6.696940        6.190595        6.321001            1E9_ACR-237_TP1 1F11_ACR-173_TP2 1F4_ACR-150_TP3 1F8_ACR-145_TP3 FUN_002326        6.473872         6.187513        6.254318        6.341284 FUN_002303        6.855660         6.538906        6.772955        6.685573 FUN_002305        6.870372         6.580167        6.927720        6.731014            1G5_ACR-244_TP3 1H11_ACR-225_TP1 1H12_ACR-186_TP3 1H6_ACR-225_TP2 FUN_002326        5.891405         6.296062         6.031232        6.341284 FUN_002303        6.167920         6.664320         6.112711        6.685573 FUN_002305        6.279189         6.800146         6.181130        6.731014            1H7_ACR-229_TP3 1H8_ACR-186_TP4 2B2_ACR-145_TP1 2B3_ACR-139_TP2 FUN_002326        5.841581        5.925058        6.300492        5.957649 FUN_002303        5.841581        6.148991        6.648931        6.077732 FUN_002305        5.914130        6.181995        6.666283        6.140886            2C1_ACR-244_TP1 2C2_ACR-139_TP1 2D2_ACR-150_TP1 2E2_ACR-186_TP1 FUN_002326        6.016517        5.986221        6.784206        6.027972 FUN_002303        6.094757        6.247838        7.044774        6.027972 FUN_002305        6.094757        6.275828        7.028204        6.108734            2F1_ACR-265_TP1 2G1_ACR-145_TP2 FUN_002326        6.555466        6.163523 FUN_002303        6.889927        6.670217 FUN_002305        6.889927        6.715029 </code></pre>
<section id="pca" class="level4">
<h4 class="anchored" data-anchor-id="pca">2.4.1.1 PCA</h4>
<p>Keep in mind this is of both the genes and miRNAs. since there are vastly more genes than miRNAs, the PCA will be dictated by genes. for miRNas alone, see <code>03.10</code>.</p>
<pre><code>plotPCA(vsd_genes, intgroup = c("ColonyID"))</code></pre>
<pre><code>plotPCA(vsd_genes, intgroup = c("Timepoint"))</code></pre>
</section>
<section id="sample-clustering" class="level4">
<h4 class="anchored" data-anchor-id="sample-clustering">2.4.1.2 Sample clustering</h4>
<pre><code>sampleDists_genes &lt;- dist(t(assay(vsd_genes))) #calculate distance matrix sampleDistMatrix_genes &lt;- as.matrix(sampleDists_genes) #distance matrix rownames(sampleDistMatrix_genes) &lt;- colnames(vsd_genes) #assign row names colnames(sampleDistMatrix_genes) &lt;- NULL #assign col names colors &lt;- colorRampPalette( rev(brewer.pal(9, "Blues")) )(255) #assign colors  pht_genes &lt;- pheatmap(sampleDistMatrix_genes, #plot matrix          clustering_distance_rows=sampleDists_genes, #cluster rows          clustering_distance_cols=sampleDists_genes, #cluster columns          col=colors) #set colors  print(pht_genes)</code></pre>
</section>
</section>
<section id="mirna" class="level3">
<h3 class="anchored" data-anchor-id="mirna">2.4.2 miRNA</h3>
<pre><code>#Set DESeq2 design dds_miRNA &lt;- DESeqDataSetFromMatrix(countData = Apul_miRNA_filt,                               colData = metadata_ordered,                               design = ~Timepoint+ColonyID)</code></pre>
<p>Check size factors.</p>
<pre><code>SF.dds_miRNA &lt;- estimateSizeFactors(dds_miRNA) #estimate size factors to determine if we can use vst  to transform our data. Size factors should be less than 4 for us to use vst print(sizeFactors(SF.dds_miRNA)) #View size factors</code></pre>
<pre><code> 1A1_ACR-173_TP1 1A10_ACR-145_TP4 1A12_ACR-237_TP3  1A2_ACR-244_TP4         1.4375773        0.4873497        1.1278371        1.3906883   1A8_ACR-186_TP2  1A9_ACR-244_TP2  1B1_ACR-225_TP3 1B10_ACR-150_TP4         1.4576506        3.6175606        0.6314484        0.5933158   1B5_ACR-229_TP1 1C10_ACR-173_TP4  1C4_ACR-139_TP4 1D10_ACR-265_TP2         3.4568168        0.3494818        0.2635332        1.6883200   1D3_ACR-225_TP4  1D4_ACR-237_TP4  1D6_ACR-229_TP2  1D8_ACR-237_TP2         3.3510894        1.6862052        3.0187618        1.6095839   1D9_ACR-229_TP4  1E1_ACR-265_TP3  1E3_ACR-150_TP2  1E5_ACR-139_TP3         1.6452632        0.4710913        2.5273448        0.1018135   1E9_ACR-237_TP1 1F11_ACR-173_TP2  1F4_ACR-150_TP3  1F8_ACR-145_TP3         0.8833733        1.4438548        1.9140909        0.3982620   1G5_ACR-244_TP3 1H11_ACR-225_TP1 1H12_ACR-186_TP3  1H6_ACR-225_TP2         2.2537502        0.8044495        0.4593767        1.8545938   1H7_ACR-229_TP3  1H8_ACR-186_TP4  2B2_ACR-145_TP1  2B3_ACR-139_TP2         1.0932705        0.8296064        0.8877596        1.8683207   2C1_ACR-244_TP1  2C2_ACR-139_TP1  2D2_ACR-150_TP1  2E2_ACR-186_TP1         1.1967504        1.3986634        0.5117454        0.3091478   2F1_ACR-265_TP1  2G1_ACR-145_TP2         0.2926522        1.8710888  </code></pre>
<pre><code>all(sizeFactors(SF.dds_miRNA)) &lt; 4</code></pre>
<pre><code>[1] TRUE </code></pre>
<p>All size factors are less than 4, so we can use VST transformation.</p>
<pre><code>vsd_miRNA &lt;- varianceStabilizingTransformation(dds_miRNA, blind=FALSE) #apply a variance stabilizing transformation to minimize effects of small counts and normalize with respect to library size. Using varianceStabilizingTransformation() instead of vst() because few input genes head(assay(vsd_miRNA), 3) #view transformed gene count data for the first three genes in the dataset.  </code></pre>
<pre><code>             1A1_ACR-173_TP1 1A10_ACR-145_TP4 1A12_ACR-237_TP3 1A2_ACR-244_TP4 Cluster_1819        6.478249         6.557331         5.595735        6.196669 Cluster_1832       10.332441         9.422019         8.660731        9.451348 Cluster_1833        5.492142         5.650442         5.997705        5.263138              1A8_ACR-186_TP2 1A9_ACR-244_TP2 1B1_ACR-225_TP3 1B10_ACR-150_TP4 Cluster_1819        6.241157        6.812541        5.566107         5.341800 Cluster_1832        9.762292        9.276238        9.872929         8.600338 Cluster_1833        4.193715        3.266091        5.918124         4.687096              1B5_ACR-229_TP1 1C10_ACR-173_TP4 1C4_ACR-139_TP4 1D10_ACR-265_TP2 Cluster_1819        6.267787         6.117117        5.794925         6.226234 Cluster_1832       10.028421         9.433650        9.679103         8.588882 Cluster_1833        5.898084         4.582708        6.070238         3.266091              1D3_ACR-225_TP4 1D4_ACR-237_TP4 1D6_ACR-229_TP2 1D8_ACR-237_TP2 Cluster_1819        5.185576        5.368613        6.370127        6.091856 Cluster_1832        9.787300        9.226621        9.904788        8.713369 Cluster_1833        5.374313        6.204218        4.675660        5.725310              1D9_ACR-229_TP4 1E1_ACR-265_TP3 1E3_ACR-150_TP2 1E5_ACR-139_TP3 Cluster_1819        5.851833        5.857390        6.463126        5.183387 Cluster_1832        9.423066        9.183896        9.086751        8.848700 Cluster_1833        4.485634        5.961931        3.266091        3.266091              1E9_ACR-237_TP1 1F11_ACR-173_TP2 1F4_ACR-150_TP3 1F8_ACR-145_TP3 Cluster_1819        5.260586         6.304098        5.539388        6.243558 Cluster_1832        8.430433        10.072455        8.695247        9.120002 Cluster_1833        5.260586         5.047177        4.401214        5.091836              1G5_ACR-244_TP3 1H11_ACR-225_TP1 1H12_ACR-186_TP3 1H6_ACR-225_TP2 Cluster_1819        5.903188         5.294944         6.492645        5.406006 Cluster_1832       10.274857         9.602521         9.928946        9.881625 Cluster_1833        3.266091         5.388645         5.354900        5.218993              1H7_ACR-229_TP3 1H8_ACR-186_TP4 2B2_ACR-145_TP1 2B3_ACR-139_TP2 Cluster_1819        5.989093        5.677605        6.075343        5.752765 Cluster_1832        9.561175       10.065363        8.130532        9.915856 Cluster_1833        4.683765        6.098376        3.266091        4.655510              2C1_ACR-244_TP1 2C2_ACR-139_TP1 2D2_ACR-150_TP1 2E2_ACR-186_TP1 Cluster_1819        6.032448        5.734740        5.923774        6.583587 Cluster_1832        9.404192        9.672986        8.230369        9.454567 Cluster_1833        5.955020        5.072513        4.526078        3.266091              2F1_ACR-265_TP1 2G1_ACR-145_TP2 Cluster_1819        6.182672        5.659509 Cluster_1832        9.236968        9.156409 Cluster_1833        3.266091        4.937878 </code></pre>
<section id="pca-1" class="level4">
<h4 class="anchored" data-anchor-id="pca-1">2.4.2.1 PCA</h4>
<p>Keep in mind this is of both the genes and miRNAs. since there are vastly more genes than miRNAs, the PCA will be dictated by genes. for miRNas alone, see <code>03.10</code>.</p>
<pre><code>plotPCA(vsd_miRNA, intgroup = c("ColonyID"))</code></pre>
<pre><code>plotPCA(vsd_miRNA, intgroup = c("Timepoint"))</code></pre>
</section>
<section id="sample-clustering-1" class="level4">
<h4 class="anchored" data-anchor-id="sample-clustering-1">2.4.2.2 Sample clustering</h4>
<pre><code>sampleDists_miRNA &lt;- dist(t(assay(vsd_miRNA))) #calculate distance matrix sampleDistMatrix_miRNA &lt;- as.matrix(sampleDists_miRNA) #distance matrix rownames(sampleDistMatrix_miRNA) &lt;- colnames(vsd_miRNA) #assign row names colnames(sampleDistMatrix_miRNA) &lt;- NULL #assign col names colors &lt;- colorRampPalette( rev(brewer.pal(9, "Blues")) )(255) #assign colors  pht_miRNA &lt;- pheatmap(sampleDistMatrix_miRNA, #plot matrix          clustering_distance_rows=sampleDists_miRNA, #cluster rows          clustering_distance_cols=sampleDists_miRNA, #cluster columns          col=colors) #set colors  print(pht_miRNA)</code></pre>
</section>
</section>
</section>
<section id="combine-counts-data" class="level2">
<h2 class="anchored" data-anchor-id="combine-counts-data">2.5 Combine counts data</h2>
<pre><code># Extract variance stabilized counts as dataframes datExpr_genes &lt;- as.data.frame(t(assay(vsd_genes))) datExpr_miRNA &lt;- as.data.frame(t(assay(vsd_miRNA)))  # Double check the row names (sample names) are in same order rownames(datExpr_genes) == rownames(datExpr_miRNA)</code></pre>
<pre><code> [1] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE [16] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE [31] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE </code></pre>
<pre><code># Combine vst gene counts and vst miRNA counts by rows (sample names) datExpr &lt;- cbind(datExpr_genes, datExpr_miRNA)</code></pre>
</section>
</section>
<section id="outlier-checks" class="level1">
<h1>3 Outlier checks</h1>
<p>Look for outliers by examining tree of samples</p>
<pre><code>sampleTree = hclust(dist(datExpr), method = "average"); plot(sampleTree, main = "Sample clustering to detect outliers: genes", sub="", xlab="", cex.lab = 1.5, cex.axis = 1.5, cex.main = 2)</code></pre>
<p>Soft threshold selection. The soft thresholding power (β) is the number to which the co-expression similarity is raised to calculate adjacency. The function pickSoftThreshold performs a network topology analysis. The user chooses a set of candidate powers, however the default parameters are suitable values.</p>
<pre><code>allowWGCNAThreads()</code></pre>
<pre><code>Allowing multi-threading with up to 48 threads. </code></pre>
<pre><code># # Choose a set of soft-thresholding powers powers &lt;- c(seq(from = 1, to=19, by=2), c(21:30)) #Create a string of numbers from 1 through 10, and even numbers from 10 through 20 #  # # Call the network topology analysis function sft &lt;- pickSoftThreshold(datExpr, powerVector = powers, verbose = 5)</code></pre>
<pre><code>pickSoftThreshold: will use block size 1903.  pickSoftThreshold: calculating connectivity for given powers...    ..working on genes 1 through 1903 of 23502    ..working on genes 1904 through 3806 of 23502    ..working on genes 3807 through 5709 of 23502    ..working on genes 5710 through 7612 of 23502    ..working on genes 7613 through 9515 of 23502    ..working on genes 9516 through 11418 of 23502    ..working on genes 11419 through 13321 of 23502    ..working on genes 13322 through 15224 of 23502    ..working on genes 15225 through 17127 of 23502    ..working on genes 17128 through 19030 of 23502    ..working on genes 19031 through 20933 of 23502    ..working on genes 20934 through 22836 of 23502    ..working on genes 22837 through 23502 of 23502    Power SFT.R.sq slope truncated.R.sq mean.k. median.k. max.k. 1      1   0.0168  0.36          0.769 5420.00  5.13e+03   9220 2      3   0.8790 -1.48          0.979  865.00  6.27e+02   3320 3      5   0.9670 -1.59          0.994  256.00  1.30e+02   1760 4      7   0.9780 -1.53          0.996  103.00  3.65e+01   1110 5      9   0.9810 -1.48          0.996   50.80  1.22e+01    775 6     11   0.9840 -1.43          0.995   28.40  4.66e+00    581 7     13   0.9830 -1.40          0.993   17.50  1.95e+00    455 8     15   0.9840 -1.37          0.991   11.50  8.88e-01    370 9     17   0.9840 -1.34          0.990    8.04  4.26e-01    308 10    19   0.9890 -1.32          0.993    5.85  2.13e-01    263 11    21   0.9920 -1.30          0.995    4.41  1.12e-01    228 12    22   0.9890 -1.30          0.991    3.87  8.14e-02    213 13    23   0.9880 -1.29          0.989    3.42  5.97e-02    200 14    24   0.9830 -1.29          0.985    3.04  4.39e-02    189 15    25   0.9750 -1.29          0.977    2.71  3.26e-02    178 16    26   0.9760 -1.28          0.978    2.44  2.44e-02    169 17    27   0.9780 -1.27          0.979    2.20  1.83e-02    160 18    28   0.9770 -1.26          0.979    1.99  1.39e-02    152 19    29   0.9740 -1.27          0.978    1.81  1.05e-02    145 20    30   0.9700 -1.26          0.974    1.66  8.01e-03    138 </code></pre>
<p>Plot the results.</p>
<pre><code>sizeGrWindow(9, 5) par(mfrow = c(1,2)); cex1 = 0.9; # # # Scale-free topology fit index as a function of the soft-thresholding power plot(sft$fitIndices[,1], -sign(sft$fitIndices[,3])*sft$fitIndices[,2],       xlab="Soft Threshold (power)",ylab="Scale Free Topology Model Fit,signed R^2",type="n",      main = paste("Scale independence"));  text(sft$fitIndices[,1], -sign(sft$fitIndices[,3])*sft$fitIndices[,2],      labels=powers,cex=cex1,col="red"); # # # this line corresponds to using an R^2 cut-off  abline(h=0.9,col="red") # # # Mean connectivity as a function of the soft-thresholding power  plot(sft$fitIndices[,1], sft$fitIndices[,5],      xlab="Soft Threshold (power)",ylab="Mean Connectivity", type="n",      main = paste("Mean connectivity"))  text(sft$fitIndices[,1], sft$fitIndices[,5], labels=powers, cex=cex1,col="red")</code></pre>
<p>I used a scale-free topology fit index <strong>R^2 of 0.9</strong>. The lowest recommended R^2 by Langfelder and Horvath is 0.8. I chose 0.9 because we want to use the smallest soft thresholding power that maximizes with model fit. It appears that our <strong>soft thresholding power is 5</strong> because it is the lowest power above the R^2=0.9 threshold that maximizes with model fit. I will use a <strong>signed network</strong>.</p>
</section>
<section id="wgcna" class="level1">
<h1>4 WGCNA</h1>
<p>Now we're ready to run WGCNA!</p>
<pre><code>picked_power = 5 temp_cor &lt;- cor        cor &lt;- WGCNA::cor         # Force it to use WGCNA cor function (fix a namespace conflict issue) netwk_Apul &lt;- blockwiseModules(datExpr,                # &lt;= input here                            # == Adjacency Function ==                           power = picked_power,                # &lt;= power here                           networkType = "signed",                            # == Tree and Block Options ==                           deepSplit = 2,                           pamRespectsDendro = F,                           # detectCutHeight = 0.75,                           minModuleSize = 30,                           maxBlockSize = 5000,                            # == Module Adjustments ==                           reassignThreshold = 1e-6,                           mergeCutHeight = 0.15,                            # == TOM == Archive the run results in TOM file (saves time)                           saveTOMs = F,                           saveTOMFileBase = "ER",                            # == Output Options                           numericLabels = T,                           verbose = 3)</code></pre>
<pre><code> Calculating module eigengenes block-wise from all genes    Flagging genes and samples with too many missing values...     ..step 1  ....pre-clustering genes to determine blocks..    Projective K-means:    ..k-means clustering..    ..merging smaller clusters... Block sizes: gBlocks    1    2    3    4    5  4996 4903 4664 4478 4461   ..Working on block 1 .     TOM calculation: adjacency..     ..will use 48 parallel threads.      Fraction of slow calculations: 0.000000     ..connectivity..     ..matrix multiplication (system BLAS)..     ..normalization..     ..done.  ....clustering..  ....detecting modules..  ....calculating module eigengenes..  ....checking kME in modules..      ..removing 24 genes from module 1 because their KME is too low.      ..removing 16 genes from module 2 because their KME is too low.  ..Working on block 2 .     TOM calculation: adjacency..     ..will use 48 parallel threads.      Fraction of slow calculations: 0.000000     ..connectivity..     ..matrix multiplication (system BLAS)..     ..normalization..     ..done.  ....clustering..  ....detecting modules..  ....calculating module eigengenes..  ....checking kME in modules..      ..removing 245 genes from module 1 because their KME is too low.      ..removing 126 genes from module 2 because their KME is too low.      ..removing 14 genes from module 3 because their KME is too low.      ..removing 9 genes from module 4 because their KME is too low.      ..removing 3 genes from module 5 because their KME is too low.      ..removing 21 genes from module 8 because their KME is too low.      ..removing 12 genes from module 9 because their KME is too low.      ..removing 9 genes from module 10 because their KME is too low.      ..removing 12 genes from module 11 because their KME is too low.      ..removing 2 genes from module 12 because their KME is too low.      ..removing 3 genes from module 14 because their KME is too low.      ..removing 1 genes from module 16 because their KME is too low.      ..removing 1 genes from module 17 because their KME is too low.      ..removing 1 genes from module 18 because their KME is too low.  ..Working on block 3 .     TOM calculation: adjacency..     ..will use 48 parallel threads.      Fraction of slow calculations: 0.000000     ..connectivity..     ..matrix multiplication (system BLAS)..     ..normalization..     ..done.  ....clustering..  ....detecting modules..  ....calculating module eigengenes..  ....checking kME in modules..      ..removing 200 genes from module 1 because their KME is too low.      ..removing 174 genes from module 2 because their KME is too low.      ..removing 95 genes from module 3 because their KME is too low.      ..removing 31 genes from module 4 because their KME is too low.      ..removing 2 genes from module 5 because their KME is too low.      ..removing 36 genes from module 7 because their KME is too low.      ..removing 7 genes from module 8 because their KME is too low.      ..removing 4 genes from module 11 because their KME is too low.      ..removing 13 genes from module 12 because their KME is too low.      ..removing 3 genes from module 15 because their KME is too low.  ..Working on block 4 .     TOM calculation: adjacency..     ..will use 48 parallel threads.      Fraction of slow calculations: 0.000000     ..connectivity..     ..matrix multiplication (system BLAS)..     ..normalization..     ..done.  ....clustering..  ....detecting modules..  ....calculating module eigengenes..  ....checking kME in modules..      ..removing 152 genes from module 1 because their KME is too low.      ..removing 106 genes from module 2 because their KME is too low.      ..removing 81 genes from module 3 because their KME is too low.      ..removing 82 genes from module 4 because their KME is too low.      ..removing 9 genes from module 5 because their KME is too low.      ..removing 5 genes from module 6 because their KME is too low.  ..Working on block 5 .     TOM calculation: adjacency..     ..will use 48 parallel threads.      Fraction of slow calculations: 0.000000     ..connectivity..     ..matrix multiplication (system BLAS)..     ..normalization..     ..done.  ....clustering..  ....detecting modules..  ....calculating module eigengenes..  ....checking kME in modules..      ..removing 297 genes from module 1 because their KME is too low.      ..removing 60 genes from module 2 because their KME is too low.      ..removing 38 genes from module 3 because their KME is too low.      ..removing 31 genes from module 4 because their KME is too low.   ..reassigning 40 genes from module 1 to modules with higher KME.   ..reassigning 27 genes from module 2 to modules with higher KME.   ..reassigning 3 genes from module 3 to modules with higher KME.   ..reassigning 2 genes from module 4 to modules with higher KME.   ..reassigning 4 genes from module 5 to modules with higher KME.   ..reassigning 3 genes from module 7 to modules with higher KME.   ..reassigning 1 genes from module 10 to modules with higher KME.   ..reassigning 1 genes from module 13 to modules with higher KME.   ..reassigning 1 genes from module 14 to modules with higher KME.   ..reassigning 7 genes from module 23 to modules with higher KME.   ..reassigning 1 genes from module 24 to modules with higher KME.   ..reassigning 2 genes from module 25 to modules with higher KME.   ..reassigning 1 genes from module 28 to modules with higher KME.   ..reassigning 1 genes from module 29 to modules with higher KME.   ..reassigning 1 genes from module 30 to modules with higher KME.   ..reassigning 1 genes from module 31 to modules with higher KME.   ..reassigning 1 genes from module 36 to modules with higher KME.   ..reassigning 5 genes from module 43 to modules with higher KME.   ..reassigning 11 genes from module 44 to modules with higher KME.   ..reassigning 1 genes from module 45 to modules with higher KME.   ..reassigning 2 genes from module 46 to modules with higher KME.   ..reassigning 1 genes from module 48 to modules with higher KME.   ..reassigning 11 genes from module 50 to modules with higher KME.   ..reassigning 8 genes from module 51 to modules with higher KME.   ..reassigning 1 genes from module 53 to modules with higher KME.  ..merging modules that are too close..      mergeCloseModules: Merging modules whose distance is less than 0.15        Calculating new MEs... </code></pre>
<pre><code>cor &lt;- temp_cor     # Return cor function to original namespace</code></pre>
<p>Take a look at dendrogram.</p>
<pre><code># Convert labels to colors for plotting mergedColors = labels2colors(netwk_Apul$colors) labels = table(netwk_Apul$colors) labels</code></pre>
<pre><code>   0    1    2    3    4    5    6    7    8    9   10   11   12   13   14   15  1925 2949 1946 1754 1087  963  939  927  909  879  824  749  700  657  577  402    16   17   18   19   20   21   22   23   24   25   26   27   28   29   30   31   374  346  316  304  261  247  233  217  210  208  199  176  168  163  162  155    32   33   34   35   36   37   38   39   40   41   42   43   44   45   46   47   142  138  130  111   92   84   84   82   69   63   62   62   56   56   48   47    48   49   50   51   52   53    46   46   44   41   40   33  </code></pre>
<pre><code># Plot the dendrogram and the module colors underneath  plotDendroAndColors(   netwk_Apul$dendrograms[[1]],   mergedColors[netwk_Apul$blockGenes[[1]]],   "Module colors",   dendroLabels = FALSE,   hang = 0.03,   addGuide = TRUE,   guideHang = 0.05 )</code></pre>
<p>Show module number before and after merging.</p>
<pre><code>length(table(netwk_Apul$unmergedColors))</code></pre>
<pre><code>[1] 56 </code></pre>
<pre><code>length(table(netwk_Apul$colors))</code></pre>
<pre><code>[1] 54 </code></pre>
<p>There are 56 modules before merging to 85% similarity and 54 after.</p>
<pre><code>MEs&lt;-netwk_Apul$MEs moduleLabels&lt;-netwk_Apul$colors moduleColors &lt;- labels2colors(netwk_Apul$colors)</code></pre>
<pre><code># Get Module Eigengenes per cluster # MEs0_Apul &lt;- moduleEigengenes(datExpr, mergedColors)$eigengenes mME_Apul &lt;- moduleEigengenes(datExpr, mergedColors)$eigengenes  # Add treatment names # MEs0_Apul$sample = row.names(MEs0_Apul) mME_Apul$sample = row.names(mME_Apul)  # Join metadata to add timepoint to mME_Apul mME_Apul &lt;- mME_Apul %&gt;%   left_join(metadata, by = c("sample" = "Sample"))  # Order samples by timepoint timepoint_order &lt;- c("TP1", "TP2", "TP3", "TP4") # Specify the desired order of timepoints mME_Apul &lt;- mME_Apul %&gt;%   mutate(sample = factor(sample, levels = metadata$Sample[order(match(metadata$Timepoint, timepoint_order))]))  # Plot heatmap mME_Apul %&gt;%    pivot_longer(cols = -c(sample, Timepoint), # Ensure only eigengenes are reshaped                names_to = "module",                values_to = "value") %&gt;%   ggplot(., aes(x = sample, y = name, fill = value)) +   geom_tile() +   theme_bw() +   scale_fill_gradient2(     low = "blue",     high = "red",     mid = "white",     midpoint = 0,     limit = c(-1,1)   ) +   theme(axis.text.x = element_text(angle = 90)) +   labs(title = "Module-trait Relationships", y = "Modules", fill = "corr")</code></pre>
</section>
<section id="characterize-genemirna-composition-of-modules" class="level1">
<h1>5 Characterize gene/miRNA composition of modules</h1>
<pre><code># Grab gene names and corresponding module colors module_info &lt;- data.frame(   gene = colnames(datExpr),   module = moduleLabels ) #Add ME to all the names module_info$module &lt;- paste0("ME", module_info$module)  head(module_info)</code></pre>
<pre><code>                 gene module FUN_002326 FUN_002326   ME20 FUN_002303 FUN_002303   ME20 FUN_002305 FUN_002305   ME20 FUN_002309 FUN_002309   ME20 FUN_002311 FUN_002311   ME20 FUN_002314 FUN_002314   ME20 </code></pre>
<pre><code># Function to calculate the proportion of mRNAs (genes with "FUN" in ID) calculate_mRNA_proportion &lt;- function(genes) {   total_genes &lt;- length(genes)   mRNA_count &lt;- sum(grepl("FUN", genes))      # Proportion of mRNAs   proportion_mRNA &lt;- mRNA_count / total_genes   return(proportion_mRNA) }  # Since there are so few miRNA, it may be more appropriate to calculate # of miRNA contained in a given module calculate_miRNA_num &lt;- function(genes) {   total_genes &lt;- length(genes)   miRNA_count &lt;- sum(grepl("Cluster", genes))   return(miRNA_count) }  # Apply the functions to each module module_mRNA_proportion &lt;- tapply(module_info$gene,                                   module_info$module,                                   calculate_mRNA_proportion)  module_miRNA_count &lt;- tapply(module_info$gene,                              module_info$module,                              calculate_miRNA_num)  # View the proportions  length(module_miRNA_count[module_miRNA_count &gt; 0])</code></pre>
<pre><code>[1] 19 </code></pre>
<pre><code>module_miRNA_count</code></pre>
<pre><code> ME0  ME1 ME10 ME11 ME12 ME13 ME14 ME15 ME16 ME17 ME18 ME19  ME2 ME20 ME21 ME22    18    2    2    0    1    0    3    0    0    0    0    1    0    1    0    0  ME23 ME24 ME25 ME26 ME27 ME28 ME29  ME3 ME30 ME31 ME32 ME33 ME34 ME35 ME36 ME37     1    0    1    0    0    1    1    1    2    3    0    0    0    1    0    0  ME38 ME39  ME4 ME40 ME41 ME42 ME43 ME44 ME45 ME46 ME47 ME48 ME49  ME5 ME50 ME51     0    0    0    1    0    0    0    0    0    0    0    0    0    1    0    0  ME52 ME53  ME6  ME7  ME8  ME9     0    0    1    1    0    0  </code></pre>
<p>19 of the 54 modules contain miRNA.</p>
<p>Module 0 contains almost half of the miRNA that were retained post-filtering (18/43). Keep in mind that the smaller the module number, the more genes it contains, so ME0 is one of the largest modules of coexpressed genes, and likely represents housekeeping function. It's thus not surprising that many miRNAs also grouped there!</p>
<p>The remaining 25 miRNA were quite spread out, most were the only miRNA in their module, with a handful of modules containing 2-3 coexpressed miRNA.</p>
<p>Plot</p>
<pre><code># Make df of module sizes module_sizes_df&lt;-as.data.frame(labels) colnames(module_sizes_df) &lt;- c("module", "size") module_sizes_df$module&lt;-paste0("ME", module_sizes_df$module)  # df of num. miRNA in each module module_miRNA_count_df &lt;- as.data.frame(module_miRNA_count) module_miRNA_count_df$module &lt;- rownames(module_miRNA_count_df)  # Combine and add column for num of genes in each module module_composition &lt;- left_join(module_sizes_df, module_miRNA_count_df, by="module") module_composition$module_gene_count &lt;- module_composition$size - module_composition$module_miRNA_count  # order by module size module_composition &lt;- module_composition %&gt;%   arrange(desc(size)) %&gt;%   mutate(module = factor(module, levels = module))  # Convert to long format for stacking module_composition_long &lt;- module_composition %&gt;%   pivot_longer(cols = c(module_gene_count, module_miRNA_count),                 names_to = "type",                 values_to = "count") %&gt;%   mutate(type = factor(type, levels = c("module_gene_count", "module_miRNA_count")))  # Order for stacking module_composition$type &lt;- ""  # Plot ggplot(module_composition_long, aes(x = module, y = count, fill = type)) +   geom_bar(stat = "identity") +   geom_text(data = module_composition, aes(x = module, y = size + 60,                                       label = module_miRNA_count), size = 3) +  # Label miRNA count   scale_fill_manual(values = c("module_gene_count" = "steelblue", "module_miRNA_count" = "orange"),                     labels = c("Genes", "miRNAs")) +   labs(x = "Module", y = "Total Module Size", title = "Stacked Barplot of Genes and miRNAs") +   theme_minimal() +   theme(axis.text.x = element_text(angle = 45, hjust = 1), legend.title = element_blank())</code></pre>
<p>Larger modules seem to be more likely to contain miRNA, which makes sense intuitively. However, the low number of total miRNA in comparison to the number of genes present means that miRNA don't make up an appreciable proportion of any module.</p>
</section>
<section id="correlate-modules-to-each-other" class="level1">
<h1>6 Correlate modules to each other</h1>
<p>miRNAs are expected to either facilitate mRNA degradation or repress mRNA translation, both of which would result in a negative miRNA-mRNA relationship (more of an miRNA means less of its target mRNA(s)). WGCNA modules only group genes with similar expression patterns, so these inverse relationships would not be present within a single module. Instead, we need to find modules that are inversely related (have a strong, negative correlation).</p>
<p>Compute correlations between modules</p>
<ul>
<li>which correlation coefficient to use? I think WGCNA is based off of Pearson's correlation coefficient…</li>
</ul>
<pre><code>btwn_module_cor &lt;- corr.test(MEs, method = "pearson", adjust = "BH")  # Extract correlation values and p-values btwn_module_cor_matrix &lt;- btwn_module_cor$r  # Correlation coefficients btwn_module_p_matrix &lt;- btwn_module_cor$p  # Adjusted p-values</code></pre>
<p>Construct network</p>
<pre><code># Set correlation and significance thresholds cor_threshold &lt;- 0.7  # Adjust based on desired stringency p_threshold &lt;- 0.05  # Convert correlation matrix into an edge list significant_edges &lt;- which(abs(btwn_module_cor_matrix) &gt; cor_threshold &amp; btwn_module_p_matrix &lt; p_threshold, arr.ind = TRUE)  edge_list &lt;- data.frame(   module_A = rownames(btwn_module_cor_matrix)[significant_edges[,1]],   module_B = colnames(btwn_module_cor_matrix)[significant_edges[,2]],   correlation = btwn_module_cor_matrix[significant_edges] )  # Construct network graph network &lt;- graph_from_data_frame(edge_list, directed = FALSE)  # module_mRNA_proportion&lt;-as.data.frame(module_mRNA_proportion) #  # V(apul_network)$prop_mrna &lt;- module_mRNA_proportion$module_mRNA_proportion[match(V(apul_network)$name, rownames(module_mRNA_proportion))]  # Add miRNA presence/absence to the network nodes V(network)$has_miRNA &lt;- ifelse(   module_miRNA_count_df$module %in% V(network)$name &amp; module_miRNA_count_df$module_miRNA_count &gt; 0,    "Yes", "No" )</code></pre>
<p>Plot</p>
<pre><code>plot1&lt;-ggraph(network, layout = "fr") +  # Force-directed layout   geom_edge_link(aes(edge_color = correlation), width = 2, show.legend = TRUE) +   #geom_edge_link(aes(edge_alpha = correlation), show.legend = TRUE, width=2) +   #geom_node_point(aes(colour=prop_mrna), size = 5) +   #scale_colour_gradient(name="Prop. mRNA", low = "purple", high = "cyan3")+   geom_node_point(aes(color = has_miRNA), size = 3) +  # Color nodes based on miRNA presence   scale_edge_color_gradient2(low = "red", mid = "yellow", high = "blue", midpoint = 0, name = "Correlation") +     scale_color_manual(values = c("Yes" = "black", "No" = "grey"), name = "miRNA Present") +   geom_node_text(aes(label = name), repel = TRUE, size = 4) +   theme_void() +   labs(title = "A. pulchra mRNA-CpG Network");plot1</code></pre>
<p>Cool! In the above interaction network plot, each module is shown as a node. Modules that contain miRNA are black nodes, while gene-only modules are in grey. A line between two modules indicates the module eigengenes are significantly correlated, with a correlation coefficient magnitude of at least 0.7. Blue shading indicates positive correlation and red indicates negative correlation.</p>
<p>To look for potential miRNA-target mRNA interactions we're looking for negative correlations where at least one module contains miRNA. I count roughly 20 of these!</p>
</section>
<section id="correlate-to-traits" class="level1">
<h1>7 Correlate to traits</h1>
<p>Ensure we've removed sample from expression data that is not present in physiological data. 1B9</p>
<pre><code>phys&lt;-phys%&gt;%   filter(!Sample=="1B2_ACR-173_TP3")%&gt;%   filter(!Sample=="1B9_ACR-265_TP4")  setdiff(metadata_ordered$Sample, phys$Sample)</code></pre>
<pre><code>character(0) </code></pre>
<pre><code>#all have 38 observations </code></pre>
<p>Create a physiological/factor dataset with sample in rows and phys data in columns (row name = Azenta sample name)</p>
<pre><code># phys$AzentaSampleName&lt;-metadata_ordered$AzentaSampleName[match(phys$Sample, metadata_ordered$Sample)]  traits&lt;-phys%&gt;%   select(Sample, timepoint, site, Host_AFDW.mg.cm2, Sym_AFDW.mg.cm2, Am, Rd, Ik, Ic, AQY, cells.mgAFDW, Total_Chl, Ratio_AFDW.mg.cm2, Total_Chl_cell)  #time point #site traits&lt;-traits%&gt;%   mutate(site=gsub("Mahana", "1", site)) %&gt;%   mutate(site=gsub("Manava", "2", site))%&gt;%   mutate(timepoint=gsub("TP", "", timepoint))  traits$timepoint&lt;-as.numeric(traits$timepoint) traits$site&lt;-as.numeric(traits$site)  traits&lt;-as.data.frame(traits) rownames(traits)&lt;-traits$Sample  datTraits&lt;-traits%&gt;%select(!Sample)  #datTraits&lt;-datTraits%&gt;%select(!Timepoint)</code></pre>
<p>Add in temperature and light information for each time point from physiology manuscript. Note these have already been standardized for use in WGCNA.</p>
<pre><code>env&lt;-read_csv("https://github.com/urol-e5/timeseries/raw/refs/heads/master/time_series_analysis/Output/environment_characteristics_RDA.csv") %&gt;%   select(mean_Temp_mean, mean_solar_rad_kwpm2_mean, cumulative_rainfall_mm_mean, timepoint) %&gt;%   mutate(timepoint=if_else(timepoint=="timepoint1", "1",                            if_else(timepoint=="timepoint2", "2",                                    if_else(timepoint=="timepoint3", "3", "4")))) %&gt;%   mutate(timepoint=as.numeric(timepoint))  #merge into datTraits  datTraits&lt;-left_join(datTraits, env) rownames(datTraits)&lt;-traits$Sample  str(datTraits)</code></pre>
<pre><code>'data.frame':   38 obs. of  16 variables:  $ timepoint                  : num  1 2 3 4 1 2 3 4 1 2 ...  $ site                       : num  2 2 2 2 2 2 2 2 2 2 ...  $ Host_AFDW.mg.cm2           : num  1.759 1.212 0.664 1.133 1.101 ...  $ Sym_AFDW.mg.cm2            : num  0.795 0.545 0.493 0.538 0.312 ...  $ Am                         : num  1.042 0.75 0.53 0.448 0.709 ...  $ Rd                         : num  0.411 0.313 0.344 0.14 0.206 ...  $ Ik                         : num  464 417 330 411 286 ...  $ Ic                         : num  199.1 191.4 281 135 86.9 ...  $ AQY                        : num  0.00225 0.0018 0.00161 0.00109 0.00248 ...  $ cells.mgAFDW               : num  357005 432917 398214 190625 622222 ...  $ Total_Chl                  : num  3.03 1.391 2.295 0.683 2.729 ...  $ Ratio_AFDW.mg.cm2          : num  0.311 0.31 0.426 0.322 0.221 ...  $ Total_Chl_cell             : num  8.49e-06 3.21e-06 5.76e-06 3.58e-06 4.39e-06 ...  $ mean_Temp_mean             : num  -0.217 1.431 -0.898 -0.316 -0.217 ...  $ mean_solar_rad_kwpm2_mean  : num  -0.14 0.36 1.08 -1.3 -0.14 ...  $ cumulative_rainfall_mm_mean: num  0.665 -0.517 -1.142 0.993 0.665 ... </code></pre>
<p>Finally, we want to identify modules that are significantly correlated with timepoint. Since correlation analysis wouldn't identify non-linear relationships, we need to encode timepoint as 4 separate binomial variables (timepoint1 – yes/no?, timepoint2 – yes/no?, etc.)</p>
<pre><code>datTraits &lt;- datTraits %&gt;%   mutate(     timepoint1 = as.integer(timepoint == 1),     timepoint2 = as.integer(timepoint == 2),     timepoint3 = as.integer(timepoint == 3),     timepoint4 = as.integer(timepoint == 4)   ) %&gt;% select(!timepoint)</code></pre>
<pre><code>nGenes = ncol(datExpr) nSamples = nrow(datExpr)  nGenes</code></pre>
<pre><code>[1] 23502 </code></pre>
<pre><code>nSamples</code></pre>
<pre><code>[1] 38 </code></pre>
<p>Generate labels for module eigengenes as numbers.</p>
<pre><code>MEs0 = moduleEigengenes(datExpr, moduleLabels, softPower=5)$eigengenes # Reorder the eigengenes so that similar ones are adjacent MEs = orderMEs(MEs0) names(MEs)</code></pre>
<pre><code> [1] "ME6"  "ME18" "ME33" "ME35" "ME38" "ME43" "ME12" "ME26" "ME13" "ME7"  [11] "ME14" "ME2"  "ME23" "ME36" "ME15" "ME21" "ME51" "ME46" "ME0"  "ME20" [21] "ME47" "ME41" "ME44" "ME11" "ME16" "ME25" "ME34" "ME49" "ME39" "ME48" [31] "ME52" "ME50" "ME31" "ME28" "ME32" "ME40" "ME53" "ME3"  "ME5"  "ME19" [41] "ME27" "ME45" "ME22" "ME30" "ME29" "ME37" "ME24" "ME1"  "ME17" "ME4"  [51] "ME10" "ME42" "ME8"  "ME9"  </code></pre>
<p>Correlations of traits with eigengenes</p>
<pre><code>moduleTraitCor = cor(MEs, datTraits, use = "p"); moduleTraitPvalue = corPvalueStudent(moduleTraitCor, nSamples); Colors=sub("ME","", names(MEs))  moduleTraitTree = hclust(dist(t(moduleTraitCor)), method = "average")  # pdf(file="D-Apul/output/11.00-Apul-WGCNA/ModuleTraitClusterTree.pdf") plot(moduleTraitTree)</code></pre>
<pre><code># dev.off()</code></pre>
<p>Correlations of genes with eigengenes. Calculate correlations between ME's and physiology/environmental variables.</p>
<pre><code>moduleGeneCor=cor(MEs,datExpr) moduleGenePvalue = corPvalueStudent(moduleGeneCor, nSamples);</code></pre>
<p>Calculate kME values (module membership).</p>
<pre><code>datKME = signedKME(datExpr, MEs, outputColumnName = "kME") head(datKME)</code></pre>
<pre><code>                kME6     kME18      kME33      kME35       kME38      kME43 FUN_002326 0.2583283 0.2156291 -0.1570120 -0.5612523 -0.12338187 0.10258740 FUN_002303 0.2132901 0.1511132 -0.2780998 -0.5391163 -0.07989391 0.04627133 FUN_002305 0.1773465 0.1530036 -0.3030477 -0.5807210 -0.12928937 0.05034717 FUN_002309 0.1884754 0.1696723 -0.2955877 -0.5769509 -0.12509871 0.04849489 FUN_002311 0.1770234 0.1320371 -0.3262569 -0.5604463 -0.11152639 0.07847327 FUN_002314 0.2249291 0.1980589 -0.2499234 -0.5998821 -0.14861215 0.05851233                kME12       kME26     kME13         kME7      kME14      kME2 FUN_002326 0.1174550 0.009270817 0.2312550  0.135998381 0.31371919 0.3990954 FUN_002303 0.2039570 0.014172902 0.2212095  0.024377196 0.13838471 0.1997507 FUN_002305 0.2033153 0.047296772 0.1240672  0.015050330 0.07661177 0.1377189 FUN_002309 0.1975374 0.044314259 0.1373691  0.019421357 0.08434848 0.1535856 FUN_002311 0.2349518 0.042425406 0.1202533 -0.006970714 0.04975190 0.1069415 FUN_002314 0.1515615 0.012431873 0.2172321  0.085028079 0.20448014 0.2812469                kME23     kME36      kME15     kME21     kME51     kME46 FUN_002326 0.3905361 0.1691093 0.24286457 0.2051058 0.1566690 0.4614680 FUN_002303 0.2417195 0.2336136 0.14542781 0.1991871 0.1154859 0.4628273 FUN_002305 0.1877159 0.1888757 0.10044193 0.1433232 0.1717918 0.4075874 FUN_002309 0.1976843 0.1629258 0.08986570 0.1185655 0.1579065 0.4188753 FUN_002311 0.1696208 0.2059308 0.08885847 0.1383213 0.1684262 0.3996114 FUN_002314 0.2948833 0.1861392 0.18195855 0.1875840 0.1849925 0.4642949                 kME0     kME20      kME47      kME41      kME44     kME11 FUN_002326 0.4630721 0.9248177 -0.5293279 -0.5666736 -0.3735003 0.2630204 FUN_002303 0.5703850 0.9324223 -0.6216517 -0.5450220 -0.4339203 0.4109935 FUN_002305 0.5468557 0.9328821 -0.6153781 -0.5411724 -0.4329008 0.3904426 FUN_002309 0.5427259 0.9343306 -0.6164971 -0.5469842 -0.4312169 0.3770097 FUN_002311 0.5625078 0.9237108 -0.6542604 -0.5140593 -0.4249934 0.3702812 FUN_002314 0.5352373 0.9534300 -0.5839477 -0.5538538 -0.4184076 0.3392641                    kME16      kME25      kME34      kME49     kME39      kME48 FUN_002326 -0.1449128722 -0.3073671 -0.3775335 -0.2751587 0.2478527 -0.2943203 FUN_002303  0.0007837565 -0.1672681 -0.3481721 -0.2750047 0.2764089 -0.2119715 FUN_002305 -0.0002374199 -0.2014737 -0.3281722 -0.2574489 0.2907387 -0.2030659 FUN_002309 -0.0106002951 -0.1998462 -0.3310817 -0.2409483 0.2860426 -0.2089602 FUN_002311  0.0579307309 -0.1588614 -0.3626532 -0.2819691 0.2696467 -0.2019203 FUN_002314 -0.0684623793 -0.2391020 -0.3638474 -0.2654632 0.2753572 -0.2682380                    kME52      kME50      kME31      kME28      kME32     kME40 FUN_002326 -0.1324597282 -0.3821201 -0.6620980 -0.4756584 -0.1814741 0.5401565 FUN_002303 -0.0185110679 -0.3942205 -0.6737867 -0.3632678 -0.1549630 0.5825502 FUN_002305  0.0004712576 -0.4350240 -0.6896803 -0.3860317 -0.2140152 0.6669638 FUN_002309 -0.0138800334 -0.4188123 -0.6845826 -0.3935239 -0.1993565 0.6507863 FUN_002311  0.0205792506 -0.4748224 -0.6861438 -0.3679979 -0.2098042 0.6742521 FUN_002314 -0.0661164251 -0.4225547 -0.7016264 -0.4531292 -0.2227751 0.5973660                 kME53        kME3        kME5      kME19      kME27       kME45 FUN_002326 0.06131876 -0.27360474 -0.24500584 -0.3346685 0.05895651 -0.04288271 FUN_002303 0.16536594 -0.09029313 -0.13980923 -0.1590198 0.22564947  0.12468402 FUN_002305 0.29272449 -0.03022949 -0.07036092 -0.1275217 0.21951126  0.13986073 FUN_002309 0.26081293 -0.04438078 -0.07743951 -0.1368057 0.22140449  0.13737970 FUN_002311 0.30624069  0.00381524 -0.06167558 -0.1053688 0.24135388  0.16178998 FUN_002314 0.14652976 -0.16215976 -0.17005319 -0.2397911 0.15606284  0.06869516                kME22     kME30      kME29        kME37      kME24       kME1 FUN_002326 0.3942966 0.0556694 -0.1414560 -0.080627415 -0.5924479 -0.4186260 FUN_002303 0.4395832 0.1809235 -0.1934628 -0.085018601 -0.4356039 -0.2331683 FUN_002305 0.5018345 0.2233019 -0.1599139 -0.006766168 -0.4214407 -0.1618433 FUN_002309 0.4888654 0.2071683 -0.1577340 -0.017326770 -0.4370665 -0.1800507 FUN_002311 0.4829996 0.2376146 -0.1928131 -0.026028945 -0.3807216 -0.1320455 FUN_002314 0.4698504 0.1693748 -0.1429564 -0.040719075 -0.5265858 -0.3062592                   kME17       kME4        kME10      kME42       kME8 FUN_002326 -0.231691223 -0.4439713 -0.091462975 -0.2373804 -0.2441547 FUN_002303 -0.030824209 -0.2746445  0.032908887 -0.1038411 -0.1102147 FUN_002305  0.016441367 -0.2352655  0.099422223 -0.1123383 -0.1300766 FUN_002309 -0.003079167 -0.2565547  0.079948252 -0.1171698 -0.1299456 FUN_002311  0.057939135 -0.2209032  0.101402308 -0.1307009 -0.1072340 FUN_002314 -0.126355446 -0.3433712  0.002535808 -0.1655045 -0.1643798                  kME9 FUN_002326 -0.3447660 FUN_002303 -0.2750440 FUN_002305 -0.2177676 FUN_002309 -0.2373911 FUN_002311 -0.2051189 FUN_002314 -0.3040215 </code></pre>
<p>Generate a complex heatmap of module-trait relationships.</p>
<pre><code>#bold sig p-values #dendrogram with WGCNA MEtree cut-off #colored y-axis  #Create list of pvalues for eigengene correlation with specific physiology traits or environmental conditions heatmappval &lt;- signif(moduleTraitPvalue, 1)  #Make list of heatmap row colors htmap.colors &lt;- names(MEs) htmap.colors &lt;- gsub("ME", "", htmap.colors)  row_dend = dendsort(hclust(dist(moduleTraitCor))) col_dend = dendsort(hclust(dist(t(moduleTraitCor))))  #pdf(file = "../output/12-Apul-miRNA-mRNA-WGCNA/Module-trait-relationship-heatmap.pdf", height = 14, width = 8) Heatmap(moduleTraitCor, name = "Eigengene", row_title = "Gene Module", column_title = "Module-Trait Eigengene Correlation",          col = blueWhiteRed(50),          row_names_side = "left",          #row_dend_side = "left",         width = unit(5, "in"),          height = unit(8.5, "in"),          #column_dend_reorder = TRUE,          #cluster_columns = col_dend,         row_dend_reorder = TRUE,         #column_split = 6,         row_split=3,         #column_dend_height = unit(.5, "in"),         #column_order = lifestage_order,          cluster_rows = row_dend,          row_gap = unit(2.5, "mm"),          border = TRUE,         cell_fun = function(j, i, x, y, w, h, col) {         if(heatmappval[i, j] &lt; 0.05) {             grid.text(sprintf("%s", heatmappval[i, j]), x, y, gp = gpar(fontsize = 10, fontface = "bold"))         }         else {             grid.text(sprintf("%s", heatmappval[i, j]), x, y, gp = gpar(fontsize = 10, fontface = "plain"))         }},         column_names_gp =  gpar(fontsize = 12, border=FALSE),         column_names_rot = 35,         row_names_gp = gpar(fontsize = 12, alpha = 0.75, border = FALSE))</code></pre>
<pre><code>#draw(ht) #dev.off()</code></pre>
<p>This plot is cool, but I'm a little skeptical of the results. No modules show significant relationship with timepoint, despite the PCAs showing a pretty clear clustering by timepoint…</p>
<p>Update 3/5/25: Cleared up why timepoint isn't showing significant relationship, has to do with timepoint being a categorical variable that is encoded numerically (1-4) and this correlation analysis not picking up non-linear relationships. However, incorporation of environmental variables (temp, solar, etc.) for each timepoint essentially provides a set of time-dependent continuous variables, and these <em>are</em> showing significant relationships! mean temperature in particular shows significant correlation with <em>10</em> modules, including several <em>highly</em> significant correlations! Super cool!</p>
<p>Update 3/11/25: Encoded timepoints as 4 separate binomial columns, so that should take care of the original issue with numerically encoding timepoint. Interestingly, timepoints 2 and 3 have significantly correlated modules, but timepoints 1 and 4 don't. This suggests the influence of timepoint stems largely from the temperature conditions, since a) timepoints 2 and 3 have the most "extreme" temperatures (in comparison to annual mean), and b) many of their correlated modules are also significantly correlated with temperature. Interestingly, timepoints 2 and 3 (March and September 2020) are actually extreme in opposite directions. March 2020 was the warmest timepoint and September was the coolest. If the two are correlated with very similar sets of gene modules, that suggests very similar expression pathways are used in response to both heat stress and cold stress in A.pulchra!</p>
<pre><code># Extract modules with significant correlations heatmappval_df &lt;- as.data.frame(heatmappval)   # For mean temp MEs_signif_temp &lt;- rownames(heatmappval_df[heatmappval_df$mean_Temp_mean &lt; 0.05,]) # For solar radiation MEs_signif_solar &lt;- rownames(heatmappval_df[heatmappval_df$mean_solar_rad_kwpm2_mean &lt; 0.05,]) # For TP2 MEs_signif_tp2 &lt;- rownames(heatmappval_df[heatmappval_df$timepoint2 &lt; 0.05,]) # For TP3 MEs_signif_tp3 &lt;- rownames(heatmappval_df[heatmappval_df$timepoint3 &lt; 0.05,])</code></pre>
<p>We can also compare to our module interaction plot to find modules that are both correlated with temperature and potentially involved in miRNA-mRNA interactions! Modules 19, 42, 1, 6, 15, 7, 2, are both significantly correlated with temperature <em>and</em> have negative module-module interactions that involve at least 1 module that contains miRNA.</p>
</section>
<section id="plot-eigengene-values" class="level1">
<h1>8 Plot eigengene values</h1>
<p>View module eigengene data and make dataframe for Strader plots.</p>
<pre><code>head(MEs)</code></pre>
<pre><code>                         ME6        ME18        ME33        ME35         ME38 1A1_ACR-173_TP1  -0.02320522 -0.12042746 -0.07570329  0.08953234 -0.002722348 1A10_ACR-145_TP4  0.19459276  0.06843414  0.11466317  0.06011922  0.213671719 1A12_ACR-237_TP3 -0.14575292 -0.05911569 -0.21387865 -0.24197517 -0.187723279 1A2_ACR-244_TP4   0.28771754  0.17589318  0.20427360  0.09090719  0.226119130 1A8_ACR-186_TP2  -0.15984303  0.07920845  0.11766920  0.11913485  0.048951517 1A9_ACR-244_TP2   0.01581373  0.06951923 -0.04830976  0.15858184  0.214966291                         ME43          ME12        ME26        ME13         ME7 1A1_ACR-173_TP1   0.07647616  0.0001754009 -0.05505784  0.20270624  0.07475380 1A10_ACR-145_TP4  0.25109095  0.3641762566  0.42001651  0.16127320 -0.18021071 1A12_ACR-237_TP3 -0.16292788 -0.1051111381 -0.12908986 -0.18316460 -0.03432307 1A2_ACR-244_TP4  -0.11011852 -0.1651400603 -0.19244968 -0.04973101  0.32129475 1A8_ACR-186_TP2  -0.14830315 -0.0591323985  0.18148181 -0.12711065 -0.09629987 1A9_ACR-244_TP2  -0.07962408 -0.0540087297 -0.09729516 -0.12020683 -0.06672186                         ME14         ME2        ME23        ME36       ME15 1A1_ACR-173_TP1   0.19151639  0.12326050  0.07280842 -0.00839479  0.1325807 1A10_ACR-145_TP4 -0.07341621  0.03905688  0.23532090  0.05304861 -0.1689939 1A12_ACR-237_TP3 -0.13138055 -0.18842842 -0.21651217 -0.10499086 -0.1134810 1A2_ACR-244_TP4   0.13508842  0.26675554  0.11447397 -0.15114857  0.1436193 1A8_ACR-186_TP2  -0.14579154 -0.15718931 -0.08731953 -0.07862053 -0.1539886 1A9_ACR-244_TP2  -0.15357031 -0.16064972 -0.19545927 -0.09383841 -0.1216837                         ME21        ME51       ME46         ME0        ME20 1A1_ACR-173_TP1   0.09211440 -0.09982910  0.1175721 -0.04824818  0.20987392 1A10_ACR-145_TP4 -0.13294953  0.09493306  0.1579177  0.31696452  0.22192946 1A12_ACR-237_TP3 -0.12514048  0.04716891 -0.1814525  0.04868518  0.08817237 1A2_ACR-244_TP4  -0.04959862 -0.38878974 -0.1594932 -0.04743781 -0.16872228 1A8_ACR-186_TP2  -0.09072389  0.03283509 -0.1894046 -0.14353345 -0.14754665 1A9_ACR-244_TP2  -0.13871982 -0.36649673 -0.2079307  0.05895101 -0.24372543                         ME47        ME41        ME44        ME11        ME16 1A1_ACR-173_TP1   0.03470736  0.04752115  0.07281498  0.63307914 -0.04035761 1A10_ACR-145_TP4 -0.11675811 -0.12044660 -0.05209080 -0.07558101  0.25921778 1A12_ACR-237_TP3 -0.11194076 -0.06473216 -0.07773079 -0.06226461 -0.08070354 1A2_ACR-244_TP4  -0.07933785 -0.10409693 -0.03243204 -0.08462248 -0.21159566 1A8_ACR-186_TP2   0.32760534 -0.04570318 -0.07259399 -0.13761054 -0.10691635 1A9_ACR-244_TP2  -0.05242313 -0.02000174 -0.01173004 -0.01741715 -0.06278376                           ME25        ME34        ME49        ME39 1A1_ACR-173_TP1   0.1159472355 -0.06459061 -0.07468321  0.06383371 1A10_ACR-145_TP4 -0.0750813705 -0.05125816 -0.08851378 -0.16912272 1A12_ACR-237_TP3 -0.0872307433  0.01192810 -0.07575012  0.18314888 1A2_ACR-244_TP4  -0.1101654964 -0.15904220 -0.01167480  0.24732733 1A8_ACR-186_TP2   0.0080573154  0.49525150  0.31307068 -0.10271779 1A9_ACR-244_TP2  -0.0009325801 -0.02071236 -0.08091096  0.26465366                           ME48        ME52        ME50         ME31        ME28 1A1_ACR-173_TP1  -0.0658781815 -0.08730461  0.01179057  0.004557333  0.07717642 1A10_ACR-145_TP4 -0.1336876621 -0.19541181 -0.06381834 -0.169341137 -0.08401907 1A12_ACR-237_TP3  0.1448092748  0.15603605 -0.09196350 -0.119641364 -0.08583319 1A2_ACR-244_TP4   0.3409308178  0.22329330  0.33550188  0.218071659  0.22096796 1A8_ACR-186_TP2  -0.0005059539 -0.13611068  0.33820532  0.074046403  0.03732140 1A9_ACR-244_TP2   0.5185745804  0.38404362  0.29746511  0.323116554  0.54894087                         ME32        ME40        ME53         ME3          ME5 1A1_ACR-173_TP1   0.17864851 -0.05337631 -0.03600139 -0.13503065 -0.223755857 1A10_ACR-145_TP4 -0.09133273  0.37583510  0.28172083  0.08596743  0.007776691 1A12_ACR-237_TP3 -0.10665896  0.07117197  0.14659280  0.12882554  0.134777655 1A2_ACR-244_TP4   0.48138110 -0.18561751 -0.32888781 -0.10113155 -0.065430560 1A8_ACR-186_TP2  -0.07399301 -0.07487744  0.11510826  0.05956833  0.226768466 1A9_ACR-244_TP2   0.40331322 -0.06600281  0.06067204  0.19030077  0.145800841                          ME19         ME27        ME45          ME22 1A1_ACR-173_TP1  -0.091982279  0.023872131 -0.01161525 -0.0002743876 1A10_ACR-145_TP4  0.007322575  0.160858405  0.13341959 -0.1231854067 1A12_ACR-237_TP3  0.106455939 -0.038011838  0.03199866  0.3041802867 1A2_ACR-244_TP4  -0.289770423 -0.275328177 -0.19354274 -0.1349407520 1A8_ACR-186_TP2   0.198661487  0.024445762  0.06402741 -0.0746400864 1A9_ACR-244_TP2   0.105392045  0.006782823  0.06487262 -0.0885059437                         ME30        ME29        ME37        ME24         ME1 1A1_ACR-173_TP1  -0.05331506 -0.02873108 -0.10947078  0.01920980 -0.12459130 1A10_ACR-145_TP4 -0.13463637 -0.30358237 -0.13749486 -0.16153800 -0.07140414 1A12_ACR-237_TP3  0.24269473  0.14179660  0.24137320  0.01178445  0.21887066 1A2_ACR-244_TP4  -0.18491163  0.14338189 -0.18316296 -0.07899874 -0.24736110 1A8_ACR-186_TP2  -0.08160114  0.06437295  0.07247864  0.02276353  0.17464184 1A9_ACR-244_TP2  -0.09188314  0.08626617 -0.13459586  0.35901222  0.17585632                        ME17         ME4        ME10          ME42          ME8 1A1_ACR-173_TP1   0.0856670 -0.03441632 -0.05343126  0.0007827266  0.039517723 1A10_ACR-145_TP4 -0.1018332 -0.19849086 -0.16888295 -0.1941582931  0.031928914 1A12_ACR-237_TP3  0.2017213  0.15150257  0.32225465  0.1313200046  0.003869344 1A2_ACR-244_TP4  -0.1246587 -0.10018415 -0.09619992  0.0195382875 -0.241098260 1A8_ACR-186_TP2  -0.0523347  0.10579762  0.02369099  0.1380486272  0.084038917 1A9_ACR-244_TP2   0.3239683  0.13531492  0.15630404  0.1255933632  0.022534594                          ME9 1A1_ACR-173_TP1   0.01222597 1A10_ACR-145_TP4 -0.20882238 1A12_ACR-237_TP3  0.19125078 1A2_ACR-244_TP4  -0.21564948 1A8_ACR-186_TP2   0.09944352 1A9_ACR-244_TP2   0.10184144 </code></pre>
<pre><code>names(MEs)</code></pre>
<pre><code> [1] "ME6"  "ME18" "ME33" "ME35" "ME38" "ME43" "ME12" "ME26" "ME13" "ME7"  [11] "ME14" "ME2"  "ME23" "ME36" "ME15" "ME21" "ME51" "ME46" "ME0"  "ME20" [21] "ME47" "ME41" "ME44" "ME11" "ME16" "ME25" "ME34" "ME49" "ME39" "ME48" [31] "ME52" "ME50" "ME31" "ME28" "ME32" "ME40" "ME53" "ME3"  "ME5"  "ME19" [41] "ME27" "ME45" "ME22" "ME30" "ME29" "ME37" "ME24" "ME1"  "ME17" "ME4"  [51] "ME10" "ME42" "ME8"  "ME9"  </code></pre>
<pre><code>Eigen_MEs &lt;- MEs Eigen_MEs$AzentaSampleName &lt;- rownames(Eigen_MEs) head(Eigen_MEs)</code></pre>
<pre><code>                         ME6        ME18        ME33        ME35         ME38 1A1_ACR-173_TP1  -0.02320522 -0.12042746 -0.07570329  0.08953234 -0.002722348 1A10_ACR-145_TP4  0.19459276  0.06843414  0.11466317  0.06011922  0.213671719 1A12_ACR-237_TP3 -0.14575292 -0.05911569 -0.21387865 -0.24197517 -0.187723279 1A2_ACR-244_TP4   0.28771754  0.17589318  0.20427360  0.09090719  0.226119130 1A8_ACR-186_TP2  -0.15984303  0.07920845  0.11766920  0.11913485  0.048951517 1A9_ACR-244_TP2   0.01581373  0.06951923 -0.04830976  0.15858184  0.214966291                         ME43          ME12        ME26        ME13         ME7 1A1_ACR-173_TP1   0.07647616  0.0001754009 -0.05505784  0.20270624  0.07475380 1A10_ACR-145_TP4  0.25109095  0.3641762566  0.42001651  0.16127320 -0.18021071 1A12_ACR-237_TP3 -0.16292788 -0.1051111381 -0.12908986 -0.18316460 -0.03432307 1A2_ACR-244_TP4  -0.11011852 -0.1651400603 -0.19244968 -0.04973101  0.32129475 1A8_ACR-186_TP2  -0.14830315 -0.0591323985  0.18148181 -0.12711065 -0.09629987 1A9_ACR-244_TP2  -0.07962408 -0.0540087297 -0.09729516 -0.12020683 -0.06672186                         ME14         ME2        ME23        ME36       ME15 1A1_ACR-173_TP1   0.19151639  0.12326050  0.07280842 -0.00839479  0.1325807 1A10_ACR-145_TP4 -0.07341621  0.03905688  0.23532090  0.05304861 -0.1689939 1A12_ACR-237_TP3 -0.13138055 -0.18842842 -0.21651217 -0.10499086 -0.1134810 1A2_ACR-244_TP4   0.13508842  0.26675554  0.11447397 -0.15114857  0.1436193 1A8_ACR-186_TP2  -0.14579154 -0.15718931 -0.08731953 -0.07862053 -0.1539886 1A9_ACR-244_TP2  -0.15357031 -0.16064972 -0.19545927 -0.09383841 -0.1216837                         ME21        ME51       ME46         ME0        ME20 1A1_ACR-173_TP1   0.09211440 -0.09982910  0.1175721 -0.04824818  0.20987392 1A10_ACR-145_TP4 -0.13294953  0.09493306  0.1579177  0.31696452  0.22192946 1A12_ACR-237_TP3 -0.12514048  0.04716891 -0.1814525  0.04868518  0.08817237 1A2_ACR-244_TP4  -0.04959862 -0.38878974 -0.1594932 -0.04743781 -0.16872228 1A8_ACR-186_TP2  -0.09072389  0.03283509 -0.1894046 -0.14353345 -0.14754665 1A9_ACR-244_TP2  -0.13871982 -0.36649673 -0.2079307  0.05895101 -0.24372543                         ME47        ME41        ME44        ME11        ME16 1A1_ACR-173_TP1   0.03470736  0.04752115  0.07281498  0.63307914 -0.04035761 1A10_ACR-145_TP4 -0.11675811 -0.12044660 -0.05209080 -0.07558101  0.25921778 1A12_ACR-237_TP3 -0.11194076 -0.06473216 -0.07773079 -0.06226461 -0.08070354 1A2_ACR-244_TP4  -0.07933785 -0.10409693 -0.03243204 -0.08462248 -0.21159566 1A8_ACR-186_TP2   0.32760534 -0.04570318 -0.07259399 -0.13761054 -0.10691635 1A9_ACR-244_TP2  -0.05242313 -0.02000174 -0.01173004 -0.01741715 -0.06278376                           ME25        ME34        ME49        ME39 1A1_ACR-173_TP1   0.1159472355 -0.06459061 -0.07468321  0.06383371 1A10_ACR-145_TP4 -0.0750813705 -0.05125816 -0.08851378 -0.16912272 1A12_ACR-237_TP3 -0.0872307433  0.01192810 -0.07575012  0.18314888 1A2_ACR-244_TP4  -0.1101654964 -0.15904220 -0.01167480  0.24732733 1A8_ACR-186_TP2   0.0080573154  0.49525150  0.31307068 -0.10271779 1A9_ACR-244_TP2  -0.0009325801 -0.02071236 -0.08091096  0.26465366                           ME48        ME52        ME50         ME31        ME28 1A1_ACR-173_TP1  -0.0658781815 -0.08730461  0.01179057  0.004557333  0.07717642 1A10_ACR-145_TP4 -0.1336876621 -0.19541181 -0.06381834 -0.169341137 -0.08401907 1A12_ACR-237_TP3  0.1448092748  0.15603605 -0.09196350 -0.119641364 -0.08583319 1A2_ACR-244_TP4   0.3409308178  0.22329330  0.33550188  0.218071659  0.22096796 1A8_ACR-186_TP2  -0.0005059539 -0.13611068  0.33820532  0.074046403  0.03732140 1A9_ACR-244_TP2   0.5185745804  0.38404362  0.29746511  0.323116554  0.54894087                         ME32        ME40        ME53         ME3          ME5 1A1_ACR-173_TP1   0.17864851 -0.05337631 -0.03600139 -0.13503065 -0.223755857 1A10_ACR-145_TP4 -0.09133273  0.37583510  0.28172083  0.08596743  0.007776691 1A12_ACR-237_TP3 -0.10665896  0.07117197  0.14659280  0.12882554  0.134777655 1A2_ACR-244_TP4   0.48138110 -0.18561751 -0.32888781 -0.10113155 -0.065430560 1A8_ACR-186_TP2  -0.07399301 -0.07487744  0.11510826  0.05956833  0.226768466 1A9_ACR-244_TP2   0.40331322 -0.06600281  0.06067204  0.19030077  0.145800841                          ME19         ME27        ME45          ME22 1A1_ACR-173_TP1  -0.091982279  0.023872131 -0.01161525 -0.0002743876 1A10_ACR-145_TP4  0.007322575  0.160858405  0.13341959 -0.1231854067 1A12_ACR-237_TP3  0.106455939 -0.038011838  0.03199866  0.3041802867 1A2_ACR-244_TP4  -0.289770423 -0.275328177 -0.19354274 -0.1349407520 1A8_ACR-186_TP2   0.198661487  0.024445762  0.06402741 -0.0746400864 1A9_ACR-244_TP2   0.105392045  0.006782823  0.06487262 -0.0885059437                         ME30        ME29        ME37        ME24         ME1 1A1_ACR-173_TP1  -0.05331506 -0.02873108 -0.10947078  0.01920980 -0.12459130 1A10_ACR-145_TP4 -0.13463637 -0.30358237 -0.13749486 -0.16153800 -0.07140414 1A12_ACR-237_TP3  0.24269473  0.14179660  0.24137320  0.01178445  0.21887066 1A2_ACR-244_TP4  -0.18491163  0.14338189 -0.18316296 -0.07899874 -0.24736110 1A8_ACR-186_TP2  -0.08160114  0.06437295  0.07247864  0.02276353  0.17464184 1A9_ACR-244_TP2  -0.09188314  0.08626617 -0.13459586  0.35901222  0.17585632                        ME17         ME4        ME10          ME42          ME8 1A1_ACR-173_TP1   0.0856670 -0.03441632 -0.05343126  0.0007827266  0.039517723 1A10_ACR-145_TP4 -0.1018332 -0.19849086 -0.16888295 -0.1941582931  0.031928914 1A12_ACR-237_TP3  0.2017213  0.15150257  0.32225465  0.1313200046  0.003869344 1A2_ACR-244_TP4  -0.1246587 -0.10018415 -0.09619992  0.0195382875 -0.241098260 1A8_ACR-186_TP2  -0.0523347  0.10579762  0.02369099  0.1380486272  0.084038917 1A9_ACR-244_TP2   0.3239683  0.13531492  0.15630404  0.1255933632  0.022534594                          ME9 AzentaSampleName 1A1_ACR-173_TP1   0.01222597  1A1_ACR-173_TP1 1A10_ACR-145_TP4 -0.20882238 1A10_ACR-145_TP4 1A12_ACR-237_TP3  0.19125078 1A12_ACR-237_TP3 1A2_ACR-244_TP4  -0.21564948  1A2_ACR-244_TP4 1A8_ACR-186_TP2   0.09944352  1A8_ACR-186_TP2 1A9_ACR-244_TP2   0.10184144  1A9_ACR-244_TP2 </code></pre>
<pre><code>plotTraits&lt;-datTraits plotTraits$AzentaSampleName &lt;- rownames(plotTraits)  Eigen_MEs&lt;-Eigen_MEs%&gt;%   droplevels() #drop unused level  dim(Eigen_MEs)</code></pre>
<pre><code>[1] 38 55 </code></pre>
<pre><code>head(Eigen_MEs)</code></pre>
<pre><code>                         ME6        ME18        ME33        ME35         ME38 1A1_ACR-173_TP1  -0.02320522 -0.12042746 -0.07570329  0.08953234 -0.002722348 1A10_ACR-145_TP4  0.19459276  0.06843414  0.11466317  0.06011922  0.213671719 1A12_ACR-237_TP3 -0.14575292 -0.05911569 -0.21387865 -0.24197517 -0.187723279 1A2_ACR-244_TP4   0.28771754  0.17589318  0.20427360  0.09090719  0.226119130 1A8_ACR-186_TP2  -0.15984303  0.07920845  0.11766920  0.11913485  0.048951517 1A9_ACR-244_TP2   0.01581373  0.06951923 -0.04830976  0.15858184  0.214966291                         ME43          ME12        ME26        ME13         ME7 1A1_ACR-173_TP1   0.07647616  0.0001754009 -0.05505784  0.20270624  0.07475380 1A10_ACR-145_TP4  0.25109095  0.3641762566  0.42001651  0.16127320 -0.18021071 1A12_ACR-237_TP3 -0.16292788 -0.1051111381 -0.12908986 -0.18316460 -0.03432307 1A2_ACR-244_TP4  -0.11011852 -0.1651400603 -0.19244968 -0.04973101  0.32129475 1A8_ACR-186_TP2  -0.14830315 -0.0591323985  0.18148181 -0.12711065 -0.09629987 1A9_ACR-244_TP2  -0.07962408 -0.0540087297 -0.09729516 -0.12020683 -0.06672186                         ME14         ME2        ME23        ME36       ME15 1A1_ACR-173_TP1   0.19151639  0.12326050  0.07280842 -0.00839479  0.1325807 1A10_ACR-145_TP4 -0.07341621  0.03905688  0.23532090  0.05304861 -0.1689939 1A12_ACR-237_TP3 -0.13138055 -0.18842842 -0.21651217 -0.10499086 -0.1134810 1A2_ACR-244_TP4   0.13508842  0.26675554  0.11447397 -0.15114857  0.1436193 1A8_ACR-186_TP2  -0.14579154 -0.15718931 -0.08731953 -0.07862053 -0.1539886 1A9_ACR-244_TP2  -0.15357031 -0.16064972 -0.19545927 -0.09383841 -0.1216837                         ME21        ME51       ME46         ME0        ME20 1A1_ACR-173_TP1   0.09211440 -0.09982910  0.1175721 -0.04824818  0.20987392 1A10_ACR-145_TP4 -0.13294953  0.09493306  0.1579177  0.31696452  0.22192946 1A12_ACR-237_TP3 -0.12514048  0.04716891 -0.1814525  0.04868518  0.08817237 1A2_ACR-244_TP4  -0.04959862 -0.38878974 -0.1594932 -0.04743781 -0.16872228 1A8_ACR-186_TP2  -0.09072389  0.03283509 -0.1894046 -0.14353345 -0.14754665 1A9_ACR-244_TP2  -0.13871982 -0.36649673 -0.2079307  0.05895101 -0.24372543                         ME47        ME41        ME44        ME11        ME16 1A1_ACR-173_TP1   0.03470736  0.04752115  0.07281498  0.63307914 -0.04035761 1A10_ACR-145_TP4 -0.11675811 -0.12044660 -0.05209080 -0.07558101  0.25921778 1A12_ACR-237_TP3 -0.11194076 -0.06473216 -0.07773079 -0.06226461 -0.08070354 1A2_ACR-244_TP4  -0.07933785 -0.10409693 -0.03243204 -0.08462248 -0.21159566 1A8_ACR-186_TP2   0.32760534 -0.04570318 -0.07259399 -0.13761054 -0.10691635 1A9_ACR-244_TP2  -0.05242313 -0.02000174 -0.01173004 -0.01741715 -0.06278376                           ME25        ME34        ME49        ME39 1A1_ACR-173_TP1   0.1159472355 -0.06459061 -0.07468321  0.06383371 1A10_ACR-145_TP4 -0.0750813705 -0.05125816 -0.08851378 -0.16912272 1A12_ACR-237_TP3 -0.0872307433  0.01192810 -0.07575012  0.18314888 1A2_ACR-244_TP4  -0.1101654964 -0.15904220 -0.01167480  0.24732733 1A8_ACR-186_TP2   0.0080573154  0.49525150  0.31307068 -0.10271779 1A9_ACR-244_TP2  -0.0009325801 -0.02071236 -0.08091096  0.26465366                           ME48        ME52        ME50         ME31        ME28 1A1_ACR-173_TP1  -0.0658781815 -0.08730461  0.01179057  0.004557333  0.07717642 1A10_ACR-145_TP4 -0.1336876621 -0.19541181 -0.06381834 -0.169341137 -0.08401907 1A12_ACR-237_TP3  0.1448092748  0.15603605 -0.09196350 -0.119641364 -0.08583319 1A2_ACR-244_TP4   0.3409308178  0.22329330  0.33550188  0.218071659  0.22096796 1A8_ACR-186_TP2  -0.0005059539 -0.13611068  0.33820532  0.074046403  0.03732140 1A9_ACR-244_TP2   0.5185745804  0.38404362  0.29746511  0.323116554  0.54894087                         ME32        ME40        ME53         ME3          ME5 1A1_ACR-173_TP1   0.17864851 -0.05337631 -0.03600139 -0.13503065 -0.223755857 1A10_ACR-145_TP4 -0.09133273  0.37583510  0.28172083  0.08596743  0.007776691 1A12_ACR-237_TP3 -0.10665896  0.07117197  0.14659280  0.12882554  0.134777655 1A2_ACR-244_TP4   0.48138110 -0.18561751 -0.32888781 -0.10113155 -0.065430560 1A8_ACR-186_TP2  -0.07399301 -0.07487744  0.11510826  0.05956833  0.226768466 1A9_ACR-244_TP2   0.40331322 -0.06600281  0.06067204  0.19030077  0.145800841                          ME19         ME27        ME45          ME22 1A1_ACR-173_TP1  -0.091982279  0.023872131 -0.01161525 -0.0002743876 1A10_ACR-145_TP4  0.007322575  0.160858405  0.13341959 -0.1231854067 1A12_ACR-237_TP3  0.106455939 -0.038011838  0.03199866  0.3041802867 1A2_ACR-244_TP4  -0.289770423 -0.275328177 -0.19354274 -0.1349407520 1A8_ACR-186_TP2   0.198661487  0.024445762  0.06402741 -0.0746400864 1A9_ACR-244_TP2   0.105392045  0.006782823  0.06487262 -0.0885059437                         ME30        ME29        ME37        ME24         ME1 1A1_ACR-173_TP1  -0.05331506 -0.02873108 -0.10947078  0.01920980 -0.12459130 1A10_ACR-145_TP4 -0.13463637 -0.30358237 -0.13749486 -0.16153800 -0.07140414 1A12_ACR-237_TP3  0.24269473  0.14179660  0.24137320  0.01178445  0.21887066 1A2_ACR-244_TP4  -0.18491163  0.14338189 -0.18316296 -0.07899874 -0.24736110 1A8_ACR-186_TP2  -0.08160114  0.06437295  0.07247864  0.02276353  0.17464184 1A9_ACR-244_TP2  -0.09188314  0.08626617 -0.13459586  0.35901222  0.17585632                        ME17         ME4        ME10          ME42          ME8 1A1_ACR-173_TP1   0.0856670 -0.03441632 -0.05343126  0.0007827266  0.039517723 1A10_ACR-145_TP4 -0.1018332 -0.19849086 -0.16888295 -0.1941582931  0.031928914 1A12_ACR-237_TP3  0.2017213  0.15150257  0.32225465  0.1313200046  0.003869344 1A2_ACR-244_TP4  -0.1246587 -0.10018415 -0.09619992  0.0195382875 -0.241098260 1A8_ACR-186_TP2  -0.0523347  0.10579762  0.02369099  0.1380486272  0.084038917 1A9_ACR-244_TP2   0.3239683  0.13531492  0.15630404  0.1255933632  0.022534594                          ME9 AzentaSampleName 1A1_ACR-173_TP1   0.01222597  1A1_ACR-173_TP1 1A10_ACR-145_TP4 -0.20882238 1A10_ACR-145_TP4 1A12_ACR-237_TP3  0.19125078 1A12_ACR-237_TP3 1A2_ACR-244_TP4  -0.21564948  1A2_ACR-244_TP4 1A8_ACR-186_TP2   0.09944352  1A8_ACR-186_TP2 1A9_ACR-244_TP2   0.10184144  1A9_ACR-244_TP2 </code></pre>
<p>Plot mean module eigengene for each module.</p>
<pre><code>#convert wide format to long format for plotting   #str(Eigen_MEs)  plot_MEs &lt;- Eigen_MEs %&gt;%   pivot_longer(     cols = where(is.numeric),  # Select only numeric columns     names_to = "Module",       # Name for the new column containing the column names     values_to = "Mean"         # Name for the new column containing the values   )  #str(plot_MEs)  #join with phys data  plot_MEs&lt;-left_join(plot_MEs, plotTraits)  plot_MEs %&gt;%   group_by(Module) %&gt;%   ggplot(aes(x=mean_Temp_mean, y=Mean)) +   facet_wrap(~ Module)+   geom_point()+   # geom_smooth(method="lm")+   # The loess method can capture nonlinear trends   geom_smooth(method="loess")+   #ylim(-0.5,1) +   geom_hline(yintercept = 0, linetype="dashed", color = "grey")+   theme_bw() +    theme(axis.text.x=element_text(angle = 45, hjust=1, size = 12), #set x-axis label size         axis.title.x=element_text(size = 14), #set x-axis title size         axis.ticks.x=element_blank(), #No x-label ticks         #axis.title.y=element_blank(), #No y-axis title         axis.text.y=element_text(size = 14), #set y-axis label size,          panel.border = element_rect(color = "black", fill = NA, size = 1), #set border         panel.grid.major = element_blank(), #Set major gridlines         panel.grid.minor = element_blank(), #Set minor gridlines         axis.line = element_line(colour = "black"), #Set axes color         plot.background=element_blank(),         plot.title = element_text(size=22))</code></pre>
<pre><code># Now just plot the modules that are significantly correlated with temp plot_MEs_signif &lt;- function(var.name){      # Isolate modules that are significantly correlated with input variable   MEs_signif &lt;- rownames(heatmappval_df[heatmappval_df[[var.name]] &lt; 0.05,])      if (length(MEs_signif) == 0) {     output &lt;- cat("There are no modules significantly correlated with", var.name)     return(output)   } else {     # Choose appropriate smoothing method     num_x_values &lt;- plot_MEs %&gt;%       filter(Module %in% MEs_signif) %&gt;%       summarise(unique_x = n_distinct(!!sym(var.name))) %&gt;%       pull(unique_x)          # loess can capture non-linear trends, but is only appropriate for more than 2 x-values     smoothing_method &lt;- ifelse(num_x_values &gt; 2, "loess", "lm")          plot_MEs %&gt;%       filter(Module %in% MEs_signif)%&gt;%       group_by(Module) %&gt;%       ggplot(aes_string(x=var.name, y="Mean")) +       facet_wrap(~ Module)+       geom_point()+       geom_smooth(method=smoothing_method)+       #ylim(-0.5,1) +       geom_hline(yintercept = 0, linetype="dashed", color = "grey")+       theme_bw() +        theme(axis.text.x=element_text(angle = 45, hjust=1, size = 12), #set x-axis label size             axis.title.x=element_text(size = 14), #set x-axis title size             axis.ticks.x=element_blank(), #No x-label ticks             #axis.title.y=element_blank(), #No y-axis title             axis.text.y=element_text(size = 14), #set y-axis label size,              panel.border = element_rect(color = "black", fill = NA, size = 1), #set border             panel.grid.major = element_blank(), #Set major gridlines             panel.grid.minor = element_blank(), #Set minor gridlines             axis.line = element_line(colour = "black"), #Set axes color             plot.background=element_blank(),             plot.title = element_text(size=22))   } }  plot_MEs_signif("mean_Temp_mean")</code></pre>
<pre><code># Now just plot the modules that are significantly correlated with solar plot_MEs_signif("mean_solar_rad_kwpm2_mean")</code></pre>
<pre><code># Now just plot the modules that are significantly correlated with rainfall plot_MEs_signif("cumulative_rainfall_mm_mean")</code></pre>
<pre><code># Now just plot the modules that are significantly correlated with TP1 plot_MEs_signif("timepoint1")</code></pre>
<pre><code>There are no modules significantly correlated with timepoint1  NULL </code></pre>
<pre><code># Now just plot the modules that are significantly correlated with TP2 plot_MEs_signif("timepoint2")</code></pre>
<pre><code># Now just plot the modules that are significantly correlated with TP3 plot_MEs_signif("timepoint3")</code></pre>
<pre><code># Now just plot the modules that are significantly correlated with TP4 plot_MEs_signif("timepoint4")</code></pre>
<pre><code>There are no modules significantly correlated with timepoint4  NULL </code></pre>
<p>Interesting! Module 18 is the only significantly correlated module for both solar radiation and rainfall, but shwows inverse patterns of eigengene expression for the two. Module 18 is also one of the modules significantly correlated with TP3. Notably, both solar radiation and rainfall hit "extremes" at TP3 (TP3 represents both the maximum recorded solar radiation and minimum recorded rainfall of our 4 timepoints)</p>
</section>
<section id="save-data-of-interest-for-future-use" class="level1">
<h1>9 Save data of interest for future use</h1>
<pre><code># df that shows which WGCNA module each gene/miRNA is grouped with write.table(module_info, "../output/12-Apul-miRNA-mRNA-WGCNA/WGCNA-module-membership.tab", quote=FALSE, row.names=FALSE, col.names=TRUE, sep="\t")  # df of physiological/environmental variables write.table(plotTraits, "../output/12-Apul-miRNA-mRNA-WGCNA/phys-envir-traits.tab", quote=FALSE, row.names=FALSE, col.names=TRUE, sep="\t")  # df that shows p-values for correlations between each WGCNA module and physiological/environmental variable write.table(heatmappval_df, "../output/12-Apul-miRNA-mRNA-WGCNA/pval-cor-WGCNA_module-phys_envir.tab", quote=FALSE, row.names=FALSE, col.names=TRUE, sep="\t")  # df of module eigengenes write.table(MEs, "../output/12-Apul-miRNA-mRNA-WGCNA/WGCNA-module-eigengenes.tab", quote=FALSE, row.names=FALSE, col.names=TRUE, sep="\t")</code></pre>
</section>
<section id="export-to-cytoscape" class="level1">
<h1>10 Export to Cytoscape</h1>
<p>Export modules of interest for network visualization</p>
<pre><code>MEs_signif_temp</code></pre>
<pre><code> [1] "ME6"  "ME7"  "ME2"  "ME15" "ME34" "ME19" "ME45" "ME1"  "ME42" "ME8"  </code></pre>
<p>Note that, due to the size of many modules, it's probably most practical to export modules individually (unless interested in in connections between modules)</p>
<pre><code># # Recalculate topological overlap if needed # TOM = TOMsimilarityFromExpr(datExpr, power = 5); #   # Read in the annotation file # annot = datTraits; # for(i in seq_along(MEs_signif_temp)) {  #   # Select modules #   modules = MEs_signif_temp[i]; #   # Select module probes #   probes = names(datExpr) #   inModule = is.finite(match(moduleLabels, modules)); #   modProbes = probes[inModule]; #   # modGenes = annot$gene_symbol[match(modProbes, annot$substanceBXH)]; #   # Select the corresponding Topological Overlap #   modTOM = TOM[inModule, inModule]; #   dimnames(modTOM) = list(modProbes, modProbes) #   # Export the network into edge and node list files Cytoscape can read #   cyt = exportNetworkToCytoscape(modTOM, #     edgeFile = paste("CytoscapeInput-edges-", paste(modules, collapse="-"), ".txt", sep=""), #     nodeFile = paste("CytoscapeInput-nodes-", paste(modules, collapse="-"), ".txt", sep=""), #     weighted = TRUE, #     threshold = 0.02, #     nodeNames = modProbes, #     # altNodeNames = modGenes, #     nodeAttr = moduleLabels[inModule]); # }  # Recalculate topological overlap if needed   TOM = TOMsimilarityFromExpr(datExpr, power = 5);</code></pre>
<pre><code>TOM calculation: adjacency.. ..will use 48 parallel threads.  Fraction of slow calculations: 0.000000 ..connectivity.. ..matrix multiplication (system BLAS).. ..normalization.. ..done. </code></pre>
<pre><code>  # Read in the annotation file   annot = datTraits;   # Select modules   modules = "45";   # Select module probes   probes = names(datExpr)   inModule = is.finite(match(moduleLabels, modules));   modProbes = probes[inModule];   # modGenes = annot$gene_symbol[match(modProbes, annot$substanceBXH)];   # Select the corresponding Topological Overlap   modTOM = TOM[inModule, inModule];   dimnames(modTOM) = list(modProbes, modProbes)   # Export the network into edge and node list files Cytoscape can read   cyt = exportNetworkToCytoscape(modTOM,     edgeFile = paste("CytoscapeInput-edges-", paste(modules, collapse="-"), ".txt", sep=""),     nodeFile = paste("CytoscapeInput-nodes-", paste(modules, collapse="-"), ".txt", sep=""),     weighted = TRUE,     threshold = 0.02,     nodeNames = modProbes,     # altNodeNames = modGenes,     nodeAttr = moduleLabels[inModule]);</code></pre>
<pre><code># Move cytoscape files to output directory mv ./CytoscapeInput* ../output/12-Apul-miRNA-mRNA-WGCNA</code></pre>
<p>To load network to Cytoscape:</p>
<ol type="1">
<li><p>File -&gt; Import -&gt; Network from File…</p></li>
<li><p>Select Edges file (created above)</p></li>
<li><p>Assign fromNode to "Source Node," toNode to "Target Node," weight to "Edge Attribute," and direction to "Interaction Type"</p></li>
<li><p>Once netwrok is loaded, can manipulate/style as desired.</p></li>
</ol>
<pre><code># Print session info sessioninfo::session_info()</code></pre>
<pre><code>─ Session info ───────────────────────────────────────────────────────────────  setting  value  version  R version 4.2.3 (2023-03-15)  os       Ubuntu 18.04.6 LTS  system   x86_64, linux-gnu  ui       X11  language (EN)  collate  en_US.UTF-8  ctype    en_US.UTF-8  tz       America/Los_Angeles  date     2025-03-18  pandoc   2.19.2 @ /usr/lib/rstudio-server/bin/quarto/bin/tools/ (via rmarkdown)  ─ Packages ───────────────────────────────────────────────────────────────────  package              * version   date (UTC) lib source  abind                  1.4-5     2016-07-21 [1] CRAN (R 4.2.3)  annotate               1.76.0    2022-11-01 [1] Bioconductor  AnnotationDbi          1.60.2    2023-03-10 [1] Bioconductor  backports              1.5.0     2024-05-23 [2] CRAN (R 4.2.3)  base64enc              0.1-3     2015-07-28 [2] CRAN (R 4.2.3)  Biobase              * 2.58.0    2022-11-01 [1] Bioconductor  BiocGenerics         * 0.44.0    2022-11-01 [1] Bioconductor  BiocParallel           1.32.6    2023-03-17 [1] Bioconductor  Biostrings             2.66.0    2022-11-01 [1] Bioconductor  bit                    4.5.0.1   2024-12-03 [2] CRAN (R 4.2.3)  bit64                  4.5.2     2024-09-22 [2] CRAN (R 4.2.3)  bitops                 1.0-8     2024-07-29 [1] CRAN (R 4.2.3)  blob                   1.2.4     2023-03-17 [2] CRAN (R 4.2.3)  broom                  1.0.6     2024-05-17 [2] CRAN (R 4.2.3)  cachem                 1.1.0     2024-05-16 [2] CRAN (R 4.2.3)  car                    3.1-2     2023-03-30 [1] CRAN (R 4.2.3)  carData                3.0-5     2022-01-06 [1] CRAN (R 4.2.3)  checkmate              2.3.2     2024-07-29 [1] CRAN (R 4.2.3)  circlize               0.4.16    2024-02-20 [1] CRAN (R 4.2.3)  cli                    3.6.3     2024-06-21 [2] CRAN (R 4.2.3)  clue                   0.3-66    2024-11-13 [1] CRAN (R 4.2.3)  cluster                2.1.8     2024-12-11 [2] CRAN (R 4.2.3)  codetools              0.2-20    2024-03-31 [2] CRAN (R 4.2.3)  colorspace             2.1-1     2024-07-26 [2] CRAN (R 4.2.3)  ComplexHeatmap       * 2.14.0    2022-11-01 [1] Bioconductor  crayon                 1.5.3     2024-06-20 [2] CRAN (R 4.2.3)  curl                   5.2.1     2024-03-01 [2] CRAN (R 4.2.3)  data.table             1.15.4    2024-03-30 [2] CRAN (R 4.2.3)  DBI                    1.2.3     2024-06-02 [2] CRAN (R 4.2.3)  DelayedArray           0.24.0    2022-11-01 [1] Bioconductor  dendsort             * 0.3.4     2021-04-20 [1] CRAN (R 4.2.3)  DESeq2               * 1.38.3    2023-01-19 [1] Bioconductor  digest                 0.6.35    2024-03-11 [2] CRAN (R 4.2.3)  doParallel             1.0.17    2022-02-07 [1] CRAN (R 4.2.3)  dplyr                * 1.1.4     2023-11-17 [2] CRAN (R 4.2.3)  dynamicTreeCut       * 1.63-1    2016-03-11 [1] CRAN (R 4.2.3)  evaluate               0.23      2023-11-01 [2] CRAN (R 4.2.3)  factoextra           * 1.0.7     2020-04-01 [1] CRAN (R 4.2.3)  farver                 2.1.2     2024-05-13 [2] CRAN (R 4.2.3)  fastcluster          * 1.2.6     2024-01-12 [1] CRAN (R 4.2.3)  fastmap                1.2.0     2024-05-15 [2] CRAN (R 4.2.3)  forcats              * 1.0.0     2023-01-29 [2] CRAN (R 4.2.3)  foreach                1.5.2     2022-02-02 [1] CRAN (R 4.2.3)  foreign                0.8-87    2024-06-26 [2] CRAN (R 4.2.3)  Formula                1.2-5     2023-02-24 [1] CRAN (R 4.2.3)  genefilter           * 1.80.3    2023-01-19 [1] Bioconductor  geneplotter            1.76.0    2022-11-01 [1] Bioconductor  generics               0.1.3     2022-07-05 [2] CRAN (R 4.2.3)  GenomeInfoDb         * 1.34.9    2023-02-02 [1] Bioconductor  GenomeInfoDbData       1.2.9     2023-10-25 [1] Bioconductor  GenomicRanges        * 1.50.2    2022-12-16 [1] Bioconductor  GetoptLong             1.0.5     2020-12-15 [1] CRAN (R 4.2.3)  ggforce                0.4.2     2024-02-19 [1] CRAN (R 4.2.3)  ggfortify            * 0.4.17    2024-04-17 [1] CRAN (R 4.2.3)  ggplot2              * 3.5.1     2024-04-23 [1] CRAN (R 4.2.3)  ggpubr                 0.6.0     2023-02-10 [1] CRAN (R 4.2.3)  ggraph               * 2.2.1     2024-03-07 [1] CRAN (R 4.2.3)  ggrepel                0.9.5     2024-01-10 [1] CRAN (R 4.2.3)  ggsignif               0.6.4     2022-10-13 [1] CRAN (R 4.2.3)  GlobalOptions          0.1.2     2020-06-10 [1] CRAN (R 4.2.3)  glue                   1.8.0     2024-09-30 [2] CRAN (R 4.2.3)  GO.db                  3.16.0    2024-03-22 [1] Bioconductor  graphlayouts           1.2.2     2025-01-23 [1] CRAN (R 4.2.3)  gridExtra              2.3       2017-09-09 [1] CRAN (R 4.2.3)  gtable                 0.3.5     2024-04-22 [2] CRAN (R 4.2.3)  highr                  0.11      2024-05-26 [2] CRAN (R 4.2.3)  Hmisc                  5.1-3     2024-05-28 [1] CRAN (R 4.2.3)  hms                    1.1.3     2023-03-21 [2] CRAN (R 4.2.3)  htmlTable              2.4.3     2024-07-21 [1] CRAN (R 4.2.3)  htmltools              0.5.8.1   2024-04-04 [1] CRAN (R 4.2.3)  htmlwidgets            1.6.4     2023-12-06 [1] CRAN (R 4.2.3)  httr                   1.4.7     2023-08-15 [2] CRAN (R 4.2.3)  igraph               * 2.0.3     2024-03-13 [1] CRAN (R 4.2.3)  impute                 1.72.3    2023-01-19 [1] Bioconductor  IRanges              * 2.32.0    2022-11-01 [1] Bioconductor  iterators              1.0.14    2022-02-05 [1] CRAN (R 4.2.3)  KEGGREST               1.38.0    2022-11-01 [1] Bioconductor  knitr                * 1.47      2024-05-29 [2] CRAN (R 4.2.3)  labeling               0.4.3     2023-08-29 [2] CRAN (R 4.2.3)  lattice              * 0.22-6    2024-03-20 [2] CRAN (R 4.2.3)  lifecycle              1.0.4     2023-11-07 [2] CRAN (R 4.2.3)  locfit                 1.5-9.10  2024-06-24 [1] CRAN (R 4.2.3)  lubridate            * 1.9.4     2024-12-08 [2] CRAN (R 4.2.3)  magrittr             * 2.0.3     2022-03-30 [2] CRAN (R 4.2.3)  MASS                   7.3-60    2023-05-04 [2] CRAN (R 4.2.3)  Matrix                 1.6-1     2023-08-14 [2] CRAN (R 4.2.3)  MatrixGenerics       * 1.10.0    2022-11-01 [1] Bioconductor  matrixStats          * 1.4.0     2024-09-04 [1] CRAN (R 4.2.3)  memoise                2.0.1     2021-11-26 [2] CRAN (R 4.2.3)  mgcv                   1.9-1     2023-12-21 [2] CRAN (R 4.2.3)  mnormt                 2.1.1     2022-09-26 [1] CRAN (R 4.2.3)  munsell                0.5.1     2024-04-01 [2] CRAN (R 4.2.3)  nlme                   3.1-164   2023-11-27 [2] CRAN (R 4.2.3)  nnet                   7.3-19    2023-05-03 [2] CRAN (R 4.2.3)  permute              * 0.9-7     2022-01-27 [1] CRAN (R 4.2.3)  pheatmap             * 1.0.12    2019-01-04 [1] CRAN (R 4.2.3)  pillar                 1.10.0    2024-12-17 [2] CRAN (R 4.2.3)  pkgconfig              2.0.3     2019-09-22 [2] CRAN (R 4.2.3)  png                    0.1-8     2022-11-29 [1] CRAN (R 4.2.3)  polyclip               1.10-7    2024-07-23 [1] CRAN (R 4.2.3)  preprocessCore         1.60.2    2023-01-19 [1] Bioconductor  psych                * 2.4.12    2024-12-23 [1] CRAN (R 4.2.3)  purrr                * 1.0.2     2023-08-10 [2] CRAN (R 4.2.3)  R6                     2.5.1     2021-08-19 [2] CRAN (R 4.2.3)  RColorBrewer         * 1.1-3     2022-04-03 [2] CRAN (R 4.2.3)  Rcpp                   1.0.13    2024-07-17 [1] CRAN (R 4.2.3)  RCurl                  1.98-1.16 2024-07-11 [1] CRAN (R 4.2.3)  readr                * 2.1.5     2024-01-10 [2] CRAN (R 4.2.3)  rjson                  0.2.21    2022-01-09 [1] CRAN (R 4.2.3)  rlang                  1.1.3     2024-01-10 [2] CRAN (R 4.2.3)  rmarkdown              2.28      2024-08-17 [1] CRAN (R 4.2.3)  rpart                  4.1.23    2023-12-05 [2] CRAN (R 4.2.3)  RSQLite                2.3.7     2024-05-27 [1] CRAN (R 4.2.3)  rstatix                0.7.2     2023-02-01 [1] CRAN (R 4.2.3)  rstudioapi             0.16.0    2024-03-24 [2] CRAN (R 4.2.3)  S4Vectors            * 0.36.2    2023-02-26 [1] Bioconductor  scales                 1.3.0     2023-11-28 [2] CRAN (R 4.2.3)  sessioninfo            1.2.2     2021-12-06 [1] CRAN (R 4.2.3)  shape                  1.4.6.1   2024-02-23 [1] CRAN (R 4.2.3)  stringi                1.8.4     2024-05-06 [2] CRAN (R 4.2.3)  stringr              * 1.5.1     2023-11-14 [2] CRAN (R 4.2.3)  SummarizedExperiment * 1.28.0    2022-11-01 [1] Bioconductor  survival               3.6-4     2024-04-24 [2] CRAN (R 4.2.3)  tibble               * 3.2.1     2023-03-20 [2] CRAN (R 4.2.3)  tidygraph              1.3.1     2024-01-30 [1] CRAN (R 4.2.3)  tidyr                * 1.3.1     2024-01-24 [2] CRAN (R 4.2.3)  tidyselect             1.2.1     2024-03-11 [2] CRAN (R 4.2.3)  tidyverse            * 2.0.0     2023-02-22 [2] CRAN (R 4.2.3)  timechange             0.3.0     2024-01-18 [2] CRAN (R 4.2.3)  tweenr                 2.0.3     2024-02-26 [1] CRAN (R 4.2.3)  tzdb                   0.4.0     2023-05-12 [2] CRAN (R 4.2.3)  vctrs                  0.6.5     2023-12-01 [2] CRAN (R 4.2.3)  vegan                * 2.6-8     2024-08-28 [1] CRAN (R 4.2.3)  viridis                0.6.5     2024-01-29 [1] CRAN (R 4.2.3)  viridisLite            0.4.2     2023-05-02 [2] CRAN (R 4.2.3)  vroom                  1.6.5     2023-12-05 [2] CRAN (R 4.2.3)  WGCNA                * 1.72-5    2023-12-07 [1] CRAN (R 4.2.3)  withr                  3.0.2     2024-10-28 [2] CRAN (R 4.2.3)  xfun                   0.44      2024-05-15 [2] CRAN (R 4.2.3)  XML                    3.99-0.17 2024-06-25 [1] CRAN (R 4.2.3)  xtable                 1.8-4     2019-04-21 [1] CRAN (R 4.2.3)  XVector                0.38.0    2022-11-01 [1] Bioconductor  yaml                   2.3.10    2024-07-26 [2] CRAN (R 4.2.3)  zlibbioc               1.44.0    2022-11-01 [1] Bioconductor   [1] /home/shared/8TB_HDD_02/shedurkin/R/x86_64-pc-linux-gnu-library/4.2  [2] /opt/R/4.2.3/lib/R/library  ──────────────────────────────────────────────────────────────────────────────</code></pre>


</section>

 ]]></description>
  <category>E5-coral</category>
  <guid>https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/2025_03_11_timeseries_WGCNA.html</guid>
  <pubDate>Tue, 11 Mar 2025 07:00:00 GMT</pubDate>
</item>
<item>
  <title>Deep-dive expression: A.pul miRanda comparisons</title>
  <dc:creator>Kathleen Durkin</dc:creator>
  <link>https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/2025_02_13_deepdive_miRanda_comparisons.html</link>
  <description><![CDATA[ 




<p>Up to this point, our miRNA target prediction has been primarily performed using the tool miRanda, which requires only seed binding, with 3’UTR regions as input. However, there is growing evidence that cnidarian miRNA binding functions similarly to plants, requiring near-full complementarity and to act primarily through target cleavage, which can occur at any location in the mRNA sequence (not just the 3’UTR). This would mean our current miRanda target predictions are both a) not sufficiently restricted to fll complementarity, and b) incorrectly limited to the 3’UTR.</p>
<p>I check what happens when we adjust those parameters</p>
<section id="summary" class="level1">
<h1>Summary</h1>
<p>How does different input and/or complementarity filtering affect # putative interactions:</p>
<table class="table">
<thead>
<tr class="header">
<th>Input</th>
<th>unfiltered</th>
<th>filtered for complementarity</th>
<th>% retained</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>3'UTR</td>
<td>6109</td>
<td>13</td>
<td>0.213 %</td>
</tr>
<tr class="even">
<td>full mRNA</td>
<td>19133057</td>
<td>143</td>
<td>0.000747 %</td>
</tr>
</tbody>
</table>
<p>For different filters, how many putative interactions <em>also show significant coexpression</em>?</p>
<table class="table">
<thead>
<tr class="header">
<th>Input</th>
<th>21bp</th>
<th>21bp, &gt;=3 mismatch</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>3'UTR</td>
<td>58 (3.4% of all 21bp)</td>
<td>0</td>
</tr>
<tr class="even">
<td>full mRNA</td>
<td>3767 (3.7% of all 21bp)</td>
<td>6 (4.2% of all 21bp,&gt;=3mis)</td>
</tr>
</tbody>
</table>
<p>Note that, in general, only ~1/3 of significant coexpressions have a <em>negative</em> relationship (which would support functional target cleavage)</p>
<p>Note also that some putative interactions examined above weren't included in the PCC table</p>
<p>Next steps:</p>
<ul>
<li><p>discuss w team – should we look for both miRNAs that function through target cleavage (full complementary, full coding sequence) <em>and</em> miRNAs that function through "canonical" translational silencing (seed complementarity, 3'UTR)?</p></li>
<li><p>Run same comparison using BLAST and/or RNAhybrid as the tool. I'm still not 100% clear on what sequence features miRanda takes into consideration, and any that <em>are</em> included will have been based on mammalian miRNAs. It may be more appropriate to use a different tool</p></li>
<li><p>if we decide to shift target prediction requirements, need to rerun all target prediction done thus far :(</p></li>
</ul>
<p>Code included below</p>
</section>
<section id="apul-miranda-input-comparisons" class="level1">
<h1><a href="https://github.com/urol-e5/deep-dive-expression/blob/main/D-Apul/code/24-Apul-miRanda-input-comparisons.md">24-Apul-miRanda-input-comparisons</a></h1>
</section>
<section id="mirna-and-full-mrna-coding-sequences" class="level1">
<h1>1 miRNA and full mRNA coding sequences</h1>
<p>Inputs:</p>
<ul>
<li><p>FASTA of A.pulchra mRNA coding sequences</p></li>
<li><p>FASTA of A.pulchra mature miRNAs</p></li>
</ul>
<section id="get-mrna-fasta" class="level2">
<h2 class="anchored" data-anchor-id="get-mrna-fasta">1.1 Get mRNA fasta</h2>
<pre><code>/home/shared/bedtools2/bin/bedtools getfasta \ -fi "../data/Apulchra-genome.fa" \ -bed "../data/Apulcra-genome-mRNA_only.gff" \ -fo "../data/24-Apul-miRanda-input-comparisons/Apul_mRNA_full.fa"</code></pre>
</section>
<section id="run-miranda" class="level2">
<h2 class="anchored" data-anchor-id="run-miranda">1.2 Run miRanda</h2>
<pre><code># Same settings we've been using:  # score cutoff &gt;100 # energy cutoff &lt;-10 # strict binding  /home/shared/miRanda-3.3a/src/miranda \ ../output/17-Apul-miRNA-lncRNA-BLASTs-RNAhybrid/Apul_ShortStack_4.1.0_mature.fasta \ ../data/24-Apul-miRanda-input-comparisons/Apul_mRNA_full.fa \ -sc 100 \ -en -10 \ -strict \ -out ../output/24-Apul-miRanda-input-comparisons/Apul-miRanda-mRNA_full-strict_all.tab</code></pre>
</section>
<section id="summarize-results" class="level2">
<h2 class="anchored" data-anchor-id="summarize-results">1.3 Summarize results</h2>
<p>Let's look at the output</p>
<pre><code>echo "miranda run finished!" echo "Counting number of interacting miRNA-lncRNA pairs"  zgrep -c "Performing Scan" ../output/24-Apul-miRanda-input-comparisons/Apul-miRanda-mRNA_full-strict_all.tab  echo "Parsing output" grep -A 1 "Scores for this hit:" ../output/24-Apul-miRanda-input-comparisons/Apul-miRanda-mRNA_full-strict_all.tab | sort | grep '&gt;' &gt; ../output/24-Apul-miRanda-input-comparisons/Apul-miRanda-mRNA_full-strict-parsed.txt  echo "counting number of putative interactions predicted (can include multiple interactions between single miRNA-lncRNA pair)" wc -l ../output/24-Apul-miRanda-input-comparisons/Apul-miRanda-mRNA_full-strict_all.tab</code></pre>
<pre><code>## miranda run finished! ## Counting number of interacting miRNA-lncRNA pairs ## 1421433 ## Parsing output ## counting number of putative interactions predicted (can include multiple interactions between single miRNA-lncRNA pair) ## 19133057 ../output/24-Apul-miRanda-input-comparisons/Apul-miRanda-mRNA_full-strict_all.tab </code></pre>
<p>This is a lot of putative interactions! Note though, that miRanda only requires complementarity of a 8bp seed region of the miRNA. We instead want to look for binding with full or near-full complementarity. Let's look at how many putative interactions are predicted for a binding length of at least 21 nucleotides (the length of our smallest mature miRNA).</p>
<pre><code>echo "number of putative interactions of at least 21 nucleotides" awk -F'\t' '$7 &gt;= 21' ../output/24-Apul-miRanda-input-comparisons/Apul-miRanda-mRNA_full-strict-parsed.txt | wc -l echo "" echo "check some:" awk -F'\t' '$7 &gt;= 21' ../output/24-Apul-miRanda-input-comparisons/Apul-miRanda-mRNA_full-strict-parsed.txt | head -5</code></pre>
<pre><code>## number of putative interactions of at least 21 nucleotides ## 101744 ##  ## check some: ## &gt;Cluster_10051.mature::ptg000016l:7795530-7795551(+) ntLink_6:10104556-10114024  154.00  -19.94  2 21    1466 1493   25  68.00%  72.00% ## &gt;Cluster_10051.mature::ptg000016l:7795530-7795551(+) ntLink_6:10104556-10114024  155.00  -21.12  2 21    8084 8107   21  66.67%  76.19% ## &gt;Cluster_10051.mature::ptg000016l:7795530-7795551(+) ntLink_6:10351674-10369781  147.00  -17.81  2 21    2265 2289   22  59.09%  72.73% ## &gt;Cluster_10051.mature::ptg000016l:7795530-7795551(+) ntLink_6:10392093-10402892  157.00  -20.28  2 21    4608 4632   22  77.27%  77.27% ## &gt;Cluster_10051.mature::ptg000016l:7795530-7795551(+) ntLink_6:10597160-10611657  159.00  -19.58  2 21    7110 7133   21  71.43%  76.19% </code></pre>
<p>The header for this output is formatted as:</p>
<p>mirna Target Score Energy-Kcal/Mol Query-Aln(start-end) Subject-Al(Start-End) Al-Len Subject-Identity Query-Identity</p>
<p>We can see from the percent identities (last 2 entries) that this number includes alignments with multiple mismatches. Let's filter again to reduce the number of permissible mismatches. Let's say we want no more than 3 mismatches (a gap is counted as a mismatch). For an alignment of 21 nucleotides, this would be an percent identity of (21-3)/21 = 85.7%. The miRNA is our "subject", so we will filter by column 8.</p>
<pre><code>echo "number of putative interactions of at least 21 nucleotides, with at most 3 mismatches" awk -F'\t' '$7 &gt;= 21' ../output/24-Apul-miRanda-input-comparisons/Apul-miRanda-mRNA_full-strict-parsed.txt | awk -F'\t' '$8 &gt;= 85' | wc -l echo "" echo "check some:" awk -F'\t' '$7 &gt;= 21' ../output/24-Apul-miRanda-input-comparisons/Apul-miRanda-mRNA_full-strict-parsed.txt | awk -F'\t' '$8 &gt;= 85' | head -5</code></pre>
<pre><code>## number of putative interactions of at least 21 nucleotides, with at most 3 mismatches ## 143 ##  ## check some: ## &gt;Cluster_10057.mature::ptg000016l:8599884-8599905(-) ptg000017l:7171736-7192592  174.00  -21.36  2 21    13035 13058 21  85.71%  85.71% ## &gt;Cluster_10093.mature::ptg000016l:11751407-11751428(-)   ptg000007l:5326404-5332924  179.00  -25.97  2 21    658 681 21  85.71%  85.71% ## &gt;Cluster_10228.mature::ptg000017l:7471168-7471190(+) ntLink_8:9921794-9928534    179.00  -26.55  2 22    872 896 22  86.36%  86.36% ## &gt;Cluster_10228.mature::ptg000017l:7471168-7471190(+) ptg000019l:1503591-1507594  188.00  -31.70  2 22    3554 3577   21  85.71%  95.24% ## &gt;Cluster_10228.mature::ptg000017l:7471168-7471190(+) ptg000039l:790628-797014    188.00  -25.92  2 22    5693 5716   21  90.48%  90.48% </code></pre>
<p>So filtering for full or near-full complementarity reduced the number of putative interactions between miRNA and full mRNA sequences from 19133057 to 143.</p>
</section>
</section>
<section id="mirna-and-mrna-3utrs" class="level1">
<h1>2 miRNA and mRNA 3'UTRs</h1>
<p>Now let's see how filtering changes the outputs of miRanda run with only the 3'UTR mRNA region (the input we have been using up till now)</p>
<p>Unfiltered:</p>
<pre><code>wc -l ../output/09-Apul-mRNA-miRNA-interactions/miranda_strict_all_1kb_parsed_apul_updated.txt</code></pre>
<pre><code>## 6109 ../output/09-Apul-mRNA-miRNA-interactions/miranda_strict_all_1kb_parsed_apul_updated.txt </code></pre>
<p>Filter for alignment &gt;=21 nucleotides:</p>
<pre><code>echo "number of putative interactions of at least 21 nucleotides" awk -F'\t' '$7 &gt;= 21' ../output/09-Apul-mRNA-miRNA-interactions/miranda_strict_all_1kb_parsed_apul_updated.txt | wc -l echo "" echo "check some:" awk -F'\t' '$7 &gt;= 21' ../output/09-Apul-mRNA-miRNA-interactions/miranda_strict_all_1kb_parsed_apul_updated.txt | head -5</code></pre>
<pre><code>## number of putative interactions of at least 21 nucleotides ## 1699 ##  ## check some: ## &gt;Cluster_10051.mature::ptg000016l:7795530-7795551(+) FUN_002849::ntLink_8:6882212-6883212    158.00  -21.97  2 21    278 301 21  66.67%  85.71% ## &gt;Cluster_10051.mature::ptg000016l:7795530-7795551(+) FUN_018974::ptg000012l:15854445-15855445    155.00  -23.11  2 21    894 920 24  62.50%  75.00% ## &gt;Cluster_10051.mature::ptg000016l:7795530-7795551(+) FUN_019124::ptg000012l:17452953-17453953    147.00  -22.09  2 21    783 810 25  60.00%  68.00% ## &gt;Cluster_10051.mature::ptg000016l:7795530-7795551(+) FUN_023335::ptg000017l:6446983-6447355  150.00  -22.25  2 21    171 197 24  62.50%  75.00% ## &gt;Cluster_10051.mature::ptg000016l:7795530-7795551(+) FUN_024352::ptg000018l:5339775-5340775  162.00  -20.97  2 21    96 122  24  75.00%  75.00% </code></pre>
<p>Filter again for &lt;=3 mismatches:</p>
<pre><code>echo "number of putative interactions of at least 21 nucleotides, with at most 3 mismatches" awk -F'\t' '$7 &gt;= 21' ../output/09-Apul-mRNA-miRNA-interactions/miranda_strict_all_1kb_parsed_apul_updated.txt | awk -F'\t' '$8 &gt;= 85' | wc -l echo "" echo "check some:" awk -F'\t' '$7 &gt;= 21' ../output/09-Apul-mRNA-miRNA-interactions/miranda_strict_all_1kb_parsed_apul_updated.txt | awk -F'\t' '$8 &gt;= 85' | head -5</code></pre>
<pre><code>## number of putative interactions of at least 21 nucleotides, with at most 3 mismatches ## 13 ##  ## check some: ## &gt;Cluster_10228.mature::ptg000017l:7471168-7471190(+) FUN_022919::ptg000017l:1483036-1484036  183.00  -28.35  2 22    69 94   23  86.96%  86.96% ## &gt;Cluster_10228.mature::ptg000017l:7471168-7471190(+) FUN_027647::ptg000021l:8285525-8286525  174.00  -25.86  2 21    101 125 21  85.71%  85.71% ## &gt;Cluster_10228.mature::ptg000017l:7471168-7471190(+) FUN_040282::ptg000031l:6265207-6266207  183.00  -30.15  2 21    525 550 22  86.36%  86.36% ## &gt;Cluster_10419.mature::ptg000018l:2286829-2286850(+) FUN_016674::ptg000011l:6193740-6194740  174.00  -21.33  2 21    904 927 21  85.71%  85.71% ## &gt;Cluster_15775.mature::ptg000025l:7472581-7472603(-) FUN_022318::ptg000016l:7511874-7512874  180.00  -21.41  2 22    573 596 21  85.71%  85.71% </code></pre>
<p>When only mRNA 3'UTR regions are used as input, filtering for full/near-full complementarity reduces the number of putative interactions from 6109 to 13.</p>
</section>
<section id="examine-coexpression" class="level1">
<h1>3 Examine coexpression</h1>
<p>Now that we've found putative interactions with high complementarity, we need to validate miRNA function by examining patterns of coexpression. We'd expect a putatively-interacting miRNA-mRNA pair to be highly coexpressed, and we'd expect a negative relationship to indicate target cleavage.</p>
<section id="full-mrna" class="level2">
<h2 class="anchored" data-anchor-id="full-mrna">3.1 full mRNA</h2>
<pre><code>library(readr) library(dplyr)</code></pre>
<pre><code>##  ## Attaching package: 'dplyr'  ## The following objects are masked from 'package:stats': ##  ##     filter, lag  ## The following objects are masked from 'package:base': ##  ##     intersect, setdiff, setequal, union </code></pre>
<pre><code># Read in data  # miRNA-mRNA Pearsons correlation coefficients miRNA_mRNA_PCC &lt;- read.csv("../output/09-Apul-mRNA-miRNA-interactions/Apul-PCC_miRNA_mRNA.csv")  # miRNA-mRNA_full miRanda output miRNA_mRNA_miRanda &lt;- read_delim("../output/24-Apul-miRanda-input-comparisons/Apul-miRanda-mRNA_full-strict-parsed.txt", col_names=FALSE)</code></pre>
<pre><code>## Rows: 617982 Columns: 9  ## ── Column specification ──────────────────────────────────────────────────────── ## Delimiter: "\t" ## chr (6): X1, X2, X5, X6, X8, X9 ## dbl (3): X3, X4, X7 ##  ## ℹ Use `spec()` to retrieve the full column specification for this data. ## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. </code></pre>
<pre><code>colnames(miRNA_mRNA_miRanda) &lt;- c("mirna", "Target", "Score", "Energy_Kcal_Mol", "Query_Aln", "Subject_Aln", "Al_Len", "Subject_Identity", "Query_Identity")  # format miRNA and mRNA names geneIDs &lt;- read_delim("../output/15-Apul-annotate-UTRs/Apul-mRNA-FUNids.txt", col_names=FALSE)</code></pre>
<pre><code>## Rows: 36447 Columns: 5 ## ── Column specification ──────────────────────────────────────────────────────── ## Delimiter: "\t" ## chr (5): X1, X2, X3, X4, X5 ##  ## ℹ Use `spec()` to retrieve the full column specification for this data. ## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. </code></pre>
<pre><code>geneIDs$X4 &lt;- gsub("Parent=", "", geneIDs$X4)  miRNA_mRNA_miRanda$mirna &lt;- gsub("&gt;", "", miRNA_mRNA_miRanda$mirna) miRNA_mRNA_miRanda$mirna &lt;- gsub("\\..*", "", miRNA_mRNA_miRanda$mirna)  miRNA_mRNA_miRanda &lt;- left_join(miRNA_mRNA_miRanda, geneIDs, by=c("Target" = "X1")) miRNA_mRNA_miRanda &lt;- select(miRNA_mRNA_miRanda, -X2,-X3,-X5)  # Finally, create a column that conatins both the miRNA and interacting mRNA miRNA_mRNA_PCC$interaction &lt;- paste(miRNA_mRNA_PCC$miRNA, "_", miRNA_mRNA_PCC$mRNA) miRNA_mRNA_miRanda$interaction &lt;- paste(miRNA_mRNA_miRanda$mirna, "_", miRNA_mRNA_miRanda$X4)  # Annotate w PCC info  miRNA_mRNA_miRanda &lt;- left_join(miRNA_mRNA_miRanda, miRNA_mRNA_PCC, by="interaction")</code></pre>
<pre><code># Filter to high complementarity putative targets target_21bp &lt;- miRNA_mRNA_miRanda[miRNA_mRNA_miRanda$Al_Len &gt; 20,] target_21bp_3mis &lt;- target_21bp[target_21bp$Subject_Identity&gt;85,]  # How many w significant correlation? nrow(target_21bp %&gt;% filter(p_value &lt; 0.05))</code></pre>
<pre><code>## [1] 3787 </code></pre>
<pre><code>nrow(target_21bp %&gt;% filter(p_value &lt; 0.05))/nrow(target_21bp)</code></pre>
<pre><code>## [1] 0.03722087 </code></pre>
<pre><code>nrow(target_21bp_3mis %&gt;% filter(p_value &lt; 0.05))</code></pre>
<pre><code>## [1] 6 </code></pre>
<pre><code>nrow(target_21bp_3mis %&gt;% filter(p_value &lt; 0.05))/nrow(target_21bp_3mis)</code></pre>
<pre><code>## [1] 0.04195804 </code></pre>
<pre><code># Plot correlation values hist(target_21bp$PCC.cor)</code></pre>
<pre><code>hist(target_21bp[target_21bp$p_value &lt; 0.05,]$PCC.cor)</code></pre>
<pre><code>hist(target_21bp_3mis$PCC.cor)</code></pre>
<pre><code>hist(target_21bp_3mis[target_21bp_3mis$p_value &lt; 0.05,]$PCC.cor)</code></pre>
</section>
<section id="utr" class="level2">
<h2 class="anchored" data-anchor-id="utr">3.2 3'UTR</h2>
<pre><code># Read in data  # miRNA-mRNA_full miRanda output miRNA_3UTR_miRanda &lt;- read_delim("../output/09-Apul-mRNA-miRNA-interactions/miranda_strict_all_1kb_parsed_apul_updated.txt", col_names=FALSE)</code></pre>
<pre><code>## Rows: 6109 Columns: 9 ## ── Column specification ──────────────────────────────────────────────────────── ## Delimiter: "\t" ## chr (6): X1, X2, X5, X6, X8, X9 ## dbl (3): X3, X4, X7 ##  ## ℹ Use `spec()` to retrieve the full column specification for this data. ## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. </code></pre>
<pre><code>colnames(miRNA_3UTR_miRanda) &lt;- c("mirna", "Target", "Score", "Energy_Kcal_Mol", "Query_Aln", "Subject_Aln", "Al_Len", "Subject_Identity", "Query_Identity")  miRNA_3UTR_miRanda$mirna &lt;- gsub("&gt;", "", miRNA_3UTR_miRanda$mirna) miRNA_3UTR_miRanda$mirna &lt;- gsub("\\..*", "", miRNA_3UTR_miRanda$mirna) miRNA_3UTR_miRanda$Target &lt;- gsub("::.*", "", miRNA_3UTR_miRanda$Target)  # Finally, create a column that conatins both the miRNA and interacting mRNA miRNA_3UTR_miRanda$interaction &lt;- paste(miRNA_3UTR_miRanda$mirna, "_", miRNA_3UTR_miRanda$Target)  # Annotate w PCC info  miRNA_3UTR_miRanda &lt;- left_join(miRNA_3UTR_miRanda, miRNA_mRNA_PCC, by="interaction")</code></pre>
<pre><code># Filter to high complementarity putative targets target_3UTR_21bp &lt;- miRNA_3UTR_miRanda[miRNA_3UTR_miRanda$Al_Len &gt; 20,] target_3UTR_21bp_3mis &lt;- target_3UTR_21bp[target_3UTR_21bp$Subject_Identity&gt;85,]  # How many w significant correlation? nrow(target_3UTR_21bp %&gt;% filter(p_value &lt; 0.05))</code></pre>
<pre><code>## [1] 58 </code></pre>
<pre><code>nrow(target_3UTR_21bp %&gt;% filter(p_value &lt; 0.05))/nrow(target_3UTR_21bp)</code></pre>
<pre><code>## [1] 0.03413773 </code></pre>
<pre><code>nrow(target_3UTR_21bp_3mis %&gt;% filter(p_value &lt; 0.05))</code></pre>
<pre><code>## [1] 0 </code></pre>
<pre><code>nrow(target_3UTR_21bp_3mis %&gt;% filter(p_value &lt; 0.05))/nrow(target_3UTR_21bp_3mis)</code></pre>
<pre><code>## [1] 0 </code></pre>
<pre><code># Plot correlation values hist(target_3UTR_21bp$PCC.cor)</code></pre>
<pre><code>hist(target_3UTR_21bp[target_3UTR_21bp$p_value &lt; 0.05,]$PCC.cor)</code></pre>
<pre><code># hist(target_3UTR_21bp_3mis$PCC.cor) # hist(target_3UTR_21bp_3mis[target_3UTR_21bp_3mis$p_value &lt; 0.05,]$PCC.cor)</code></pre>


</section>
</section>

 ]]></description>
  <category>E5-coral</category>
  <guid>https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/2025_02_13_deepdive_miRanda_comparisons.html</guid>
  <pubDate>Thu, 13 Feb 2025 08:00:00 GMT</pubDate>
</item>
<item>
  <title>Deep-dive expression: Gene expression summary (for Hisat gene counts)</title>
  <dc:creator>Kathleen Durkin</dc:creator>
  <link>https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/2025_02_07_deepdive_Apul_Hisat_RNAsummary.html</link>
  <description><![CDATA[ 




<p>Generating update summary of Apul gene expression using counts generated through Hisat with the <em>A.pulchra</em> genome. (Existing summary used counts summarized using kallisto and the <em>A.millipora</em> transcriptome)</p>
<p>Code recorded below in case github links change.</p>
<p><strong>Total gene counts (normalized):</strong></p>
<p><img src="https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/https:/github.com/urol-e5/deep-dive-expression/raw/main/D-Apul/code/03.01-Apul-RNA-summary-Hisat_files/figure-gfm/norm-transcript-counts-plot-1.png" class="img-fluid"></p>
<p><img src="https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/https:/github.com/urol-e5/deep-dive-expression/raw/main/D-Apul/code/03.01-Apul-RNA-summary-Hisat_files/figure-gfm/norm-expression-level-histograms-1.png" class="img-fluid"></p>
<p><img src="https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/https:/github.com/urol-e5/deep-dive-expression/raw/main/D-Apul/code/03.01-Apul-RNA-summary-Hisat_files/figure-gfm/PCA-1.png" class="img-fluid"></p>
<p><img src="https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/https:/github.com/urol-e5/deep-dive-expression/raw/main/D-Apul/code/03.01-Apul-RNA-summary-Hisat_files/figure-gfm/sample-clustering-1.png" class="img-fluid"></p>
<section id="apul-rna-summary-hisat" class="level1">
<h1><a href="https://github.com/urol-e5/deep-dive-expression/blob/main/D-Apul/code/03.01-Apul-RNA-summary-Hisat.md#15-most-common-biological-processes">03.01-Apul-RNA-summary-Hisat</a></h1>
<p>Gene expression summary for <em>Acropora pulchra</em> RNA-seq data.</p>
<ul>
<li><p>trimmed reads generated in <code>deep-dive</code> project, trimming and QC details in <code>01-Apul-RNA-trimming-FastQC</code></p></li>
<li><p>Reads aligned to <em>Acropora pulchra</em> genome (unpub)</p></li>
<li><p>Count matrix generated in <code>07-Apul-Hisat</code></p></li>
</ul>
<section id="install-and-load-packages" class="level3">
<h3 class="anchored" data-anchor-id="install-and-load-packages">0.0.1 Install and load packages</h3>
<pre><code>library(tidyverse) library(ggplot2) library(reshape2) library(magrittr) library(DESeq2) library(RColorBrewer) library(pheatmap)</code></pre>
</section>
</section>
<section id="unnormalized-data" class="level1">
<h1>1 Unnormalized data</h1>
<section id="load-count-data" class="level2">
<h2 class="anchored" data-anchor-id="load-count-data">1.1 Load count data</h2>
<p>Load in and format the count matrix.</p>
<pre><code># Read in counts data. This is a gene-level counts matrix generated from kallisto transcript abundances using Trinity Apul_counts_RNA_OG &lt;- read_delim("../output/07-Apul-Hisat/Apul-gene_count_matrix.csv")  head(Apul_counts_RNA_OG)</code></pre>
<pre><code># A tibble: 6 × 6   gene_id  `RNA-ACR-140` `RNA-ACR-145` `RNA-ACR-150` `RNA-ACR-173` `RNA-ACR-178`   &lt;chr&gt;            &lt;dbl&gt;         &lt;dbl&gt;         &lt;dbl&gt;         &lt;dbl&gt;         &lt;dbl&gt; 1 FUN_035…           553           340           256           485           510 2 FUN_035…          2486           775           743          1250          1092 3 FUN_035…            46             6            25            41            29 4 FUN_035…           183           252            48            78            73 5 FUN_035…          1519           311           555           990           370 6 FUN_035…          1764          1297          1035          1763          1360 </code></pre>
<pre><code># Read in ID mapping of A.pulchra mRNA and associated functional annotations Apul_IDmapping &lt;- read_delim("../output/02-Apul-reference-annotation/Apulcra-genome-mRNA-IDmapping-2024_12_12.tab") %&gt;%   select(-...1) head(Apul_IDmapping)</code></pre>
<pre><code># A tibble: 6 × 7   V1                V3         V13 Protein.names Organism Gene.Ontology..biolo…¹   &lt;chr&gt;             &lt;chr&gt;    &lt;dbl&gt; &lt;chr&gt;         &lt;chr&gt;    &lt;chr&gt;                  1 ntLink_4:1155-15… P350… 4.96e-86 Histone H2A   Acropor… &lt;NA&gt;                   2 ntLink_4:2660-34… P842… 5.03e-93 Histone H3    Urechis… &lt;NA&gt;                   3 ntLink_4:4515-68… P350… 6.65e-78 Histone H2A   Acropor… &lt;NA&gt;                   4 ntLink_4:7096-78… P842… 4.03e-93 Histone H3    Urechis… &lt;NA&gt;                   5 ntLink_4:8474-96… P350… 7.49e-82 Histone H2A   Acropor… &lt;NA&gt;                   6 ntLink_4:11162-1… P842… 4.03e-93 Histone H3    Urechis… &lt;NA&gt;                   # ℹ abbreviated name: ¹​Gene.Ontology..biological.process. # ℹ 1 more variable: Gene.Ontology.IDs &lt;chr&gt; </code></pre>
<pre><code># Read in table that associates each mRNA genomic location with it's gene ID Apul_geneIDs &lt;- read_delim("../output/15-Apul-annotate-UTRs/Apul-mRNA-FUNids.txt", col_names = FALSE) %&gt;%   select(X1,X4) Apul_geneIDs$X4 &lt;- gsub("Parent=","",Apul_geneIDs$X4) head(Apul_geneIDs)</code></pre>
<pre><code># A tibble: 6 × 2   X1                   X4           &lt;chr&gt;                &lt;chr&gt;      1 ntLink_0:1104-7056   FUN_000001 2 ntLink_0:10214-15286 FUN_000002 3 ntLink_0:32056-33275 FUN_000003 4 ntLink_0:34823-42794 FUN_000004 5 ntLink_0:45952-51024 FUN_000005 6 ntLink_0:61628-78213 FUN_000006 </code></pre>
</section>
<section id="count-data-munging" class="level2">
<h2 class="anchored" data-anchor-id="count-data-munging">1.2 Count data munging</h2>
<pre><code># We need to modify this data frame so that the row names are actually row names, instead of comprising the first column Apul_counts_RNA &lt;- Apul_counts_RNA_OG %&gt;%   column_to_rownames(var = "gene_id")  # Additional formatting # Round all estimated counts to integers Apul_counts_RNA &lt;- round(Apul_counts_RNA, digits = 0)  # Remove all transcripts with 5 or fewer counts in all samples Apul_counts_RNA &lt;- Apul_counts_RNA[!apply(Apul_counts_RNA, 1, function(row) all(row &lt; 6)), ]  # Remove the "RNA-" portion of the column names, to leave just the sample names colnames(Apul_counts_RNA) &lt;- sub("RNA-", "", colnames(Apul_counts_RNA))  # Reorder the columns into alphabetical order (to make it easier to create an associated metadata spreadsheet) Apul_counts_RNA &lt;- Apul_counts_RNA[, order(colnames(Apul_counts_RNA))]  write.table(Apul_counts_RNA, file = "../output/03.01-Apul-RNA-summary-Hisat/Apul_RNA_Hisat_counts_formatted.txt", row.names = TRUE, col.names = TRUE)  Apul_sample_names &lt;- names(Apul_counts_RNA)  head(Apul_counts_RNA)</code></pre>
<pre><code>           ACR-140 ACR-145 ACR-150 ACR-173 ACR-178 FUN_035039     553     340     256     485     510 FUN_035038    2486     775     743    1250    1092 FUN_035031      46       6      25      41      29 FUN_035030     183     252      48      78      73 FUN_035033    1519     311     555     990     370 FUN_035032    1764    1297    1035    1763    1360 </code></pre>
<pre><code>Apul_sample_names</code></pre>
<pre><code>[1] "ACR-140" "ACR-145" "ACR-150" "ACR-173" "ACR-178" </code></pre>
<pre><code># Add gene IDs to the IDmapping Apul_IDmapping &lt;- left_join(Apul_IDmapping, Apul_geneIDs, by = c("V1" = "X1"))  Apul_counts_GO &lt;- Apul_counts_RNA %&gt;%   rownames_to_column(var = "geneID") %&gt;%   left_join(Apul_IDmapping, by = c("geneID" = "X4"))  write.table(Apul_counts_GO, "../output/03.01-Apul-RNA-summary-Hisat/Apul_RNA_Hisat_counts_formatted.txt", sep = '\t', row.names = TRUE, col.names = TRUE, quote = FALSE)  head(Apul_counts_GO)</code></pre>
<pre><code>      geneID ACR-140 ACR-145 ACR-150 ACR-173 ACR-178                         V1 1 FUN_035039     553     340     256     485     510                       &lt;NA&gt; 2 FUN_035038    2486     775     743    1250    1092                       &lt;NA&gt; 3 FUN_035031      46       6      25      41      29                       &lt;NA&gt; 4 FUN_035030     183     252      48      78      73 ptg000025l:3084856-3086902 5 FUN_035033    1519     311     555     990     370                       &lt;NA&gt; 6 FUN_035032    1764    1297    1035    1763    1360                       &lt;NA&gt;           V3      V13 Protein.names Organism Gene.Ontology..biological.process. 1       &lt;NA&gt;       NA          &lt;NA&gt;     &lt;NA&gt;                               &lt;NA&gt; 2       &lt;NA&gt;       NA          &lt;NA&gt;     &lt;NA&gt;                               &lt;NA&gt; 3       &lt;NA&gt;       NA          &lt;NA&gt;     &lt;NA&gt;                               &lt;NA&gt; 4 A0A2B4RNI3 2.04e-25          &lt;NA&gt;     &lt;NA&gt;                               &lt;NA&gt; 5       &lt;NA&gt;       NA          &lt;NA&gt;     &lt;NA&gt;                               &lt;NA&gt; 6       &lt;NA&gt;       NA          &lt;NA&gt;     &lt;NA&gt;                               &lt;NA&gt;   Gene.Ontology.IDs 1              &lt;NA&gt; 2              &lt;NA&gt; 3              &lt;NA&gt; 4              &lt;NA&gt; 5              &lt;NA&gt; 6              &lt;NA&gt; </code></pre>
</section>
<section id="expression-levels" class="level2">
<h2 class="anchored" data-anchor-id="expression-levels">1.3 Expression levels</h2>
<p>Plot histograms of the expression levels in each sample</p>
<pre><code># Melt the count matrix into long format Apul_counts_melted &lt;- melt(Apul_counts_RNA, variable.name = "sample", value.name = "counts")  # Plot the expression level histograms for each sample ggplot(Apul_counts_melted, aes(x = counts)) +   geom_histogram(binwidth = 1, fill = "#408EC6", color = "black") +   scale_x_log10() +  # Optional: Log-transform the x-axis for better visualization   facet_wrap(~sample, scales = "free_y") +   labs(title = "Gene Expression Level Histogram for Each Sample",        x = "Expression Level (Counts)",        y = "Frequency") +   theme_minimal()</code></pre>
</section>
<section id="transcript-counts" class="level2">
<h2 class="anchored" data-anchor-id="transcript-counts">1.4 Transcript counts</h2>
<p>First let’s check the total number of transcripts in each sample – keep in mind this expression data has <em>not</em> been normalized yet, so there may be different totals for each sample</p>
<pre><code># Calculate the total number of transcripts for each sample total_transcripts &lt;- colSums(Apul_counts_RNA)  # Create a data frame for plotting total_transcripts_df &lt;- data.frame(sample = names(total_transcripts),                                    totals = total_transcripts)  # Plot the total number of transcripts for each sample ggplot(total_transcripts_df, aes(x = sample, y = totals)) +   geom_bar(stat = "identity", fill = "#408EC6", color = "black") +   labs(title = "Total Number of Transcripts per Sample",        x = "Sample",        y = "Total Transcripts") +   theme_minimal() +   theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotate x-axis labels for readability</code></pre>
<p>Now let’s check the number of unique transcripts in each sample – that is, how many genes are expressed in each sample? This should be pretty much the same across samples, even without normalization.</p>
<pre><code># Calculate the number of unique transcripts (non-zero counts) for each sample unique_transcripts &lt;- colSums(Apul_counts_RNA &gt; 0)  # Create a data frame for plotting unique_transcripts_df &lt;- data.frame(sample = names(unique_transcripts),                                     uniques = unique_transcripts)  # Plot the total number of unique transcripts for each sample ggplot(unique_transcripts_df, aes(x = sample, y = uniques)) +   geom_bar(stat = "identity", fill = "#408EC6", color = "black") +   labs(title = "Total Number of Unique Expressed Transcripts per Sample",        x = "Sample",        y = "Unique Transcripts") +   theme_minimal() +   theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotate x-axis labels for readability</code></pre>
</section>
<section id="most-common-biological-processes" class="level2">
<h2 class="anchored" data-anchor-id="most-common-biological-processes">1.5 Most common biological processes</h2>
<p>Similar to the plot generated in <code>02-Apul-reference-annotation</code>, let’s plot the biological processes most represented in these samples’ expression</p>
<pre><code># Rename the `Gene.Ontology..biological.process.` column to `Biological_Process` colnames(Apul_counts_GO)[colnames(Apul_counts_GO) == "Gene.Ontology..biological.process."] &lt;- "Biological_Process"  # Separate the `Biological_Process` column into individual biological processes data_separated &lt;- unlist(strsplit(Apul_counts_GO$Biological_Process, split = ";"))  # Trim whitespace from the biological processes data_separated &lt;- gsub("^\\s+|\\s+$", "", data_separated)  # Count the occurrences of each biological process process_counts &lt;- table(data_separated) process_counts &lt;- data.frame(Biological_Process = names(process_counts), Count = as.integer(process_counts)) process_counts &lt;- process_counts[order(-process_counts$Count), ]  # Select the 20 most predominant biological processes top_20_processes &lt;- process_counts[1:20, ]  # Create a color palette for the bars bar_colors &lt;- rainbow(nrow(top_20_processes))  # Create a staggered vertical bar plot with different colors for each bar barplot(top_20_processes$Count, names.arg = rep("", nrow(top_20_processes)), col = bar_colors,         ylim = c(0, max(top_20_processes$Count) * 1.25),         main = "Occurrences of the 20 Most Predominant Biological Processes", xlab = "Biological Process", ylab = "Count")</code></pre>
<pre><code># Create a separate plot for the legend png("../output/03.01-Apul-RNA-summary-Hisat/GOlegend.png", width = 800, height = 600) par(mar = c(0, 0, 0, 0)) plot.new() legend("center", legend = top_20_processes$Biological_Process, fill = bar_colors, cex = 1, title = "Biological Processes") dev.off()</code></pre>
<pre><code>png    2  </code></pre>
<pre><code>knitr::include_graphics("../output/03.01-Apul-RNA-summary-Hisat/GOlegend.png")</code></pre>
<pre><code>rm ../output/03.01-Apul-RNA-summary-Hisat/GOlegend.png</code></pre>
</section>
</section>
<section id="normalized-counts" class="level1">
<h1>2 Normalized counts</h1>
<section id="normalize-counts-with-deseq2" class="level2">
<h2 class="anchored" data-anchor-id="normalize-counts-with-deseq2">2.1 Normalize counts with DESeq2</h2>
<section id="plot-unnormalized-data" class="level3">
<h3 class="anchored" data-anchor-id="plot-unnormalized-data">2.1.1 Plot unnormalized data</h3>
<pre><code>Apul_counts_RNA %&gt;%   pivot_longer( cols = everything(), names_to = "sample", values_to = "count") %&gt;%   ggplot(., aes(x = sample, y = count)) +   geom_violin() +    geom_point(alpha = 0.2) +   theme_minimal() +   labs(title = "Unnormalized transcript counts",        x = "Sample",        y = "count")</code></pre>
<p>We definitely need to normalize this data!</p>
</section>
<section id="metadata" class="level3">
<h3 class="anchored" data-anchor-id="metadata">2.1.2 Metadata</h3>
<p>DESeq2 requires a metadata data frame as input. I don’t have sample metadata though so, since we’re just doing DESeq2 for normalization purposes (not analysis purposes), I’m just going to create a dummy sheet</p>
<pre><code>Apul_sample_names &lt;- colnames(Apul_counts_RNA)  Apul_metadata_RNA &lt;- data.frame(Sample = Apul_sample_names,                             Species = rep("A.pulchra", 5)) rownames(Apul_metadata_RNA) &lt;- Apul_sample_names  head(Apul_metadata_RNA)</code></pre>
<pre><code>         Sample   Species ACR-140 ACR-140 A.pulchra ACR-145 ACR-145 A.pulchra ACR-150 ACR-150 A.pulchra ACR-173 ACR-173 A.pulchra ACR-178 ACR-178 A.pulchra </code></pre>
</section>
<section id="deseq-object" class="level3">
<h3 class="anchored" data-anchor-id="deseq-object">2.1.3 DESeq object</h3>
<pre><code># Calculate DESeq object dds_Apul_RNA &lt;- DESeqDataSetFromMatrix(countData = Apul_counts_RNA,                               colData = Apul_metadata_RNA,                               design = ~ 1)   # Run differential expression analysis  # (Note that this DESeq() function runs all necessary steps, including data normalization,  # estimating size factors, estimating dispersions, gene-wise dispersion estimates, mean-dispersion  # relationship, final dispersion estimates, fitting model, and testing) # Using design = ~1 because we don't have treatment groups  dds_Apul_RNA &lt;- DESeq(dds_Apul_RNA)</code></pre>
<p>It’s worth noting here that I’m actually going to be doing two different types of transformation on the counts data, which serve different purposes.</p>
<ul>
<li><p>First is <strong>normalizing</strong> the transcript counts, which adjusts for differences in library size or sequencing depth, but retains count-like properties. Normalized counts are most useful for things like visualizing expression levels and differential expression analysis.</p></li>
<li><p>Second is <strong>variance stabilizing</strong> the counts data, which aims to make the variance of the transformed data approximately independent of the mean, reducing heteroscedasticity (the relationship between variance and mean) and “smoothing” out the variance at low counts. Notably, the transformed data is <em>no longer on the original count scale</em>. The transformation makes the variance roughly constant across the range of counts, which makes it easier to interpret patterns in the data visually. Variance stabilized data is most useful for exploratory data analysis, like PCA, clustering, and heatmaps, and is also the transformation we’ll want to use before WGCNA.</p></li>
</ul>
<pre><code># extract normalized counts # (normalization is automatically performed by deseq2) Apul_counts_RNA_norm &lt;- counts(dds_Apul_RNA, normalized=TRUE) %&gt;% data.frame()  write.table(Apul_counts_RNA_norm, file = "../output/03.01-Apul-RNA-summary-Hisat/Apul_counts_RNA_normalized.txt", sep = "\t", row.names = TRUE, col.names = TRUE, quote = FALSE)   # variance stabilized data vsd_Apul_RNA &lt;- varianceStabilizingTransformation(dds_Apul_RNA, blind=TRUE) wpn_vsd_Apul_RNA &lt;- getVarianceStabilizedData(dds_Apul_RNA) rv_wpn_Apul_RNA &lt;- rowVars(wpn_vsd_Apul_RNA, useNames=TRUE)  Apul_counts_RNA_vsd &lt;- data.frame(wpn_vsd_Apul_RNA) write.table(Apul_counts_RNA_vsd, file = "../output/03.01-Apul-RNA-summary-Hisat/Apul_counts_RNA_variancestabilized.txt", sep = "\t", row.names = TRUE, col.names = TRUE,quote = FALSE)  q75_wpn_Apul_RNA &lt;- quantile(rowVars(wpn_vsd_Apul_RNA, useNames=TRUE), .75)  # 75th quantile variability Apul_counts_RNA_vsd_q75 &lt;- wpn_vsd_Apul_RNA[ rv_wpn_Apul_RNA &gt; q75_wpn_Apul_RNA, ] %&gt;% data.frame # filter to retain only the most variable genes write.table(Apul_counts_RNA_vsd_q75, file = "../output/03.01-Apul-RNA-summary-Hisat/Apul_counts_RNA_variancestabilized_q75.txt", sep = "\t", row.names = TRUE, col.names = TRUE,quote = FALSE)  q95_wpn_Apul_RNA &lt;- quantile(rowVars(wpn_vsd_Apul_RNA, useNames=TRUE), .95)  # 95th quantile variability Apul_counts_RNA_vsd_q95 &lt;- wpn_vsd_Apul_RNA[ rv_wpn_Apul_RNA &gt; q95_wpn_Apul_RNA, ] %&gt;% data.frame # filter to retain only the most variable genes write.table(Apul_counts_RNA_vsd_q95, file = "../output/03.01-Apul-RNA-summary-Hisat/Apul_counts_RNA_variancestabilized_q95.txt", sep = "\t", row.names = TRUE, col.names = TRUE,quote = FALSE)</code></pre>
</section>
</section>
<section id="plot-normalized-data" class="level2">
<h2 class="anchored" data-anchor-id="plot-normalized-data">2.2 Plot normalized data</h2>
<pre><code>Apul_counts_RNA_norm_long &lt;- Apul_counts_RNA_norm %&gt;%   mutate(     Gene_id = row.names(Apul_counts_RNA_norm)   ) %&gt;%   pivot_longer(-Gene_id)  Apul_counts_RNA_norm_long %&gt;%   ggplot(., aes(x = name, y = value)) +   geom_violin() +   geom_point() +   theme_bw() +   theme(     axis.text.x = element_text( angle = 90)   ) +   ylim(0, NA) +   labs(     title = "Normalized Expression",     x = "Sample",     y = "Normalized counts"   )</code></pre>
</section>
<section id="plot-variance-stabilized-data" class="level2">
<h2 class="anchored" data-anchor-id="plot-variance-stabilized-data">2.3 Plot variance stabilized data</h2>
<pre><code>Apul_counts_RNA_vsd_long &lt;- Apul_counts_RNA_vsd %&gt;%   mutate(     Gene_id = row.names(Apul_counts_RNA_vsd)   ) %&gt;%   pivot_longer(-Gene_id)  Apul_counts_RNA_vsd_long %&gt;%   ggplot(., aes(x = name, y = value)) +   geom_violin() +   geom_point() +   theme_bw() +   theme(     axis.text.x = element_text( angle = 90)   ) +   ylim(0, NA) +   labs(     title = "Variance Stabilized Expression",     x = "Sample",     y = "Variance stabilized data"   )</code></pre>
</section>
<section id="normalized-expression-levels" class="level2">
<h2 class="anchored" data-anchor-id="normalized-expression-levels">2.4 Normalized expression levels</h2>
<p>Plot histograms of the normalized expression levels in each sample</p>
<pre><code># Melt the count matrix into long format Apul_counts_norm_melted &lt;- melt(Apul_counts_RNA_norm, variable.name = "sample", value.name = "counts")  # Plot the expression level histograms for each sample ggplot(Apul_counts_norm_melted, aes(x = counts)) +   geom_histogram(binwidth = 1, fill = "#408EC6", color = "black") +   scale_x_log10() +  # Optional: Log-transform the x-axis for better visualization   facet_wrap(~sample, scales = "free_y") +   labs(title = "Gene Expression Level Histogram for Each Sample",        x = "Expression Level (Counts)",        y = "Frequency") +   theme_minimal()</code></pre>
</section>
<section id="normalized-transcript-counts" class="level2">
<h2 class="anchored" data-anchor-id="normalized-transcript-counts">2.5 Normalized transcript counts</h2>
<p>Check the total number of transcripts in each sample – now that we’ve normalized the data these totals should be similar</p>
<pre><code># Calculate the total number of transcripts for each sample total_transcripts_norm &lt;- colSums(Apul_counts_RNA_norm)  # Create a data frame for plotting total_transcripts_norm_df &lt;- data.frame(sample = names(total_transcripts_norm),                                    totals = total_transcripts_norm)  # Plot the total number of transcripts for each sample ggplot(total_transcripts_norm_df, aes(x = sample, y = totals)) +   geom_bar(stat = "identity", fill = "#408EC6", color = "black") +   labs(title = "Total Number of Transcripts per Sample",        x = "Sample",        y = "Total Transcripts") +   theme_minimal() +   theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotate x-axis labels for readability</code></pre>
</section>
<section id="pca-of-variance-stabilized-data" class="level2">
<h2 class="anchored" data-anchor-id="pca-of-variance-stabilized-data">2.6 PCA of variance stabilized data</h2>
<pre><code>plotPCA(vsd_Apul_RNA, intgroup="Sample")</code></pre>
</section>
<section id="sample-clustering" class="level2">
<h2 class="anchored" data-anchor-id="sample-clustering">2.7 Sample clustering</h2>
<pre><code>sample_dists &lt;- dist(t(assay(vsd_Apul_RNA))) pheatmap(as.matrix(sample_dists), clustering_distance_rows = "euclidean",           clustering_distance_cols = "euclidean", main="Sample Clustering")</code></pre>
</section>
<section id="heatmaps" class="level2">
<h2 class="anchored" data-anchor-id="heatmaps">2.8 Heatmaps</h2>
<p>Of most variable variance stabilized genes</p>
<pre><code># 75th quantile heat_colors &lt;- rev(brewer.pal(12, "RdYlBu")) pheatmap(Apul_counts_RNA_vsd_q75,           cluster_rows = TRUE,          cluster_cols = TRUE,          show_rownames = TRUE,          show_colnames = TRUE,          color = heat_colors,          scale="row")</code></pre>
<pre><code># 95th quantile pheatmap(Apul_counts_RNA_vsd_q95,           cluster_rows = TRUE,          cluster_cols = TRUE,          show_rownames = TRUE,          show_colnames = TRUE,          color = heat_colors,          scale="row")</code></pre>


</section>
</section>

 ]]></description>
  <category>E5-coral</category>
  <guid>https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/2025_02_07_deepdive_Apul_Hisat_RNAsummary.html</guid>
  <pubDate>Fri, 07 Feb 2025 08:00:00 GMT</pubDate>
</item>
<item>
  <title>Deep-dive expression: A.pul miRNA methylation machinery</title>
  <dc:creator>Kathleen Durkin</dc:creator>
  <link>https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/2025_02_07_deepdive_methyl_machinery.html</link>
  <description><![CDATA[ 




<section id="apul-mirna-methylation-machinery" class="level1">
<h1><a href="https://github.com/urol-e5/deep-dive-expression/blob/main/D-Apul/code/23-Apul-miRNA-methylation-machinery.md"><strong>23-Apul-miRNA-methylation-machinery</strong></a></h1>
<p>One way miRNAs and DNA methylation can interact to influence expression is through miRNAs influencing the transcription/translation of protein machinery involved in DNA methylation. In humans, this has been identified as a potential mechanism of carcinogenisis! (Reviewed in Karimzadeh et al.&nbsp;(2021))</p>
<section id="which-genes-are-involved-in-dna-methylation" class="level2">
<h2 class="anchored" data-anchor-id="which-genes-are-involved-in-dna-methylation"><strong>Which genes are involved in DNA methylation?</strong></h2>
<p>“DNA methylation machinery is composed of several enzymes to accurately regulate the gene expression together. The main enzyme-encoding genes comprise a small family of DNA cytosine-5 methyltransferase, which are involved in established (DNA methyltransferase 3 alpha (DNMT3A) and DNA methyltransferase 3 beta (DNMT3B)) and maintenance (DNMT1) of methylation patterns. The other genes are methyl-CpG-binding proteins (MBPs; methyl-CpG-binding domain (MBD)1–4, methyl-CpG-binding protein 2 (MECP2), UHRF1/2, ZBTB33, ZBTB4, and ZBTB38) that assist in expression repression and 10–11 translocation (TET) enzymes (TET1, TET2, and TET3); seemingly, are implicated in DNA demethylation10,11. Some experiments demonstrated that, based on the importance of oncogenes and/or tumor suppressor genes alterations in the development of each type of cancer, DNA methylation regulator genes may enhance or suppress cancer development in each specific type of cancer12,13,14,15,16.” Karimzadeh et al.&nbsp;(2021)</p>
<p>So we’re looking for miRNAs that target genes encoding: - DNA methyltransferases (DNMTs) - methyl-CpG-binding proteins - 10–11 translocation (TET) enzymes</p>
<p>First let’s see what a quick search of our annotated A.pulchra genome turns up. I want to find any annotations related to DNA methyltransferase</p>
<pre><code> awk -F'\t' '$5 ~ /methyltransferase/ {print $2, $5}' OFS='\t' \ ../output/02-Apul-reference-annotation/Apulcra-genome-mRNA-IDmapping-2024_12_12.tab \ | grep "DNA"</code></pre>
<pre><code>## "ntLink_8:23126215-23133100" "DNA methyltransferase 1-associated protein 1 (DNMAP1) (DNMT1-associated protein 1)" ## "ptg000001l:8684194-8690468" "Alkylated DNA repair protein alkB homolog 8 (Probable alpha-ketoglutarate-dependent dioxygenase ABH8) (S-adenosyl-L-methionine-dependent tRNA methyltransferase ABH8) (tRNA (carboxymethyluridine(34)-5-O)-methyltransferase ABH8) (EC 2.1.1.-, EC 2.1.1.229)" ## "ptg000001l:8684194-8690468" "Alkylated DNA repair protein alkB homolog 8 (Probable alpha-ketoglutarate-dependent dioxygenase ABH8) (S-adenosyl-L-methionine-dependent tRNA methyltransferase ABH8) (tRNA (carboxymethyluridine(34)-5-O)-methyltransferase ABH8) (EC 2.1.1.-, EC 2.1.1.229)" ## "ptg000023l:4341384-4351489" "N(6)-adenine-specific methyltransferase METTL4 (Methyltransferase-like protein 4) (N(6)-adenine-specific DNA methyltransferase METTL4) (EC 2.1.1.72) (snRNA (2'-O-methyladenosine-N(6)-)-methyltransferase METTL4) (EC 2.1.1.-)" ## "ptg000023l:30502755-30503307"   "Methylated-DNA--protein-cysteine methyltransferase (EC 2.1.1.63) (6-O-methylguanine-DNA methyltransferase) (MGMT) (O-6-methylguanine-DNA-alkyltransferase)" ## "ptg000047l:7043865-7069644" "DNA (cytosine-5)-methyltransferase 1 (Dnmt1) (EC 2.1.1.37) (DNA methyltransferase GgaI) (DNA MTase GgaI) (M.GgaI) (MCMT)" ## "ptg000047l:7043865-7069644" "DNA (cytosine-5)-methyltransferase 1 (Dnmt1) (EC 2.1.1.37) (DNA methyltransferase GgaI) (DNA MTase GgaI) (M.GgaI) (MCMT)" ## "ptg000047l:7043865-7069644" "DNA (cytosine-5)-methyltransferase 1 (Dnmt1) (EC 2.1.1.37) (DNA methyltransferase GgaI) (DNA MTase GgaI) (M.GgaI) (MCMT)"</code></pre>
<p>There’s definitely DNMT machinery genes anontated in our A.pulchra genome (as expected)! Now let’s create a data frame that associated each annotated mRNA with it’s gene ID (i.e.&nbsp;FUN######) and do a more broad search for different machinery involved in methylation</p>
<pre><code># Read in data mRNA_annot &lt;- read.table("../output/02-Apul-reference-annotation/Apulcra-genome-mRNA-IDmapping-2024_12_12.tab", header=TRUE, sep='\t') %&gt;% select(-X) mRNA_geneIDs &lt;- read.table("../output/15-Apul-annotate-UTRs/Apul-mRNA-FUNids.txt", header=FALSE, sep='\t')  # Join mRNA_annot_geneID &lt;- left_join(mRNA_annot, mRNA_geneIDs, by="V1") mRNA_annot_geneID$V4 &lt;- gsub("Parent=", "", mRNA_annot_geneID$V4)  # To double-check that this worked correctly, check for NAs in the column containing gene IDs # Every mRNA has a gene ID, so this should return FALSE any(is.na(mRNA_annot_geneID$V3.y))</code></pre>
<pre><code>## [1] FALSE</code></pre>
<p>Now let’s select genes that encode different protein machinery relevant to DNA methylation</p>
<pre><code>methyl_machinery &lt;- subset(mRNA_annot_geneID,                             (grepl("methyltransferase", mRNA_annot_geneID$Protein.names)                              &amp; grepl("DNA", mRNA_annot_geneID$Protein.names))                            | grepl("DNMT", mRNA_annot_geneID$Protein.names)                            | grepl("Dnmt", mRNA_annot_geneID$Protein.names)                            | grepl("MBP", mRNA_annot_geneID$Protein.names)                            | grepl("MBD", mRNA_annot_geneID$Protein.names)                            | grepl("MECP", mRNA_annot_geneID$Protein.names)                            | grepl("UHRF", mRNA_annot_geneID$Protein.names)                            | grepl("ZBTB", mRNA_annot_geneID$Protein.names)                            | grepl("TET", mRNA_annot_geneID$Protein.names)                            )  nrow(methyl_machinery)</code></pre>
<pre><code>## [1] 23</code></pre>
<p>We find 23 mRNAs in our A.pulchra genome that encode known DNA methylation machinery!</p>
<p>Note that I stipulated the term “methyltransferase” must be accompanied by “DNA” also present in the Protein.names column. I imposed this restriction because, when I searched for “methyltransferase” alone, methyltransferases related to histone modification and modification with nucleotides other than cytosine came up.</p>
<p>Now let’s see whether any of these methylation machinery genes are putative miRNA targets, using the output from our target-prediction software, miRanda.</p>
<pre><code>miranda_apul &lt;- read.table("../output/18-Apul-interactions-functional-annotation/miRanda_miRNA_mRNA.txt", header=TRUE, sep='\t')  miranda_methyl_machinery &lt;- left_join(methyl_machinery, miranda_apul, by=c("V4" = "mRNA_FUNid"))  length(na.omit(miranda_apul$miRNA_cluster))</code></pre>
<pre><code>## [1] 6109</code></pre>
<pre><code>length(unique(na.omit(miranda_apul$miRNA_cluster)))</code></pre>
<pre><code>## [1] 39</code></pre>
<pre><code>length(na.omit(miranda_methyl_machinery$miRNA_cluster))</code></pre>
<pre><code>## [1] 0</code></pre>
<pre><code>length(unique(na.omit(miranda_methyl_machinery$miRNA_cluster)))</code></pre>
<pre><code>## [1] 0</code></pre>
<p>Miranda originally identified 6109 putative targets of 39 of our miRNAs, but none of these targets are included in our list of DNA methylation machinery mRNA. :(</p>
<p>So this means that our <strong>A.pulchra miRNAs do not putatively bind to any methylation machinery mRNA</strong> and/or I’m missing some genes in my search.</p>
<p>Karimzadeh, Mohammad Reza, Peyman Pourdavoud, Naeim Ehtesham, Mohaddese Qadbeigi, Masood Movahedi Asl, Behrang Alani, Meysam Mosallaei, and Bahram Pakzad. 2021. “Regulation of DNA Methylation Machinery by Epi-miRNAs in Human Cancer: Emerging New Targets in Cancer Therapy.” <em>Cancer Gene Therapy</em> 28 (3): 157–74. <a href="https://doi.org/10.1038/s41417-020-00210-7" class="uri">https://doi.org/10.1038/s41417-020-00210-7</a>.</p>


</section>
</section>

 ]]></description>
  <category>E5-coral</category>
  <guid>https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/2025_02_07_deepdive_methyl_machinery.html</guid>
  <pubDate>Fri, 07 Feb 2025 08:00:00 GMT</pubDate>
</item>
<item>
  <title>Deep-dive Expression Project Planning</title>
  <dc:creator>Kathleen Durkin</dc:creator>
  <link>https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/2025_01_30_project_planning.html</link>
  <description><![CDATA[ 




<p>Now that we’ve completed a lot of the foundational work for the E5 deep-dive expression project (e.g.&nbsp;sRNA &amp; lncRNA ID, RNA and sRNA expression summaries, preliminary target prediction and coexpression work, etc.), I want to clarify our focus for project completion.</p>
<p><a href="https://github.com/urol-e5/deep-dive-expression">deep-dive-expression repo</a><br>
<a href="https://docs.google.com/document/d/1vlWJiuaxKuh6q6XOBVBrGsZkmf6R_JpJMO6wDIGzdx0/edit?tab=t.0#heading=h.gxujq2yyuafv">manuscript</a><br>
<a href="https://docs.google.com/document/d/1Fdd6xC9tJmAf9Iydcf3er-YwabKmwK3jGVw4ppfxfhM/edit?tab=t.0#heading=h.5xpib71go7rb">project meeting notes</a><br>
<a href="https://docs.google.com/document/d/14WayiHQLe3_5_aS_d4dEZj5mt1DuHvV21JpR4a96uhg/edit?tab=t.0">hypotheses brainstorming document</a></p>
<section id="hypotheses" class="level3">
<h3 class="anchored" data-anchor-id="hypotheses"><strong>Hypotheses:</strong></h3>
<section id="gene-expression-and-srna" class="level4">
<h4 class="anchored" data-anchor-id="gene-expression-and-srna"><strong>Gene expression and sRNA</strong></h4>
<ul>
<li><p>sRNA that bind to genes and are inversely correlated with expression - regulate those genes</p></li>
<li><p>There will be a suite of genes that a sRNA regulates that have similar function</p></li>
<li><p>Some lncRNAs that act as sponges (bind) sRNA will impact gene expression sRNA regulate</p></li>
<li><p>A subset of lncRNAs will regulate mRNA as evident by correlation</p></li>
<li><p>some lncRNAs may act as miRNA precursors – expect they will contain the full pre-miRNA</p></li>
<li><p>Lack of DNA methylation in a given will result in increased alternative isoforms</p></li>
</ul>
</section>
<section id="gene-expression-and-dna-methylation" class="level4">
<h4 class="anchored" data-anchor-id="gene-expression-and-dna-methylation"><strong>Gene expression and DNA methylation</strong></h4>
<ul>
<li><p>Housekeeping genes: positive relationship between expression and GBM</p></li>
<li><p>plastic/environmentally responsive genes: negative relationship between expression and GBM</p></li>
</ul>
</section>
<section id="srna-and-dna-methylation" class="level4">
<h4 class="anchored" data-anchor-id="srna-and-dna-methylation"><strong>sRNA and DNA methylation</strong></h4>
<ul>
<li><p>miRNAs modulate DNA methylation by binding to the mRNA encoding methylation machinery (e.g., DNMTs)</p>
<ul>
<li>For miRNA that target methylation machinery, expect negative relationship miRNA expression and global methylation</li>
</ul></li>
<li><p>siRNA modulate DNA methylation through RNA-directed DNA methylation by binding to genomic region and recruiting protein machinery to direct methylation</p>
<ul>
<li>Expect positive relationship between siRNA binding in a genomic region and methylation of that region</li>
</ul></li>
<li><p>siRNAs could also play a role in guiding DNA methylation to silence transposable elements</p>
<ul>
<li>Expect siRNA binding to TEs</li>
</ul></li>
</ul>
</section>
<section id="gene-expression-and-histones" class="level4">
<h4 class="anchored" data-anchor-id="gene-expression-and-histones"><strong>Gene expression and histones</strong></h4>
</section>
</section>
<section id="data" class="level3">
<h3 class="anchored" data-anchor-id="data"><strong>Data:</strong></h3>
<p><u>RNA sequencing</u></p>
<ul>
<li><p>gene expression</p></li>
<li><p>lncRNA ID &amp; expression</p></li>
</ul>
<p><u>sRNA sequencing</u></p>
<ul>
<li><p>miRNA ID &amp; expression</p></li>
<li><p>siRNA ID &amp; expression</p></li>
<li><p>piRNA ID &amp; expression (if desired)</p></li>
</ul>
<p><u>WGBS (in progress)</u></p>
<ul>
<li>DNA methylation mapping</li>
</ul>
<p>Some H4 data</p>
</section>
<section id="completed-work" class="level3">
<h3 class="anchored" data-anchor-id="completed-work"><strong>Completed work:</strong></h3>
<p>The below summary is for A.pulchra only.</p>
<p>All data processing for RNAseq and sRNAseq (including filtering, trimming, lncRNA ID, sRNA ID, summarizing to count matrices, and functional annotation) has been completed.</p>
<p><strong>genes-ncRNA:</strong></p>
<p>Two methods of miRNA-mRNA target prediction (miRanda and RNAhybrid) have been performed, and the miRanda results have been used in combination with Pearson’s Correlation to generate coexpression/interaction network. This interaction network has also been functionally annotated.</p>
<p><strong>genes-WGBS:</strong></p>
<p>none</p>
<p><strong>ncRNA-WGBS:</strong></p>
<p>I’ve looked for miRNA binding to genes that encode DNA methylation machinery (none found).</p>
<p><strong>other:</strong></p>
<p>Zoe has also run Orthofinder to facilitate cross-species comparisons</p>
</section>
<section id="goalsto-do-general" class="level3">
<h3 class="anchored" data-anchor-id="goalsto-do-general"><strong>Goals/To-Do (general):</strong></h3>
<p><em>Ensure I’m using the SMART framework (SMART: Specific, Measurable, Attainable, Relevant, and Time-bound)</em></p>
<p>Some goals are formulated to directly address one of the hypotheses listed above, and (for now) should be performed on A.pulchra data only.</p>
<ol type="1">
<li><p><em>“sRNA that bind to genes and are inversely correlated with expression - regulate those genes”</em><br>
Use gene-miRNA interaction network to create some basic figures summarizing nature and extent of interactions (e.g.&nbsp;how many genes with how many miRNAs, how many genes does a single RNA usually interact with and vice versa, how many positive vs.&nbsp;negative relationships are there)</p></li>
<li><p><em>“There will be a suite of genes that a sRNA regulates that have similar function”</em><br>
Use functional annotation of the gene-miRNA interaction network to identify putative function of each miRNA based on function of associated genes.</p></li>
<li><p>For predicted miRNA targets, compare functional composition of targets to functional composition of full reference.<br>
(Basically, I want to see whether miRNAs preferentially regulate any functional classes).</p></li>
<li><p>Formally name each miRNA, matching the names assigned during deep-dive when possible.</p></li>
<li><p>If an miRNA is formally described (e.g.&nbsp;mir-100), compare/contrast its described function with the putative function determined during (2)</p></li>
<li><p><em>“Some lncRNAs that act as sponges (bind) sRNA will impact gene expression sRNA regulate”<br>
</em>Use miRanda to predict miRNA-lncRNA binding and evaluate correlated expression of putative binding pairs to generate miRNA-lncRNA interaction network.</p></li>
<li><p><em>“A subset of lncRNAs will regulate mRNA as evident by correlation”</em><br>
Evaluate correlated expression of lncRNA and mRNA.</p></li>
<li><p><em>“some lncRNAs may act as miRNA precursors – expect they will contain the full pre-miRNA”</em><br>
Use BLAST to search for lncRNAs that fully contain pre-miRNA sequences.</p></li>
<li><p>Using simulated WGBS data, prep pipeline to summarize methylation (whole genome methylation levels, GBM/distribution across genome features, etc.)</p></li>
<li><p><em>“Housekeeping genes: positive relationship between expression and GBM”</em> and <em>“plastic/environmentally responsive genes: negative relationship between expression and GBM”</em><br>
Using simulated WGBS data, prep pipeline to delimit genes by function (housekeeping vs.&nbsp;responsive) evaluate relationship of both classes with gene body methylation.</p></li>
<li><p><em>“siRNA modulate DNA methylation through RNA-directed DNA methylation by binding to genomic region and recruiting protein machinery to direct methylation”</em><br>
Use miRanda/RNAhybrid to predict siRNA binding to the genome. Using simulated WGBS data, prep pipeline to test whether siRNA binding is significantly associated with methylation</p></li>
<li><p>siRNAs could also play a role in guiding DNA methylation to silence transposable elements</p>
<p>Use miRanda/RNAhybrid to predict siRNA binding to TEs. Evaluate correlated expression of siRNAs and TEs (expecting a negative relationship).</p></li>
</ol>
<p>Multiomics?</p>
<p>At some point we’ll need to a) replicate these analyses on Peve and Ptuh, and b) run some cross species comparisons</p>
</section>
<section id="goalsplan-for-friday-131-meeting" class="level3">
<h3 class="anchored" data-anchor-id="goalsplan-for-friday-131-meeting"><strong>Goals/Plan for Friday (1/31) meeting:</strong></h3>
<ul>
<li><p>Clarify involvement/role of E5 molecular group members – ensure everyone who is/would like to be involved in deep-dive expression manuscript has something to be working on. Assign out goals/tasks if people</p></li>
<li><p>Define the overarching lens/focus of the manuscript</p></li>
<li><p>Once tasks are assigned to individuals and a rough timeline is selected, add tasks as Github issues</p></li>
<li><p>Add current progress to manuscript?</p></li>
</ul>


</section>

 ]]></description>
  <category>E5-coral</category>
  <guid>https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/2025_01_30_project_planning.html</guid>
  <pubDate>Thu, 30 Jan 2025 08:00:00 GMT</pubDate>
</item>
<item>
  <title>Rerunning ShortStack for deep-dive-expression</title>
  <dc:creator>Kathleen Durkin</dc:creator>
  <link>https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/2024_10_22_shortstack_4.1.0_reruns.html</link>
  <description><![CDATA[ 




<p>We performed sRNA discovery for <em>A. pulchra</em>, <em>P. evermanni</em>, and <em>P. tuahiniensis</em> (formerly identified as <em>P. meandrina</em>) as part of the E5 <code>deep-dive</code> initiative. Notably, we used the <em>A. millipora</em> genome as an alignment reference during <em>A. pulchra</em> sRNA discovery because no <em>A. pulchra</em> genome was available at the time. However, collaborators are have now assembled an <em>A. pulchra</em> genome, so we can rerun sRNA discovery with a better reference for use in the <code>deep-dive-expression</code> project. Additionally, the sRNA discovery tool we decided to use, <a href="https://github.com/MikeAxtell/ShortStack">ShortStack</a> <span class="citation" data-cites="axtell2013">Axtell (2013)</span>, has a new update (v.4.1.0) with functionality for visualizing miRNA hairpin structures and generating genome-browser-ready quantitative coverage tracks of aligned small RNAs. These new features could prove useful, so I’m just rerunning ShortStack for all three species, using the <em>pulchra</em> genome for <em>A. pulchra</em> discovery and ShortStack 4.1.0 for all three.</p>
<p><u><strong>Original <code>deep-dive</code> sRNA discovery, using ShortStack 4.0.3 (for reference):</strong></u></p>
<p>A. pulchra (using A. millipora genome)</p>
<ul>
<li><p><a href="https://github.com/urol-e5/deep-dive/blob/main/D-Apul/code/13.2.1-Apul-sRNAseq-ShortStack-31bp-fastp-merged-cnidarian_miRBase.Rmd">code</a></p></li>
<li><p><a href="https://github.com/urol-e5/deep-dive/blob/main/D-Apul/code/13.2.1-Apul-sRNAseq-ShortStack-31bp-fastp-merged-cnidarian_miRBase.md">knitted .md</a></p></li>
</ul>
<p>P. evermanni</p>
<ul>
<li><p><a href="https://github.com/urol-e5/deep-dive/blob/main/E-Peve/code/08.2-Peve-sRNAseq-ShortStack-31bp-fastp-merged.Rmd">code</a></p></li>
<li><p><a href="https://github.com/urol-e5/deep-dive/blob/main/E-Peve/code/08.2-Peve-sRNAseq-ShortStack-31bp-fastp-merged.md">knitted .md</a></p></li>
</ul>
<p>P. tuahiniensis (identified here as P. meandrina, using P. meandrina genome)</p>
<ul>
<li><p><a href="https://github.com/urol-e5/deep-dive/blob/main/F-Pmea/code/13.2.1-Pmea-sRNAseq-ShortStack-31bp-fastp-merged-cnidarian_miRBase.Rmd">code</a></p></li>
<li><p><a href="https://github.com/urol-e5/deep-dive/blob/main/F-Pmea/code/13.2.1-Pmea-sRNAseq-ShortStack-31bp-fastp-merged-cnidarian_miRBase.md">knitted .md</a></p></li>
</ul>
<p><u><strong><code>deep-dive-expression</code> reruns with ShortStack 4.1.0:</strong></u></p>
<p>A. pulchra (using A. pulchra genome)</p>
<ul>
<li><p><a href="https://github.com/urol-e5/deep-dive-expression/blob/main/D-Apul/code/11-Apul-sRNA-ShortStack_4.1.0-pulchra_genome.Rmd">code</a></p></li>
<li><p><a href="https://github.com/urol-e5/deep-dive-expression/blob/main/D-Apul/code/11-Apul-sRNA-ShortStack_4.1.0-pulchra_genome.md">knitted .md</a></p></li>
</ul>
<p>P. evermanni</p>
<ul>
<li><p><a href="https://github.com/urol-e5/deep-dive-expression/blob/main/E-Peve/code/05-Peve-sRNA-ShortStack_4.1.0.Rmd">code</a></p></li>
<li><p><a href="https://github.com/urol-e5/deep-dive-expression/blob/main/E-Peve/code/05-Peve-sRNA-ShortStack_4.1.0.md">knitted .md</a></p></li>
</ul>
<p>P. tuahiniensis (using P. meandrina genome)</p>
<ul>
<li><p><a href="https://github.com/urol-e5/deep-dive-expression/blob/main/F-Ptuh/code/05-Ptuh-sRNA-ShortStack_4.1.0.Rmd">code</a></p></li>
<li><p><a href="https://github.com/urol-e5/deep-dive-expression/blob/main/F-Ptuh/code/05-Ptuh-sRNA-ShortStack_4.1.0.md">knitted .md</a></p></li>
</ul>
<section id="summary" class="level2">
<h2 class="anchored" data-anchor-id="summary">Summary</h2>
<section id="comparing-original-srna-discovery-to-reruns" class="level3">
<h3 class="anchored" data-anchor-id="comparing-original-srna-discovery-to-reruns">Comparing original sRNA discovery to reruns</h3>
<table class="table">
<caption>A. pulchra</caption>
<colgroup>
<col style="width: 26%">
<col style="width: 27%">
<col style="width: 25%">
<col style="width: 18%">
</colgroup>
<thead>
<tr class="header">
<th></th>
<th style="text-align: right;">ShortStack 4.0.3<br>
(A. millipora genome)</th>
<th style="text-align: right;">ShortStack 4.1.0<br>
(A. pulchra genome)</th>
<th style="text-align: right;">𝚫</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>Potential miRNA loci</td>
<td style="text-align: right;">18895</td>
<td style="text-align: right;">20789</td>
<td style="text-align: right;">+1894 (10%)</td>
</tr>
<tr class="even">
<td>Identified miRNA</td>
<td style="text-align: right;">38</td>
<td style="text-align: right;">39</td>
<td style="text-align: right;">+1 (2.6%)</td>
</tr>
<tr class="odd">
<td>Database matches</td>
<td style="text-align: right;">69</td>
<td style="text-align: right;">131</td>
<td style="text-align: right;">+62 (90%)</td>
</tr>
</tbody>
</table>
<table class="table">
<caption>P. evermanni</caption>
<colgroup>
<col style="width: 29%">
<col style="width: 24%">
<col style="width: 24%">
<col style="width: 20%">
</colgroup>
<thead>
<tr class="header">
<th></th>
<th style="text-align: right;">ShortStack 4.0.3</th>
<th style="text-align: right;">ShortStack 4.1.0</th>
<th style="text-align: right;">𝚫</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>Potential miRNA loci</td>
<td style="text-align: right;">16736</td>
<td style="text-align: right;">16893</td>
<td style="text-align: right;">+157 (0.9%)</td>
</tr>
<tr class="even">
<td>Identified miRNA</td>
<td style="text-align: right;">46</td>
<td style="text-align: right;">45</td>
<td style="text-align: right;">-1 (2.2%)</td>
</tr>
<tr class="odd">
<td>Database matches</td>
<td style="text-align: right;">37</td>
<td style="text-align: right;">38</td>
<td style="text-align: right;">+1 (2.7%)</td>
</tr>
</tbody>
</table>
<table class="table">
<caption>P. tuahniensis</caption>
<colgroup>
<col style="width: 29%">
<col style="width: 24%">
<col style="width: 24%">
<col style="width: 20%">
</colgroup>
<thead>
<tr class="header">
<th></th>
<th style="text-align: right;">ShortStack 4.0.3</th>
<th style="text-align: right;">ShortStack 4.1.0</th>
<th style="text-align: right;">𝚫</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>Potential miRNA loci</td>
<td style="text-align: right;">7220</td>
<td style="text-align: right;">7189</td>
<td style="text-align: right;">-31 (0.4%)</td>
</tr>
<tr class="even">
<td>Identified miRNA</td>
<td style="text-align: right;">37</td>
<td style="text-align: right;">37</td>
<td style="text-align: right;">none</td>
</tr>
<tr class="odd">
<td>Database matches</td>
<td style="text-align: right;">96</td>
<td style="text-align: right;">117</td>
<td style="text-align: right;">+21 (22%)</td>
</tr>
</tbody>
</table>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load necessary library</span></span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(ggplot2)</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>Warning: package 'ggplot2' was built under R version 4.2.3</code></pre>
</div>
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyr)</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>Warning: package 'tidyr' was built under R version 4.2.3</code></pre>
</div>
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create the data frame for all species</span></span>
<span id="cb5-2">miRNA_data <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(</span>
<span id="cb5-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Species =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Apul*"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Peve"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Ptuh"</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">each =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>),</span>
<span id="cb5-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ShortStack_Version =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"4.0.3"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"4.1.0"</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">times =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>),</span>
<span id="cb5-5">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Potential_miRNA_loci =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">18895</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20789</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16736</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16893</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7220</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7189</span>),</span>
<span id="cb5-6">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Identified_miRNA =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">38</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">39</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">46</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">45</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">37</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">37</span>),</span>
<span id="cb5-7">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Database_matches =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">69</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">131</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">37</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">38</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">96</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">117</span>)</span>
<span id="cb5-8">)</span>
<span id="cb5-9"></span>
<span id="cb5-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Reshape the data to long format for facetting</span></span>
<span id="cb5-11">miRNA_long <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pivot_longer</span>(miRNA_data,</span>
<span id="cb5-12">                           <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cols =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Potential_miRNA_loci"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Identified_miRNA"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Database_matches"</span>),</span>
<span id="cb5-13">                           <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">names_to =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Metric"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">values_to =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Value"</span>)</span>
<span id="cb5-14">miRNA_long<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Metric <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">factor</span>(miRNA_long<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Metric, </span>
<span id="cb5-15">                            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">levels =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Potential_miRNA_loci"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Identified_miRNA"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Database_matches"</span>))</span>
<span id="cb5-16"></span>
<span id="cb5-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Facet-wrapped plot for all three metrics</span></span>
<span id="cb5-18"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(miRNA_long, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> Species, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> Value, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> ShortStack_Version)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb5-19">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_bar</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">stat =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"identity"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">position =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dodge"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb5-20">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">facet_wrap</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> Metric, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">scales =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"free_y"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Facet by Metric and allow different y-axis scales</span></span>
<span id="cb5-21">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"miRNA Metrics by Species and ShortStack Version"</span>,</span>
<span id="cb5-22">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Species"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Value"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb5-23"> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># scale_fill_manual(values = c("4.0.3" = "blue", "4.1.0" = "red")) +</span></span>
<span id="cb5-24">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_minimal</span>()</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/2024_10_22_shortstack_4.1.0_reruns_files/figure-html/unnamed-chunk-1-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>*Note, Apul also used a different genome for the v.4.1.0 run</p>
</section>
<section id="structural-visualizations" class="level3">
<h3 class="anchored" data-anchor-id="structural-visualizations">Structural visualizations</h3>
<p>ShortStack 4.1.0 also automatically generates visualizations of the hairpin structure of each identified miRNA, stored as a pdf. As an example, below is the <a href="https://github.com/urol-e5/deep-dive-expression/blob/main/D-Apul/output/11-Apul-sRNA-ShortStack_4.1.0-pulchra_genome/ShortStack_out/strucVis/Cluster_18728.ps.pdf">visualization for A. pulchra Cluster 18728</a>, which was annotated as a valid miRNA and database matched the well-studied miRNA miR-100.<br>
</p>
<p><img src="https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/images/Cluster_18728.ps.jpg" class="img-fluid"></p>



</section>
</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">References</h2><div id="refs" class="references csl-bib-body hanging-indent">
<div id="ref-axtell2013" class="csl-entry">
Axtell, Michael J. 2013. <span>“ShortStack: Comprehensive Annotation and Quantification of Small RNA Genes.”</span> <em>RNA</em> 19 (6): 740–51. <a href="https://doi.org/10.1261/rna.035279.112">https://doi.org/10.1261/rna.035279.112</a>.
</div>
</div></section></div> ]]></description>
  <category>E5-coral</category>
  <guid>https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/2024_10_22_shortstack_4.1.0_reruns.html</guid>
  <pubDate>Tue, 19 Nov 2024 00:20:55 GMT</pubDate>
</item>
<item>
  <title>sRNA expression summaries</title>
  <dc:creator>Kathleen Durkin</dc:creator>
  <link>https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/2024_11_11_updated_sRNA_summaries.html</link>
  <description><![CDATA[ 




<p>I summarized sRNA expression for all three E5 species. This includes summary of both raw and normalized counts of all sRNAs, miRNAs, and siRNAs. sRNA, miRNA, and siRNA identification performed using ShortStack 4.1.0.</p>
<p><a href="https://github.com/urol-e5/deep-dive-expression/tree/main"><code>deep-dive-expression</code> repo</a></p>
<p>Rendered code files:</p>
<ul>
<li><p><a href="https://github.com/urol-e5/deep-dive-expression/blob/main/D-Apul/code/03.1-Apul-sRNA-summary.md">Apul</a></p></li>
<li><p><a href="https://github.com/urol-e5/deep-dive-expression/blob/main/E-Peve/code/03.1-Peve-sRNA-summary.md">Peve</a></p></li>
<li><p><a href="https://github.com/urol-e5/deep-dive-expression/blob/main/F-Ptuh/code/03.1-Ptuh-sRNA-summary.md">Ptuh</a></p></li>
</ul>
<p>This also included generating count matrices for raw, normalized, and variance stabilized counts of all sRNA, just miRNA, and just siRNA.</p>
<p>count matrices:</p>
<ul>
<li><p><a href="https://github.com/urol-e5/deep-dive-expression/tree/main/D-Apul/output/03.1-Apul-sRNA-summary">Apul</a></p></li>
<li><p><a href="https://github.com/urol-e5/deep-dive-expression/tree/main/E-Peve/output/03.1-Peve-sRNA-summary">Peve</a></p></li>
<li><p><a href="https://github.com/urol-e5/deep-dive-expression/tree/main/F-Ptuh/output/03.1-Ptuh-sRNA-summary">Ptuh</a></p></li>
</ul>
<p>As a reminder, normalization and variance stabilization are two different transformations that serve different purposes.</p>
<p><strong>Normalizing</strong> the transcript counts <strong>adjusts for differences in library size</strong> or sequencing depth, but <strong>retains count-like properties</strong>. Normalized counts are most useful for things like visualizing expression levels and differential expression analysis.</p>
<p><strong>Variance stabilization</strong> aims to make the variance of the transformed data approximately independent of the mean, <strong>reducing heteroscedasticity</strong> (the relationship between variance and mean) and “smoothing” out the variance at low counts. Notably, the transformed data is <strong>no longer on the original count scale</strong>. The transformation makes the variance roughly constant across the range of counts, which makes it easier to interpret patterns in the data visually. Variance stabilized data is most useful for exploratory data analysis, like PCA, clustering, and heatmaps, and is also the transformation we’ll want to use before WGCNA.</p>
<p>Here’s some of the figures generated in these summary docs</p>
<section id="total-transcripts-raw" class="level2">
<h2 class="anchored" data-anchor-id="total-transcripts-raw">Total transcripts (raw)</h2>
<p>All sRNA:</p>
<div class="quarto-layout-panel">
<div class="quarto-layout-row quarto-layout-valign-top">
<div class="quarto-layout-cell" style="flex-basis: 33.3%;justify-content: center;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/https:/github.com/urol-e5/deep-dive-expression/raw/main/D-Apul/code/03.1-Apul-sRNA-summary_files/figure-gfm/transcript-counts-plot-1.png" class="img-fluid figure-img" width="400"></p>
<figcaption class="figure-caption">Apul</figcaption>
</figure>
</div>
</div>
<div class="quarto-layout-cell" style="flex-basis: 33.3%;justify-content: center;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/https:/github.com/urol-e5/deep-dive-expression/raw/main/E-Peve/code/03.1-Peve-sRNA-summary_files/figure-gfm/transcript-counts-plot-1.png" class="img-fluid figure-img" width="400"></p>
<figcaption class="figure-caption">Peve</figcaption>
</figure>
</div>
</div>
<div class="quarto-layout-cell" style="flex-basis: 33.3%;justify-content: center;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/https:/github.com/urol-e5/deep-dive-expression/raw/main/F-Ptuh/code/03.1-Ptuh-sRNA-summary_files/figure-gfm/transcript-counts-plot-1.png" class="img-fluid figure-img" width="400"></p>
<figcaption class="figure-caption">Ptuh</figcaption>
</figure>
</div>
</div>
</div>
</div>
<p>miRNA:</p>
<div class="quarto-layout-panel">
<div class="quarto-layout-row quarto-layout-valign-top">
<div class="quarto-layout-cell" style="flex-basis: 33.3%;justify-content: center;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/https:/github.com/urol-e5/deep-dive-expression/raw/main/D-Apul/code/03.1-Apul-sRNA-summary_files/figure-gfm/miRNA-counts-plot-1.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">Apul</figcaption>
</figure>
</div>
</div>
<div class="quarto-layout-cell" style="flex-basis: 33.3%;justify-content: center;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/https:/github.com/urol-e5/deep-dive-expression/raw/main/E-Peve/code/03.1-Peve-sRNA-summary_files/figure-gfm/miRNA-counts-plot-1.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">Peve</figcaption>
</figure>
</div>
</div>
<div class="quarto-layout-cell" style="flex-basis: 33.3%;justify-content: center;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/https:/github.com/urol-e5/deep-dive-expression/raw/main/F-Ptuh/code/03.1-Ptuh-sRNA-summary_files/figure-gfm/miRNA-counts-plot-1.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">Ptuh</figcaption>
</figure>
</div>
</div>
</div>
</div>
<p>siRNA:</p>
<div class="quarto-layout-panel">
<div class="quarto-layout-row quarto-layout-valign-top">
<div class="quarto-layout-cell" style="flex-basis: 33.3%;justify-content: center;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/https:/github.com/urol-e5/deep-dive-expression/raw/main/D-Apul/code/03.1-Apul-sRNA-summary_files/figure-gfm/siRNA-counts-plot-1.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">Peve</figcaption>
</figure>
</div>
</div>
<div class="quarto-layout-cell" style="flex-basis: 33.3%;justify-content: center;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/https:/github.com/urol-e5/deep-dive-expression/raw/main/E-Peve/code/03.1-Peve-sRNA-summary_files/figure-gfm/siRNA-counts-plot-1.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">Peve</figcaption>
</figure>
</div>
</div>
<div class="quarto-layout-cell" style="flex-basis: 33.3%;justify-content: center;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/https:/github.com/urol-e5/deep-dive-expression/raw/main/F-Ptuh/code/03.1-Ptuh-sRNA-summary_files/figure-gfm/siRNA-counts-plot-1.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">Ptuh</figcaption>
</figure>
</div>
</div>
</div>
</div>
</section>
<section id="total-transcripts-normalized" class="level2">
<h2 class="anchored" data-anchor-id="total-transcripts-normalized">Total transcripts (normalized)</h2>
<p>All sRNA:</p>
<div class="quarto-layout-panel">
<div class="quarto-layout-row quarto-layout-valign-top">
<div class="quarto-layout-cell" style="flex-basis: 33.3%;justify-content: center;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/https:/github.com/urol-e5/deep-dive-expression/raw/main/D-Apul/code/03.1-Apul-sRNA-summary_files/figure-gfm/norm-transcript-counts-plot-1.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">Apul</figcaption>
</figure>
</div>
</div>
<div class="quarto-layout-cell" style="flex-basis: 33.3%;justify-content: center;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/https:/github.com/urol-e5/deep-dive-expression/raw/main/E-Peve/code/03.1-Peve-sRNA-summary_files/figure-gfm/norm-transcript-counts-plot-1.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">Peve</figcaption>
</figure>
</div>
</div>
<div class="quarto-layout-cell" style="flex-basis: 33.3%;justify-content: center;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/https:/github.com/urol-e5/deep-dive-expression/raw/main/F-Ptuh/code/03.1-Ptuh-sRNA-summary_files/figure-gfm/norm-transcript-counts-plot-1.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">Ptuh</figcaption>
</figure>
</div>
</div>
</div>
</div>
<p>miRNA:</p>
<div class="quarto-layout-panel">
<div class="quarto-layout-row quarto-layout-valign-top">
<div class="quarto-layout-cell" style="flex-basis: 33.3%;justify-content: center;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/https:/github.com/urol-e5/deep-dive-expression/raw/main/D-Apul/code/03.1-Apul-sRNA-summary_files/figure-gfm/miRNA-norm-transcript-counts-plot-1.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">Apul</figcaption>
</figure>
</div>
</div>
<div class="quarto-layout-cell" style="flex-basis: 33.3%;justify-content: center;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/https:/github.com/urol-e5/deep-dive-expression/raw/main/E-Peve/code/03.1-Peve-sRNA-summary_files/figure-gfm/miRNA-norm-transcript-counts-plot-1.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">Peve</figcaption>
</figure>
</div>
</div>
<div class="quarto-layout-cell" style="flex-basis: 33.3%;justify-content: center;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/https:/github.com/urol-e5/deep-dive-expression/raw/main/F-Ptuh/code/03.1-Ptuh-sRNA-summary_files/figure-gfm/miRNA-norm-transcript-counts-plot-1.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">Ptuh</figcaption>
</figure>
</div>
</div>
</div>
</div>
<p>siRNA:</p>
<div class="quarto-layout-panel">
<div class="quarto-layout-row quarto-layout-valign-top">
<div class="quarto-layout-cell" style="flex-basis: 33.3%;justify-content: center;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/https:/github.com/urol-e5/deep-dive-expression/raw/main/D-Apul/code/03.1-Apul-sRNA-summary_files/figure-gfm/siRNA-norm-transcript-counts-plot-1.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">Apul</figcaption>
</figure>
</div>
</div>
<div class="quarto-layout-cell" style="flex-basis: 33.3%;justify-content: center;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/https:/github.com/urol-e5/deep-dive-expression/raw/main/E-Peve/code/03.1-Peve-sRNA-summary_files/figure-gfm/siRNA-norm-transcript-counts-plot-1.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">Peve</figcaption>
</figure>
</div>
</div>
<div class="quarto-layout-cell" style="flex-basis: 33.3%;justify-content: center;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/https:/github.com/urol-e5/deep-dive-expression/raw/main/F-Ptuh/code/03.1-Ptuh-sRNA-summary_files/figure-gfm/siRNA-norm-transcript-counts-plot-1.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">Ptuh</figcaption>
</figure>
</div>
</div>
</div>
</div>
</section>
<section id="unique-transcripts" class="level2">
<h2 class="anchored" data-anchor-id="unique-transcripts">Unique transcripts</h2>
<p>All sRNA:</p>
<p>Little variation within a species, but quite a large difference among species. Apul specimens expressed ~19,000 unique sRNA transcripts, Peve expressed ~15,700, and Ptuh specimens expressed dramatically fewer at ~6700 unique sRNA transcripts.</p>
<div class="quarto-layout-panel">
<div class="quarto-layout-row quarto-layout-valign-top">
<div class="quarto-layout-cell" style="flex-basis: 33.3%;justify-content: center;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/https:/github.com/urol-e5/deep-dive-expression/raw/main/D-Apul/code/03.1-Apul-sRNA-summary_files/figure-gfm/total-unique-transcripts-plot-1.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">Apul</figcaption>
</figure>
</div>
</div>
<div class="quarto-layout-cell" style="flex-basis: 33.3%;justify-content: center;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/https:/github.com/urol-e5/deep-dive-expression/raw/main/E-Peve/code/03.1-Peve-sRNA-summary_files/figure-gfm/total-unique-transcripts-plot-1.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">Peve</figcaption>
</figure>
</div>
</div>
<div class="quarto-layout-cell" style="flex-basis: 33.3%;justify-content: center;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/https:/github.com/urol-e5/deep-dive-expression/raw/main/F-Ptuh/code/03.1-Ptuh-sRNA-summary_files/figure-gfm/total-unique-transcripts-plot-1.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">Ptuh</figcaption>
</figure>
</div>
</div>
</div>
</div>
<p>miRNA:</p>
<p>Despite the differences in total unique sRNA transcripts, all three species have <strong>similar numbers of unique miRNAs</strong> (though, note our deep-dive exploration showed there is little miRNA overlap among species).</p>
<div class="quarto-layout-panel">
<div class="quarto-layout-row quarto-layout-valign-top">
<div class="quarto-layout-cell" style="flex-basis: 33.3%;justify-content: center;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/https:/github.com/urol-e5/deep-dive-expression/raw/main/D-Apul/code/03.1-Apul-sRNA-summary_files/figure-gfm/total-unique-miRNA-plot-1.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">Apul</figcaption>
</figure>
</div>
</div>
<div class="quarto-layout-cell" style="flex-basis: 33.3%;justify-content: center;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/https:/github.com/urol-e5/deep-dive-expression/raw/main/E-Peve/code/03.1-Peve-sRNA-summary_files/figure-gfm/total-unique-miRNA-plot-1.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">Peve</figcaption>
</figure>
</div>
</div>
<div class="quarto-layout-cell" style="flex-basis: 33.3%;justify-content: center;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/https:/github.com/urol-e5/deep-dive-expression/raw/main/F-Ptuh/code/03.1-Ptuh-sRNA-summary_files/figure-gfm/total-unique-miRNA-plot-1.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">Ptuh</figcaption>
</figure>
</div>
</div>
</div>
</div>
<p>siRNA:</p>
<p>There is again a more noticable difference in numbers of unique siRNAs. <strong>Apul have ~120, Peve ~155, and Ptuh ~90</strong>.</p>
<div class="quarto-layout-panel">
<div class="quarto-layout-row quarto-layout-valign-top">
<div class="quarto-layout-cell" style="flex-basis: 33.3%;justify-content: center;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/https:/github.com/urol-e5/deep-dive-expression/raw/main/D-Apul/code/03.1-Apul-sRNA-summary_files/figure-gfm/total-unique-siRNA-plot-1.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">Apul</figcaption>
</figure>
</div>
</div>
<div class="quarto-layout-cell" style="flex-basis: 33.3%;justify-content: center;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/https:/github.com/urol-e5/deep-dive-expression/raw/main/E-Peve/code/03.1-Peve-sRNA-summary_files/figure-gfm/total-unique-siRNA-plot-1.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">Peve</figcaption>
</figure>
</div>
</div>
<div class="quarto-layout-cell" style="flex-basis: 33.3%;justify-content: center;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/https:/github.com/urol-e5/deep-dive-expression/raw/main/F-Ptuh/code/03.1-Ptuh-sRNA-summary_files/figure-gfm/total-unique-siRNA-plot-1.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">Ptuh</figcaption>
</figure>
</div>
</div>
</div>
</div>


</section>

 ]]></description>
  <category>E5-coral</category>
  <guid>https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/2024_11_11_updated_sRNA_summaries.html</guid>
  <pubDate>Mon, 11 Nov 2024 08:00:00 GMT</pubDate>
</item>
<item>
  <title>Lit Review: Understanding interactions of sRNA and DNA methylation</title>
  <dc:creator>Kathleen Durkin</dc:creator>
  <link>https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/2024_10_01_sRNA_DNA_methylation_interactions.html</link>
  <description><![CDATA[ 







 ]]></description>
  <category>E5-coral</category>
  <guid>https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/2024_10_01_sRNA_DNA_methylation_interactions.html</guid>
  <pubDate>Mon, 28 Oct 2024 22:19:43 GMT</pubDate>
</item>
<item>
  <title>Programs for identifying miRNA targets</title>
  <dc:creator>Kathleen Durkin</dc:creator>
  <link>https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/2024_07_19_mRNA_targetID_programs.html</link>
  <description><![CDATA[ 




<p><a href="https://www.sciencedirect.com/science/article/pii/S0888754322001495#s0055">miRanda</a></p>
<p>Seems like a solid option, seen it cited in <a href="https://www.sciencedirect.com/science/article/pii/S0888754322001495#s0055">coral miRNA paper</a>, and listed in <a href="https://www.ncbi.nlm.nih.gov/pmc/articles/PMC3927079/">review paper</a> <span class="citation" data-cites="peterson_common_2014">Peterson et al. (2014)</span> as one of the OG, more regularly maintained miRNA target prediction programs that takes user sequence input. Most recently updated 2010. Also, available as downloadable software run on linux/unix, so more reproducible than the other main miRNA target prediction softwares which are web based. Only problem is that the miRanda site (<a href="http://www.microrna.org/">www.microrna.org</a>) doesn’t seem to be functional… This is extra weird because the coral miRNA paper that used it was from 2022, which is quite recent.<br>
<br>
<a href="https://bioinformaticsworkbook.org/dataAnalysis/SmallRNA/Miranda_miRNA_Target_Prediction.html#gsc.tab=0">miRanda tutorial</a></p>
<p>Found a <a href="https://regendbase.org/tools/miranda">site</a> that appears to use the miRanda algorithm in a web based tool, and it seems to be functioning normally</p>
<p><img src="https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/images/Screenshot 2024-07-19 165134.png" class="img-fluid"></p>
<p><img src="https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/images/Screenshot 2024-07-19 165241.png" class="img-fluid"></p>
<p>I tried emailing the corresponding authors of the miRanda papers, but I’m not confident I’ll hear back. In the meantime I should also look into R package options, which weren’t really covered in the 2014 review I’ve been referencing.</p>
<section id="mirtarrnaseq" class="level3">




</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">mirTarRnaSeq</h2><div id="refs" class="references csl-bib-body hanging-indent">
<div id="ref-peterson_common_2014" class="csl-entry">
Peterson, Sarah M., Jeffrey A. Thompson, Melanie L. Ufkin, Pradeep Sathyanarayana, Lucy Liaw, and Clare Bates Congdon. 2014. <span>“Common Features of <span class="nocase">microRNA</span> Target Prediction Tools.”</span> <em>Frontiers in Genetics</em> 5 (February): 23. <a href="https://doi.org/10.3389/fgene.2014.00023">https://doi.org/10.3389/fgene.2014.00023</a>.
</div>
</div></section></div> ]]></description>
  <category>E5-coral</category>
  <guid>https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/2024_07_19_mRNA_targetID_programs.html</guid>
  <pubDate>Fri, 19 Jul 2024 07:00:00 GMT</pubDate>
</item>
<item>
  <title>ShortStack: mature vs. star sequences incorrect?</title>
  <dc:creator>Kathleen Durkin</dc:creator>
  <link>https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/2024_06_04_ShortStack_mature_v_star.html</link>
  <description><![CDATA[ 




<p>See <a href="https://github.com/urol-e5/deep-dive/issues/49">E5 deep-dive Github issue #49</a></p>
<p>While looking at ShortStack database matches, for the three species I realized that all three have matches to multiple published sequences of miR-2030, but miR-2030 was not one of the miRNAs identified as conserved between the three species. After poking around I realized that the Apul miR-2030 miRNA and Peve miR-2030 have identical mature miRNA sequences, but the Pmea miR-2030 has a totally different mature sequence. Instead, the <em>star</em> sequence of Pmea miR-2030 matches the mature sequences for Apul miR-2030 and Peve miR-2030. This raises the possibility that ShortStack is incorrectly distinguishing between mature and star sequences, which would throw a bit of a wrench in the current workflow to identify conserved miRNAs. I also noted something similar when <a href="../../../posts/projects/E5_coral/2024_05_17_shortstack_mirdeep2_comparisons.html">comparing ShortStack outputs to the miRdeep2 output</a>.</p>
<p><img src="https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/images/Screenshot (248).png" class="img-fluid"></p>
<p><img src="https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/images/Screenshot (249).png" class="img-fluid"></p>
<p>As a reminder, miRNAs originate as primary miRNA transcripts (“pri-miRNAs”) transcribed from genes, which are characteristically folded in a “hairpin” structure. These pri-miRNAs are then cleaved at their base to form precursor miRNAs (“pre-miRNAs”). The pre-miRNA loop is then removed by Dicer, leaving a mature miRNA duplex. Both of these strands (5’ and 3’) can be loaded into an Argonaute (AGO) protein complex to form an RNA-induced silencing complex (RISC), which then guides gene expression. However, one strand is usually preferentially loaded, in part based on its thermodynamic stability. Strands that are not loaded are unwound from their complement and generally degraded by cellular machinery. The preferentially-loaded strand is commonly titled the “mature miRNA,” while the unloaded strand is commonly called the “miRNA*” or “miRNA star”. Since the AGO-loaded strand (mature miRNA) is the one that actually influences gene expression, this is the strand that is considered important during miRNA identification and analysis. (Summarized from <span class="citation" data-cites="obrien_overview_2018">(O’Brien et al. 2018)</span>)</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/images/miRNA-biogenisis.jpg" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">miRNA biogenisis <span class="citation" data-cites="tomari_microrna_2005">(Tomari and Zamore 2005)</span></figcaption>
</figure>
</div>
<p>It isn’t entirely clear from the ShortStack documentation how it distinguishes between mature and star sequences. What sequence features would indicate one strand is more likely to be loaded on to the RISC complex than the other? In addition, O’Brien et al.&nbsp;(2018) seem to suggest that both the mature and star miRNA molecules could play some role in gene expression – does that mean we should be considering both to be important?</p>




<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">References</h2><div id="refs" class="references csl-bib-body hanging-indent">
<div id="ref-obrien_overview_2018" class="csl-entry">
O’Brien, Jacob, Heyam Hayder, Yara Zayed, and Chun Peng. 2018. <span>“Overview of <span>MicroRNA</span> <span>Biogenesis</span>, <span>Mechanisms</span> of <span>Actions</span>, and <span>Circulation</span>.”</span> <em>Frontiers in Endocrinology</em> 9 (August): 402. <a href="https://doi.org/10.3389/fendo.2018.00402">https://doi.org/10.3389/fendo.2018.00402</a>.
</div>
<div id="ref-tomari_microrna_2005" class="csl-entry">
Tomari, Yukihide, and Phillip D. Zamore. 2005. <span>“<span>MicroRNA</span> <span>Biogenesis</span>: <span>Drosha</span> <span>Can</span>’t <span>Cut</span> <span>It</span> Without a <span>Partner</span>.”</span> <em>Current Biology</em> 15 (2): R61–64. <a href="https://doi.org/10.1016/j.cub.2004.12.057">https://doi.org/10.1016/j.cub.2004.12.057</a>.
</div>
</div></section></div> ]]></description>
  <category>E5-coral</category>
  <guid>https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/2024_06_04_ShortStack_mature_v_star.html</guid>
  <pubDate>Mon, 03 Jun 2024 07:00:00 GMT</pubDate>
</item>
<item>
  <title>Comparing ShortStack outputs to miRdeep2</title>
  <dc:creator>Kathleen Durkin</dc:creator>
  <link>https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/2024_05_17_shortstack_mirdeep2_comparisons.html</link>
  <description><![CDATA[ 




<p>Both ShortStack and miRdeep2 are programs for identifying both known and novel miRNAs from a dataset based on an input database of known miRNAs and on expected miRNA size and precursor structures. However, they’re giving pretty different output counts. Today I want to look at how much overlap there is in identified miRNAs between the two.</p>
<p>Rendered code:</p>
<p><a href="https://github.com/urol-e5/deep-dive/blob/main/D-Apul/code/17-Apul-ShortStack-miRdeep2-comparison.md">A. pulchra</a></p>
<p><a href="https://github.com/urol-e5/deep-dive/blob/main/E-Peve/code/17-Peve-ShortStack-miRdeep2-comparison.md">P. evermanni</a></p>
<p><a href="https://github.com/urol-e5/deep-dive/blob/main/F-Pmea/code/17-Pmea-ShortStack-miRdeep2-comparison.md">P. meandrina</a></p>
<section id="summary" class="level2">
<h2 class="anchored" data-anchor-id="summary">Summary</h2>
<table class="table">
<colgroup>
<col style="width: 12%">
<col style="width: 16%">
<col style="width: 23%">
<col style="width: 21%">
<col style="width: 28%">
</colgroup>
<tbody>
<tr class="odd">
<td><strong>Species</strong></td>
<td><strong>Identified miRNAs</strong></td>
<td><strong>miRNAs with database match</strong></td>
<td><strong>Database matches *not* classified as miRNA</strong></td>
<td><strong># of ShortStack miRNAs that are also classified as miRNA by miRdeep2</strong></td>
</tr>
<tr class="even">
<td>A.pulchra</td>
<td>38</td>
<td>24</td>
<td>44</td>
<td>36</td>
</tr>
<tr class="odd">
<td>P.evermanni</td>
<td>46</td>
<td>9</td>
<td>27</td>
<td>30</td>
</tr>
<tr class="even">
<td>P.meandrina</td>
<td>36</td>
<td>9</td>
<td>20</td>
<td>27</td>
</tr>
</tbody>
</table>
<p>I used bedtools intersectBed to find shared sequences in the ShortStack and miRdeep2 mature miRNA output files.</p>
</section>
<section id="notes" class="level2">
<h2 class="anchored" data-anchor-id="notes">Notes</h2>
<p>Interestingly, in all three of the species I saw an example of an miRNA identified by ShortStack that matched <em>two</em> loci identified as miRNAs by miRdeep2.</p>
<p>In one of these examples (A.pulchra), the mature miRNA sequences for both the miRdeep2 miRNAs were identical, but the <em>precursor</em> sequences were different – could this be an example of two different precursors that are processed into the same miRNA?</p>
<pre><code>NC_058072.1_Acropora_millepora_isolate_JS-1_chromosome_7_Amil_v2.1_whole_genome_shotgun_sequence_295614 12623.6     -   24755   24435   0   320 no  -   tca-miR-11646-3p_MIMAT0045620_Tribolium_castaneum_miR-11646-3p  -   -   ugggugucaucuauuauguuuu  aacauaaaagauggcacc  ugggugucaucuauuauguuuuugcuuguuaaaacauaaaagauggcacc  NC_058072.1_Acropora_millepora_isolate_JS-1_chromosome_7_Amil_v2.1_whole_genome_shotgun_sequence:19030617..19030667:+

NC_058072.1_Acropora_millepora_isolate_JS-1_chromosome_7_Amil_v2.1_whole_genome_shotgun_sequence_295613 1.1     -   24449   24435   14  0   no  -   tca-miR-11646-3p_MIMAT0045620_Tribolium_castaneum_miR-11646-3p  -   -   ugggugucaucuauuauguuuu  aauguaacaaaauugacggccaga    aauguaacaaaauugacggccagaagccguacguauguagaaaauguggggugagugccugggugucaucuauuauguuuu   NC_058072.1_Acropora_millepora_isolate_JS-1_chromosome_7_Amil_v2.1_whole_genome_shotgun_sequence:19030558..19030639:+


mature miRNA sequences for these two loci:
ugggugucaucuauuauguuuu
ugggugucaucuauuauguuuu


precursor miRNA sequences for these two loci:
ugggugucaucuauuauguuuuugcuuguuaaaacauaaaagauggcacc
aauguaacaaaauugacggccagaagccguacguauguagaaaauguggggugagugccugggugucaucuauuauguuuu</code></pre>
<p>In the other two cases (P.evermanni and P.meandrina) the pairs of loci had very similar precursor sequences and <em>reversed</em> mature and star sequences! In other words, the mature miRNA sequence for one is almost identical to the miRNA* sequence of the other, and vice versa!</p>
<p>P. evermanni:</p>
<pre><code>Porites_evermani_scaffold_334_234019    5.6     -   969 686 0   283 yes -   gga-miR-12259-5p_MIMAT0050009_Gallus_gallus_miR-12259-5p    -   -   ugcagguacaguuauaaggu    accuuauaacuguaccugccaa  ugcagguacaguuauaagguccccuugguggaccuuauaacuguaccugccaa   Porites_evermani_scaffold_334:153573..153626:-

Porites_evermani_scaffold_334_233889    5.5     -   111 96  0   15  yes -   cpi-miR-9592-5p_MIMAT0037980_Chrysemys_picta_miR-9592-5p    -   -   gaccuuauaacuguaccugc    gcagguacaguuauaaggucc   gcagguacaguuauaagguccaccaaggggaccuuauaacuguaccugc   Porites_evermani_scaffold_334:153576..153625:+


mature miRNA sequences for these two loci:
ugcagguacaguuauaaggu
gaccuuauaacuguaccugc


miRNA* sequences for these two loci:
accuuauaacuguaccugccaa
gcagguacaguuauaaggucc


precursor miRNA sequences for these two loci:
ugcagguacaguuauaagguccccuugguggaccuuauaacuguaccugccaa
gcagguacaguuauaagguccaccaaggggaccuuauaacuguaccugc</code></pre>
<p>P. meandrina:</p>
<pre><code>Pocillopora_meandrina_HIv1___Sc0000000_1750 6153        -   12060   11275   0   785 yes -   hsa-miR-2117_MIMAT0011162_Homo_sapiens_miR-2117 -   -   uguucucucugcaguaagcaugu augcuugcuguaaagagaacuug uguucucucugcaguaagcauguuuugacaugcuugcuguaaagagaacuug    Pocillopora_meandrina_HIv1___Sc0000000:818048..818100:+

Pocillopora_meandrina_HIv1___Sc0000000_34562    10      -   11  9   0   2   yes -   egr-miR-153-5p_MIMAT0037428_Echinococcus_granulosus_miR-153-5p  -   -   augcuuacugcagagagaacaug aaguucucuuuacagcaagcaugucaaa    aaguucucuuuacagcaagcaugucaaaacaugcuuacugcagagagaacaug   Pocillopora_meandrina_HIv1___Sc0000000:818046..818099:-


mature miRNA sequences for these two loci:
uguucucucugcaguaagcaugu
augcuuacugcagagagaacaug


miRNA* sequences for these two loci:
augcuugcuguaaagagaacuug
aaguucucuuuacagcaagcaugucaaa


precursor miRNA sequences for these two loci:
uguucucucugcaguaagcauguuuugacaugcuugcuguaaagagaacuug
aaguucucuuuacagcaagcaugucaaaacaugcuuacugcagagagaacaug</code></pre>
<p>Could this just be a case of miRdeep2 incorrectly distinguishing the mature and star sequences for one of these loci?</p>


</section>

 ]]></description>
  <category>E5-coral</category>
  <guid>https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/2024_05_17_shortstack_mirdeep2_comparisons.html</guid>
  <pubDate>Fri, 17 May 2024 07:00:00 GMT</pubDate>
</item>
<item>
  <title>Summarizing and visualizing ShortStack outputs</title>
  <dc:creator>Kathleen Durkin</dc:creator>
  <link>https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/2024_05_16_shortstack_visualizations.html</link>
  <description><![CDATA[ 




<p>Rendered code:</p>
<p><a href="https://github.com/urol-e5/deep-dive/blob/main/D-Apul/code/13.2.1-Apul-sRNAseq-ShortStack-31bp-fastp-merged-cnidarian_miRBase.md">A. pulchra</a></p>
<p><a href="https://github.com/urol-e5/deep-dive/blob/main/E-Peve/code/08.2-Peve-sRNAseq-ShortStack-31bp-fastp-merged.md">P. evermanni</a></p>
<p><a href="https://github.com/urol-e5/deep-dive/blob/main/F-Pmea/code/13.2.1-Pmea-sRNAseq-ShortStack-31bp-fastp-merged-cnidarian_miRBase.md">P. meandrina</a></p>
<section id="summary" class="level2">
<h2 class="anchored" data-anchor-id="summary">Summary</h2>
<table class="table">
<tbody>
<tr class="odd">
<td></td>
<td><strong>ShortStack</strong></td>
<td><strong>miRdeep2</strong></td>
</tr>
<tr class="even">
<td><strong>Species</strong></td>
<td><strong>Identified miRNAs</strong></td>
<td><strong>miRNAs with database match</strong></td>
</tr>
<tr class="odd">
<td>A.pulchra</td>
<td>38</td>
<td>24</td>
</tr>
<tr class="even">
<td>P.evermanni</td>
<td>46</td>
<td>9</td>
</tr>
<tr class="odd">
<td>P.meandrina</td>
<td>36</td>
<td>9</td>
</tr>
</tbody>
</table>
<p>It looks like all of the ShortStack miRNAs with database matches are matching the annoated cnidarian miRNAs curated by Jill, not standard miRBase entries. These curated cnidarian known miRNAs are almost exclusively from <em>Acropora</em> and <em>Stylophora</em> species, so it makes sense that <em>Acropora pulchra</em> has many more database matches than the other species.</p>
</section>
<section id="a.-pulchra" class="level2">
<h2 class="anchored" data-anchor-id="a.-pulchra">A. pulchra</h2>
<p><img src="https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/https:/github.com/urol-e5/deep-dive/blob/main/D-Apul/output/13.2.1-Apul-sRNAseq-ShortStack-31bp-fastp-merged-cnidarian_miRBase/figures/Apul_ShortStack_miRNA_histogram.png?raw=true" class="img-fluid"></p>
<p><img src="https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/https:/github.com/urol-e5/deep-dive/blob/main/D-Apul/output/13.2.1-Apul-sRNAseq-ShortStack-31bp-fastp-merged-cnidarian_miRBase/figures/Apul_ShortStack_dbmatch_histogram.png?raw=true" class="img-fluid"></p>
<p><img src="https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/https:/github.com/urol-e5/deep-dive/blob/main/D-Apul/output/13.2.1-Apul-sRNAseq-ShortStack-31bp-fastp-merged-cnidarian_miRBase/figures/Apul_ShortStack_venn.png?raw=true" class="img-fluid"></p>
</section>
<section id="p.-meandrina" class="level2">
<h2 class="anchored" data-anchor-id="p.-meandrina">P. meandrina</h2>
<p><img src="https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/https:/github.com/urol-e5/deep-dive/blob/main/E-Peve/output/08.2-Peve-sRNAseq-ShortStack-31bp-fastp-merged/figures/Peve_ShortStack_miRNA_histogram.png?raw=true" class="img-fluid"></p>
<p><img src="https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/https:/github.com/urol-e5/deep-dive/blob/main/E-Peve/output/08.2-Peve-sRNAseq-ShortStack-31bp-fastp-merged/figures/Peve_ShortStack_dbmatch_histogram.png?raw=true" class="img-fluid"></p>
<p><img src="https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/https:/github.com/urol-e5/deep-dive/blob/main/E-Peve/output/08.2-Peve-sRNAseq-ShortStack-31bp-fastp-merged/figures/Peve_ShortStack_venn.png?raw=true" class="img-fluid"></p>
</section>
<section id="p.-evermanni" class="level2">
<h2 class="anchored" data-anchor-id="p.-evermanni">P. evermanni</h2>
<p><img src="https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/https:/github.com/urol-e5/deep-dive/blob/main/F-Pmea/output/13.2.1-Pmea-sRNAseq-ShortStack-31bp-fastp-merged-cnidarian_miRBase/figures/Pmea_ShortStack_miRNA_histogram.png?raw=true" class="img-fluid"></p>
<p><img src="https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/https:/github.com/urol-e5/deep-dive/blob/main/F-Pmea/output/13.2.1-Pmea-sRNAseq-ShortStack-31bp-fastp-merged-cnidarian_miRBase/figures/Pmea_ShortStack_dbmatch_histogram.png?raw=true" class="img-fluid"></p>
<p><img src="https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/https:/github.com/urol-e5/deep-dive/blob/main/F-Pmea/output/13.2.1-Pmea-sRNAseq-ShortStack-31bp-fastp-merged-cnidarian_miRBase/figures/Pmea_ShortStack_venn.png?raw=true" class="img-fluid"></p>


</section>

 ]]></description>
  <category>E5-coral</category>
  <guid>https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/2024_05_16_shortstack_visualizations.html</guid>
  <pubDate>Thu, 16 May 2024 07:00:00 GMT</pubDate>
</item>
<item>
  <title>Generating a genes fasta for P. evermanni</title>
  <dc:creator>Kathleen Durkin</dc:creator>
  <link>https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/2024_02_07_Peve_transcriptome.html</link>
  <description><![CDATA[ 




<p>In the process of running <a href="../../../posts/projects/E5_coral/2024_02_06_RNAseq_kallisto.html">kallisto on the three E5 deep dive species</a>, we realized that there’s no transcriptome FASTA available for <em>P. evermanni</em>. That means we need to generate one!</p>
<p><a href="https://github.com/urol-e5/deep-dive/blob/main/E-Peve/code/12-Peve-RNAseq-kallisto.md">Rendered code</a></p>
<p><u>Related posts:</u><br>
<a href="\posts\projects\E5_coral\2024_02_06_RNAseq_kallisto.qmd">RNAseq abundance quantification (A.Pulchra, P.evermanni, P.meandrina)</a><br>
<a href="\posts\projects\E5_coral\2024_01_31_Peve_kallisto.qmd">P.evermanni RNAseq kallisto debugging</a><br>
<a href="\posts\projects\misc\2024_02_08_bedtools_gffvbed.qmd">Testing bedtools: gff vs bed input file</a></p>
<section id="starter-files" class="level3">
<h3 class="anchored" data-anchor-id="starter-files">Starter files</h3>
<p>The closest file to a <em>P. evermanni</em> transcriptome that we have is a <em>P.evermanni</em> coding sequence (CDS) gff file, and a corresponding genome scaffolds FASTA.</p>
<p>head of gff:</p>
<pre><code>Porites_evermani_scaffold_1 Gmove mRNA 3107 4488 543 - . ID=Peve_00000001;Name=Peve_00000001;start=0;stop=1;cds_size=543 Porites_evermani_scaffold_1 Gmove CDS 3107 3444 . - . Parent=Peve_00000001 
Porites_evermani_scaffold_1 Gmove CDS 4284 4488 . - . Parent=Peve_00000001</code></pre>
<p>A gff file lists information that can be used to identify and retrieve specific sequences. The first column lists the region or scaffold of a reference genome in which the sequence can be found; the third identifies which genomic feature (e.g., mRNA, CDS, UTR) the sequence is; and the fourth and fifth are genomic coordinates for the beginning and end of the sequence. Since we have both the coding sequences gff and a reference fasta, we should be able to extract FASTA sequences for all of the relevant sequences in the gff!</p>
</section>
<section id="extract-cds-sequences" class="level3">
<h3 class="anchored" data-anchor-id="extract-cds-sequences">Extract CDS sequences</h3>
<p>First, it looks like the gff has features labelled a little weirdly. Normally we’d want all of the mRNA sequences, but it looks like this file lists mRNA sequences that include introns. Instead, we want all of the CDS sequences associated with each mRNA (association is denoted in the final column with a parent mRNA ID, e.g.&nbsp;“Parent=Peve_00000001”). That means the first step is to extract all of the CDS sequences from our gff file.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Extract only the CDS sequence lines from the gff</span></span>
<span id="cb2-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">grep</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-w</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'CDS'</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${transcriptome_gff}</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${transcriptome_gff_filtered}</span></span>
<span id="cb2-3"></span>
<span id="cb2-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-n</span> 5 <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${transcriptome_gff_filtered}</span></span></code></pre></div>
</div>
<pre><code>Porites_evermani_scaffold_1 Gmove   CDS 3107    3444    .   -   .   Parent=Peve_00000001
Porites_evermani_scaffold_1 Gmove   CDS 4284    4488    .   -   .   Parent=Peve_00000001
Porites_evermani_scaffold_1 Gmove   CDS 424479  425361  .   -   .   Parent=Peve_00000002
Porites_evermani_scaffold_1 Gmove   CDS 426181  426735  .   -   .   Parent=Peve_00000002
Porites_evermani_scaffold_1 Gmove   CDS 427013  427140  .   -   .   Parent=Peve_00000002</code></pre>
</section>
<section id="convert-gff-to-bed" class="level3">
<h3 class="anchored" data-anchor-id="convert-gff-to-bed">Convert gff to bed</h3>
<p>Then we convert this filtered CDS gff file to a bed file, which has slightly different formatting. We’re doing this because we’ll be using a tool called bedtools getfasta, which can take both gff and bed files, but which I trust more to appropriately parse bed files (though, see post on whether it can handle gff files correctly as well).</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb4-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Ensure bedops can find its dependencies when running</span></span>
<span id="cb4-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">export</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">PATH</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>/home/shared/bedops_linux_x86_64-v2.4.41/bin:<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$PATH</span></span>
<span id="cb4-3"></span>
<span id="cb4-4"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${bedops}</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">/gff2bed</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb4-5">--do-not-sort <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb4-6"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${transcriptome_gff_filtered}</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb4-7"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${transcriptome_bed}</span></span>
<span id="cb4-8"></span>
<span id="cb4-9"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-n</span> 3 <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${transcriptome_gff_filtered}</span></span>
<span id="cb4-10"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span></span>
<span id="cb4-11"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-n</span> 3 <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${transcriptome_bed}</span></span></code></pre></div>
</div>
<pre><code>Porites_evermani_scaffold_1 Gmove   CDS 3107    3444    .   -   .   Parent=Peve_00000001
Porites_evermani_scaffold_1 Gmove   CDS 4284    4488    .   -   .   Parent=Peve_00000001
Porites_evermani_scaffold_1 Gmove   CDS 424479  425361  .   -   .   Parent=Peve_00000002

Porites_evermani_scaffold_1 3106    3444    .   .   -   Gmove   CDS .   Parent=Peve_00000001
Porites_evermani_scaffold_1 4283    4488    .   .   -   Gmove   CDS .   Parent=Peve_00000001
Porites_evermani_scaffold_1 424478  425361  .   .   -   Gmove   CDS .   Parent=Peve_00000002</code></pre>
</section>
<section id="generating-a-transcriptome-fasta" class="level3">
<h3 class="anchored" data-anchor-id="generating-a-transcriptome-fasta">Generating a transcriptome FASTA</h3>
<p>The basic approach to generating this transcriptome makes use of the fact that each CDS sequence in our bed file is assigned a “parent” mRNA, denoted by a parent Id in the last column (e.g., “Parent=Peve_00000001”). Each sequence with the same parent ID should be used to a) retrieve a FASTA for that sequence, and b) concatenate all of the FASTAs with the same parent ID into a single, labelled gene FASTA. The below code will iterate through our entire bed file and do this for each parent ID and its associated sequences.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb6-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load bash variables into memory</span></span>
<span id="cb6-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">source</span> .bashvars</span>
<span id="cb6-3"></span>
<span id="cb6-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Navigate to correct directory and make output file</span></span>
<span id="cb6-5"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cd</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${transcriptome_dir}</span></span>
<span id="cb6-6"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${transcriptome_fasta_name}</span></span>
<span id="cb6-7"></span>
<span id="cb6-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Helper list for processing all parent IDs</span></span>
<span id="cb6-9"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">processed_ids</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">()</span></span>
<span id="cb6-10"></span>
<span id="cb6-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">######################################################</span></span>
<span id="cb6-12"></span>
<span id="cb6-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Helper function to concatenate and format several bedtools output sequences </span></span>
<span id="cb6-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># into a single, appropriately named contig</span></span>
<span id="cb6-15"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">concatenate_helper()</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb6-16">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">local</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">input_bedtools_fastas</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$1</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb6-17">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">local</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">parent_ID</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$2</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb6-18">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">local</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">reference_name</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span></span>
<span id="cb6-19">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">local</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">positions</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span></span>
<span id="cb6-20">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">local</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">concatenated_sequences</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span></span>
<span id="cb6-21"></span>
<span id="cb6-22">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Read the input line by line</span></span>
<span id="cb6-23">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">while</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">IFS</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">read</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-r</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">line</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">;</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">do</span></span>
<span id="cb6-24">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Check if the line starts with "&gt;"</span></span>
<span id="cb6-25">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">[[</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$line</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"&gt;"</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">*</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">]];</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">then</span></span>
<span id="cb6-26">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Extract reference name and position from the line</span></span>
<span id="cb6-27">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">reference_position</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${line</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Remove "&gt;"</span></span>
<span id="cb6-28">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">reference_name</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$reference_position</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">|</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cut</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-d:</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-f1</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb6-29">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">position</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$reference_position</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">|</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cut</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-d:</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-f2</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb6-30"></span>
<span id="cb6-31">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Append position to the positions variable</span></span>
<span id="cb6-32">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">positions</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$position</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">,"</span></span>
<span id="cb6-33">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span></span>
<span id="cb6-34">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Concatenate sequences</span></span>
<span id="cb6-35">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">concatenated_sequences</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$line</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb6-36">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">fi</span></span>
<span id="cb6-37">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">done</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;&lt;&lt;</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$input_bedtools_fastas</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb6-38"></span>
<span id="cb6-39">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Remove trailing comma from positions</span></span>
<span id="cb6-40">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">positions</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${positions</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span>,<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb6-41"></span>
<span id="cb6-42">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Output the reformatted result</span></span>
<span id="cb6-43">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"&gt;</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$parent_ID</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$reference_name</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">:</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$positions</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb6-44">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$concatenated_sequences</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb6-45"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb6-46"></span>
<span id="cb6-47"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">######################################################</span></span>
<span id="cb6-48"></span>
<span id="cb6-49"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Process your input bed file</span></span>
<span id="cb6-50"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">while</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">IFS</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">read</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-r</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">line</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">;</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">do</span></span>
<span id="cb6-51"></span>
<span id="cb6-52">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># pull the parent ID number for the current line of the bed</span></span>
<span id="cb6-53">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">parentID</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$line</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">|</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">grep</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-o</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Parent=Peve_[0-9]\+'</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb6-54">    </span>
<span id="cb6-55">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Only continue if you haven't already processed the CDS sequences associated with this parent ID</span></span>
<span id="cb6-56">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">[[</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">!</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">" </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${processed_ids</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[@]</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> "</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=~</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">" </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$parentID</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> "</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">]];</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">then</span></span>
<span id="cb6-57"> </span>
<span id="cb6-58">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add the current parentID to the processed list</span></span>
<span id="cb6-59">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">processed_ids</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$parentID</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb6-60"></span>
<span id="cb6-61">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create temporary files to store intermediate results</span></span>
<span id="cb6-62">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">temp_CDS_bed_file</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mktemp</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb6-63">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">temp_bedtools_fasta_file</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mktemp</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb6-64"></span>
<span id="cb6-65">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Grab all of the CDS sequences with the same parent ID and write to temporary file</span></span>
<span id="cb6-66">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">grep</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$parentID</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${transcriptome_bed}</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$temp_CDS_bed_file</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb6-67"></span>
<span id="cb6-68">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Use bedtools to extract corresponding FASTAs and write to temporary file</span></span>
<span id="cb6-69">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${programs_array</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>bedtools<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">}</span> getfasta <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-fi</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${genome_fasta}</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-bed</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$temp_CDS_bed_file</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-fo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$temp_bedtools_fasta_file</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb6-70"></span>
<span id="cb6-71">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Use our helper function to concatenate and format all of these CDS fastas into a single contig</span></span>
<span id="cb6-72">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">concatenated_fasta</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">concatenate_helper</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$temp_bedtools_fasta_file</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$parentID</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb6-73"> </span>
<span id="cb6-74">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add the concatenated CDS fasta to our output file on a new line</span></span>
<span id="cb6-75">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$concatenated_fasta</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${transcriptome_fasta}</span></span>
<span id="cb6-76"></span>
<span id="cb6-77">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Remove the temporary files</span></span>
<span id="cb6-78">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rm</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$temp_CDS_bed_file</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$temp_bedtools_fasta_file</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb6-79">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">fi</span></span>
<span id="cb6-80"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">done</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${transcriptome_bed}</span></span>
<span id="cb6-81"></span>
<span id="cb6-82"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># The output file ends up having a blank first line before the data, so delete that unwanted empty first line</span></span>
<span id="cb6-83"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sed</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-i</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'1{/^$/d}'</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${transcriptome_fasta}</span></span></code></pre></div>
</div>
<p>Now we have a transcriptome FASTA the can be used for kallisto abundance quantification!</p>


</section>

 ]]></description>
  <category>E5-coral</category>
  <guid>https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/2024_02_07_Peve_transcriptome.html</guid>
  <pubDate>Wed, 07 Feb 2024 08:00:00 GMT</pubDate>
</item>
<item>
  <title>RNAseq abundance quantification (A.Pulchra, P.evermanni, P.meandrina)</title>
  <dc:creator>Kathleen Durkin</dc:creator>
  <link>https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/2024_02_06_RNAseq_kallisto.html</link>
  <description><![CDATA[ 




<p>I’m currently working on trying a few types of gene expression analysis with the E5 RNAseq and sRNAseq data we have for <em>A. Pulchra</em>, <em>P. evermanni</em>, and <em>P. meandrina,</em> but before I can do any analysis work we need abundance count matrices for the RNAseq data from each of the three species. This notebook post is a write up of the steps involved in quantifying transcript abundances using kallisto. I’ll only be going step-by-step through the code used for <em>P. meandrina</em>, but the workflow is the same for all three species, and the rendered code for all three species is linked below.<br>
</p>
<p><u>Rendered code (.md files):</u><br>
- <a href="https://github.com/urol-e5/deep-dive/blob/main/D-Apul/code/14-Apul-RNAseq-kallisto.md">A. pulchra</a><br>
- <a href="https://github.com/urol-e5/deep-dive/blob/main/E-Peve/code/12-Peve-RNAseq-kallisto.md">P. evermanni</a><br>
- <a href="https://github.com/urol-e5/deep-dive/blob/main/F-Pmea/code/14-Pmea-RNAseq-kallisto.md">P. meandrina</a></p>
<p><u>Required Inputs:</u><br>
- Trimmed RNAseq reads (e.g.&nbsp;<code>.fastq.gz</code>)<br>
- Transcriptome fasta (e.g.&nbsp;<code>*.fasta</code>, <code>*.fna</code>, <code>*.fa</code>)</p>
<p><u>Output:</u><br>
- Counts matrix representing the abundance of sequenced transcripts</p>
<p><u>Tools/software:</u><br>
- kallisto v.0.50.1<br>
- TrinityRNASeq v.2.12.0<br>
</p>
<section id="kallisto-workflow" class="level2">
<h2 class="anchored" data-anchor-id="kallisto-workflow">Kallisto Workflow</h2>
<section id="download-trimmed-reads-and-transcriptome" class="level3">
<h3 class="anchored" data-anchor-id="download-trimmed-reads-and-transcriptome">Download <a href="https://github.com/urol-e5/deep-dive/blob/main/F-Pmea/code/14-Pmea-RNAseq-kallisto.md#download-trimmed-rnaseq-reads">trimmed reads</a> and <a href="https://github.com/urol-e5/deep-dive/blob/main/F-Pmea/code/14-Pmea-RNAseq-kallisto.md#retrieve-the-reference-transcriptome">transcriptome</a></h3>
<p>If you don’t already have them in an accessible directory, download the trimmed RNAseq reads and transcriptome file you’ll be using</p>
</section>
<section id="build-kallisto-index" class="level3">
<h3 class="anchored" data-anchor-id="build-kallisto-index">Build <a href="https://github.com/urol-e5/deep-dive/blob/main/F-Pmea/code/14-Pmea-RNAseq-kallisto.md#building-index">kallisto index</a></h3>
<p>The first step is to build a kallisto index. In this step, kallisto takes your reference transcriptome as input and breaks each transcript into “k-mers,” or shorter sequences that are k nucleotides long. It then “indexes” these k-mers, storing each k-mer and its transcript association in a data structure for more efficient retrieval during the pseudoalignment step.</p>
</section>
<section id="sample-quantification" class="level3">
<h3 class="anchored" data-anchor-id="sample-quantification">Sample <a href="https://github.com/urol-e5/deep-dive/blob/main/F-Pmea/code/14-Pmea-RNAseq-kallisto.md#sample-quantification">quantification</a></h3>
<p>Next is quantification, which take both the index you just constructed and your trimmed RNAseq read, and makes use of pseudoalignment, a process that is much faster and more efficient than aligning each full read to a full transcript. Briefly, each read is broken up into k-mers, which are then mapped to the index to see which indexed transcript k-mers may match the read k-mers. Kallisto then calculates a probability score for each read/transcript pair, evaluating the likelihood that a given read originated from each transcript. These scores are then used to estimate transcript abundance.</p>
</section>
<section id="build-count-matrix-for-all-samples" class="level3">
<h3 class="anchored" data-anchor-id="build-count-matrix-for-all-samples">Build <a href="https://github.com/urol-e5/deep-dive/blob/main/F-Pmea/code/14-Pmea-RNAseq-kallisto.md#trinity-matrix-with-kallisto-output">count matrix</a> for all samples</h3>
<p>The kallisto quantification process can only take one sample (i.e., one pair of reads) at a time, so as a last step we build a counts matrix that lists the transcript abundances for all of our samples in a single file.</p>
</section>
<section id="summary" class="level3">
<h3 class="anchored" data-anchor-id="summary">Summary</h3>
<p><u>A. pulchra:</u><br>
sample 140 – 47M reads processed (61.4% mapped)<br>
sample 145 – 42M reads processed (65.3% mapped)<br>
sample 150 – 43M reads processed (47.0% mapped)<br>
sample 173 – 47M reads processed (60.7% mapped)<br>
sample 178 – 42M reads processed (59.3% mapped)<br>
</p>
<p><u>P. evermanni:</u><br>
sample 71 – 50M reads processed (35.3% mapped)<br>
sample 73 – 51M reads processed (29.8% mapped)<br>
sample 76 – 49M reads processed (35.6% mapped)<br>
sample 79 – 49M reads processed (31.9% mapped)<br>
sample 82 – 48M reads processed (37.3% mapped)</p>
<p><u>P. meandrina:</u><br>
sample 47 – 54M reads processed (26.1% mapped)<br>
sample 48 – 51M reads processed (25.3% mapped)<br>
sample 50 – 55M reads processed (31.1% mapped)<br>
sample 53 – 53M reads processed (31.8% mapped)<br>
sample 57 – 42M reads processed (21.7% mapped)</p>


</section>
</section>

 ]]></description>
  <category>E5-coral</category>
  <guid>https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/2024_02_06_RNAseq_kallisto.html</guid>
  <pubDate>Tue, 06 Feb 2024 08:00:00 GMT</pubDate>
</item>
<item>
  <title>P.evermanni RNAseq kallisto debugging</title>
  <dc:creator>Kathleen Durkin</dc:creator>
  <link>https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/2024_01_31_Peve_kallisto.html</link>
  <description><![CDATA[ 




<p>I’m currently trying to quantify RNA abundances using RNAseq data from the three E5 deep dive species, and I’m running into some issues for <em>P. evermanni</em>.</p>
<p>Links:</p>
<ul>
<li><a href="https://github.com/urol-e5/deep-dive/blob/main/E-Peve/code/12-Peve-RNAseq-kallisto.Rmd">code (.Rmd)</a></li>
<li><a href="https://github.com/urol-e5/deep-dive/blob/main/E-Peve/code/12-Peve-RNAseq-kallisto.md">knitted file (.md)</a></li>
<li><a href="https://github.com/RobertsLab/resources/issues/1793">github issue</a></li>
</ul>
<p>There’s no published transcriptome fasta for <em>P. evermanni</em>, so instead I’m using a published CDS gff file and associated scaffold genome fasta to assemble a de novo reference transcriptome fasta.</p>
<p>I first used bedtools getfasta to extract fasta sequences for everything listed in the original CDS gff file, but ended up with duplicate sequences, which interferes with kallisto indexing. While trying (and failing) to remove duplicates with the fastx_toolkit fastx_collapser, Steven pointed out that the gff file (image below) I’m using contains sequences labeled as both CDS and mRNA sequences, and suggested I use only those labeled as mRNA.</p>
<p><img src="https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/images/Screenshot (228).png" class="img-fluid"></p>
<p>I selected only sequecnes labelled as “mRNA” in the gff, extracted those sequences fastas from the scaffold reference, and was able to successfully build a kallisto index, however I was given a warning that kallisto index had identified 10,722,052 non-ACGUT characters in the 40,389 input sequences (or ~265 non-ACGUT characters per sequence!). Quickly looking through some of the extracted sequence fastas, I found some of them contain long internal stretches of N characters.</p>
<p><img src="https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/images/Screenshot (229).png" class="img-fluid"></p>
<p>Sam was able to inform me that this is due to the reference fasta I’m using to extract mRNA fastas. The reference is a scaffold, which characteristically contains arbitrary stretches of Ns connecting known sequences to others in the same region. Steven then also noticed that the gff file seems to be improperly labeled, with mRNA sequences that actually contain several CDS regions <em>and introns</em>, which could interfere with pseudoalignment. Instead, of using the labelled mRNAs, I may need to extract all the sequences labelled as CDS from the gff, obtain sequences fastas, group and concatenate by “Parent” (source mRNA) to exclude all of the introns, and then use those concatenated CDS fasta sequences as a reference for kallisto.</p>
<p>Some pseudo code for doing this:</p>
<p>start with original.gff, which contains CDS, mRNA, UTR, etc. sequences</p>
<p><code>grep -w "CDS" original.gff &gt; filtered.gff</code></p>
<p>now I have a filtered gff that only contains info for CDS sequences in a format that looks like:</p>
<p>blahblahblahblahblahblahblah Parent=Peve_00000001<br>
blahblahblahblahblahblahblah Parent=Peve_00000001<br>
blahblahblahblahblahblahblah Parent=Peve_00000001<br>
blahblahblahblahblahblahblah Parent=Peve_00000002<br>
blahblahblahblahblahblahblah Parent=Peve_00000002<br>
…</p>
<p>where each Parent ID (“Parent=Peve_00000001”) groups together CDS sequences that originate from the same mRNA. To get full concatenated fasta sequences for each mRNA I’ll do:</p>
<pre><code>for i in #LinesInFiltered.gff:

  get parentID of filtered.gff line i

  if parentID not already in final.fasta:

    extract all lines in filtered.gff with parentID
    bedtools to get each lines' fasta sequence
    concatenate all of these fastas
    assign appropriate ID that includes parentID to concatenated fasta
    add this parentID.fasta to final.fasta</code></pre>
<p>this final.fasta should contain the same number of sequence fastas as unique parentIDs in filtered.gff</p>



 ]]></description>
  <category>E5-coral</category>
  <guid>https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/2024_01_31_Peve_kallisto.html</guid>
  <pubDate>Wed, 31 Jan 2024 08:00:00 GMT</pubDate>
</item>
<item>
  <title>P.meandrina sRNA: miRdeep2 and 3 species sRNA comparison</title>
  <dc:creator>Kathleen Durkin</dc:creator>
  <link>https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/2023_12_05_E5_coral.html</link>
  <description><![CDATA[ 




<p>The <a href="https://github.com/urol-e5/deep-dive/blob/main/F-Pmea/code/11-Pmea-sRNAseq-miRdeep2.md"><em>P.meandrina</em> miRdeep2</a> finished running!</p>
<p>A quick comparison of the different miRNA ID approaches for the three species we’ve been looking at:</p>
<table class="table">
<colgroup>
<col style="width: 17%">
<col style="width: 21%">
<col style="width: 12%">
<col style="width: 12%">
<col style="width: 17%">
<col style="width: 16%">
</colgroup>
<thead>
<tr class="header">
<th></th>
<th>miRTrace</th>
<th>MirMachine</th>
<th>BLASTn<br>
(E-val=10)</th>
<th>miRdeep2</th>
<th>ShortStack</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><em>A. pulchra<br>
</em>(<em>A.millepora</em> for genome-based)</td>
<td>lophotrochozoa, rodents, primates,</td>
<td><p>Predicted loci: <strong>109</strong></p>
<p>Unique families: <strong>11</strong></p></td>
<td><p>miRBase: <strong>19,120,159</strong></p>
<p>MirGene: <strong>19,037,617</strong></p></td>
<td><p>Predicted miRNAs: <strong>4,553</strong></p>
<p>Matches to known miRNAs: <strong>4,137</strong></p>
<p>Novel miRNAs: <strong>416</strong></p></td>
<td><p>Potential loci: <strong>18,772</strong></p>
<p>miRBase matches: <strong>46</strong></p>
<p># characterized as miRNA: <strong>0</strong></p></td>
</tr>
<tr class="even">
<td><em>P. evermanni</em></td>
<td>insects</td>
<td><p>Predicted loci: <strong>83</strong></p>
<p>Unique familes: <strong>15</strong></p></td>
<td><p>miRBase: <strong>8,824,359</strong></p>
<p>MirGene: <strong>8,783,659</strong></p></td>
<td><p>Predicted miRNAs: <strong>5,812</strong></p>
<p>Matches to known miRNAS: <strong>5,096</strong></p>
<p>Novel miRNAs: <strong>716</strong></p></td>
<td><p>Potential loci: <strong>15,040</strong></p>
<p>miRBase matches: <strong>25</strong></p>
<p># characterized as miRNA: <strong>0</strong></p></td>
</tr>
<tr class="odd">
<td><em>P. meandrina</em></td>
<td>nematode, insects, lophotrochozoa, primates</td>
<td><p>Predicted loci: <strong>40</strong></p>
<p>Unique families: <strong>7</strong></p></td>
<td><p>miRBase: <strong>13,708,946</strong></p>
<p>MirGene: <strong>13,614,786</strong></p></td>
<td><p>Predicted miRNAs: <strong>2,429</strong></p>
<p>Matches to known miRNAs: <strong>2,143</strong></p>
<p>Novel miRNAs: <strong>286</strong></p></td>
<td><p>Potential loci: <strong>7,306</strong></p>
<p>miRBase matches: <strong>86</strong></p>
<p># characterized as miRNA: <strong>0</strong></p></td>
</tr>
</tbody>
</table>



 ]]></description>
  <category>E5-coral</category>
  <guid>https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/2023_12_05_E5_coral.html</guid>
  <pubDate>Tue, 05 Dec 2023 08:00:00 GMT</pubDate>
</item>
<item>
  <title>P.meandrina sRNA: MirMachine, ShortStack</title>
  <dc:creator>Kathleen Durkin</dc:creator>
  <link>https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/2023_11_30_E5_coral.html</link>
  <description><![CDATA[ 




<p>More on P.meandrina sRNA investigation</p>
<p><a href="https://github.com/urol-e5/deep-dive/blob/main/F-Pmea/code/12-Pmea-sRNAseq-MirMachine.html"><em>P.meandrina</em> MirMachine</a></p>
<p><a href="https://github.com/urol-e5/deep-dive/blob/main/F-Pmea/code/13-Pmea-sRNAseq-ShortStack.md"><em>P.meandrina</em> ShortStack</a></p>
<p><em>P.meandrina</em> miRdeep2 (incomplete)</p>



 ]]></description>
  <category>E5-coral</category>
  <guid>https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/2023_11_30_E5_coral.html</guid>
  <pubDate>Thu, 30 Nov 2023 08:00:00 GMT</pubDate>
</item>
<item>
  <title>P.meandrina sRNA: trimming, miRTrace, BLASTn</title>
  <dc:creator>Kathleen Durkin</dc:creator>
  <link>https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/2023_11_14_E5_coral.html</link>
  <description><![CDATA[ 




<p>Modified Sam’s code for <em>P.meandrina</em> sRNA <a href="https://github.com/urol-e5/deep-dive/blob/main/F-Pmea/code/08-Pmea-sRNAseq-trimming.md">trimming</a>, <a href="https://github.com/urol-e5/deep-dive/blob/main/F-Pmea/code/09-Pmea-sRNAseq-miRTrace.md">miRTrace</a>, and <a href="https://github.com/urol-e5/deep-dive/blob/main/F-Pmea/code/10-Pmea-sRNAseq-BLASTn.md">BLASTn</a>.</p>



 ]]></description>
  <category>E5-coral</category>
  <guid>https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/2023_11_14_E5_coral.html</guid>
  <pubDate>Tue, 14 Nov 2023 08:00:00 GMT</pubDate>
</item>
</channel>
</rss>
